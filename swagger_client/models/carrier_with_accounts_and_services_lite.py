# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CarrierWithAccountsAndServicesLite(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'abbreviation': 'str',
        'display_name': 'str',
        'supports_receiver_accounts': 'bool',
        'split_manifest_by_receiver_account': 'bool',
        'can_track_status_for_receiver_accounts': 'bool',
        'can_track_attachments_for_receiver_accounts': 'bool',
        'carrier_accounts': 'list[CarrierAccountLiteWithServices]',
        'custom_field_sets': 'list[CustomFieldSet]',
        'custom_fields_class': 'str',
        'accepts_despatch_times': 'bool',
        'can_deliver_to_post_office_boxes': 'bool',
        'company_carrier_custom_field_sets': 'list[CompanyCarrierCustomFieldSetList]',
        'carrier_logo_file_name': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'abbreviation': 'abbreviation',
        'display_name': 'displayName',
        'supports_receiver_accounts': 'supportsReceiverAccounts',
        'split_manifest_by_receiver_account': 'splitManifestByReceiverAccount',
        'can_track_status_for_receiver_accounts': 'canTrackStatusForReceiverAccounts',
        'can_track_attachments_for_receiver_accounts': 'canTrackAttachmentsForReceiverAccounts',
        'carrier_accounts': 'carrierAccounts',
        'custom_field_sets': 'customFieldSets',
        'custom_fields_class': 'customFieldsClass',
        'accepts_despatch_times': 'acceptsDespatchTimes',
        'can_deliver_to_post_office_boxes': 'canDeliverToPostOfficeBoxes',
        'company_carrier_custom_field_sets': 'companyCarrierCustomFieldSets',
        'carrier_logo_file_name': 'carrierLogoFileName'
    }

    def __init__(self, id=None, name=None, abbreviation=None, display_name=None, supports_receiver_accounts=None, split_manifest_by_receiver_account=None, can_track_status_for_receiver_accounts=None, can_track_attachments_for_receiver_accounts=None, carrier_accounts=None, custom_field_sets=None, custom_fields_class=None, accepts_despatch_times=None, can_deliver_to_post_office_boxes=None, company_carrier_custom_field_sets=None, carrier_logo_file_name=None):  # noqa: E501
        """CarrierWithAccountsAndServicesLite - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._abbreviation = None
        self._display_name = None
        self._supports_receiver_accounts = None
        self._split_manifest_by_receiver_account = None
        self._can_track_status_for_receiver_accounts = None
        self._can_track_attachments_for_receiver_accounts = None
        self._carrier_accounts = None
        self._custom_field_sets = None
        self._custom_fields_class = None
        self._accepts_despatch_times = None
        self._can_deliver_to_post_office_boxes = None
        self._company_carrier_custom_field_sets = None
        self._carrier_logo_file_name = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if abbreviation is not None:
            self.abbreviation = abbreviation
        if display_name is not None:
            self.display_name = display_name
        if supports_receiver_accounts is not None:
            self.supports_receiver_accounts = supports_receiver_accounts
        if split_manifest_by_receiver_account is not None:
            self.split_manifest_by_receiver_account = split_manifest_by_receiver_account
        if can_track_status_for_receiver_accounts is not None:
            self.can_track_status_for_receiver_accounts = can_track_status_for_receiver_accounts
        if can_track_attachments_for_receiver_accounts is not None:
            self.can_track_attachments_for_receiver_accounts = can_track_attachments_for_receiver_accounts
        if carrier_accounts is not None:
            self.carrier_accounts = carrier_accounts
        if custom_field_sets is not None:
            self.custom_field_sets = custom_field_sets
        if custom_fields_class is not None:
            self.custom_fields_class = custom_fields_class
        if accepts_despatch_times is not None:
            self.accepts_despatch_times = accepts_despatch_times
        if can_deliver_to_post_office_boxes is not None:
            self.can_deliver_to_post_office_boxes = can_deliver_to_post_office_boxes
        if company_carrier_custom_field_sets is not None:
            self.company_carrier_custom_field_sets = company_carrier_custom_field_sets
        if carrier_logo_file_name is not None:
            self.carrier_logo_file_name = carrier_logo_file_name

    @property
    def id(self):
        """Gets the id of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The id of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CarrierWithAccountsAndServicesLite.


        :param id: The id of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The name of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CarrierWithAccountsAndServicesLite.


        :param name: The name of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def abbreviation(self):
        """Gets the abbreviation of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The abbreviation of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: str
        """
        return self._abbreviation

    @abbreviation.setter
    def abbreviation(self, abbreviation):
        """Sets the abbreviation of this CarrierWithAccountsAndServicesLite.


        :param abbreviation: The abbreviation of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: str
        """

        self._abbreviation = abbreviation

    @property
    def display_name(self):
        """Gets the display_name of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The display_name of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CarrierWithAccountsAndServicesLite.


        :param display_name: The display_name of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def supports_receiver_accounts(self):
        """Gets the supports_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The supports_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: bool
        """
        return self._supports_receiver_accounts

    @supports_receiver_accounts.setter
    def supports_receiver_accounts(self, supports_receiver_accounts):
        """Sets the supports_receiver_accounts of this CarrierWithAccountsAndServicesLite.


        :param supports_receiver_accounts: The supports_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: bool
        """

        self._supports_receiver_accounts = supports_receiver_accounts

    @property
    def split_manifest_by_receiver_account(self):
        """Gets the split_manifest_by_receiver_account of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The split_manifest_by_receiver_account of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: bool
        """
        return self._split_manifest_by_receiver_account

    @split_manifest_by_receiver_account.setter
    def split_manifest_by_receiver_account(self, split_manifest_by_receiver_account):
        """Sets the split_manifest_by_receiver_account of this CarrierWithAccountsAndServicesLite.


        :param split_manifest_by_receiver_account: The split_manifest_by_receiver_account of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: bool
        """

        self._split_manifest_by_receiver_account = split_manifest_by_receiver_account

    @property
    def can_track_status_for_receiver_accounts(self):
        """Gets the can_track_status_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The can_track_status_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: bool
        """
        return self._can_track_status_for_receiver_accounts

    @can_track_status_for_receiver_accounts.setter
    def can_track_status_for_receiver_accounts(self, can_track_status_for_receiver_accounts):
        """Sets the can_track_status_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.


        :param can_track_status_for_receiver_accounts: The can_track_status_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: bool
        """

        self._can_track_status_for_receiver_accounts = can_track_status_for_receiver_accounts

    @property
    def can_track_attachments_for_receiver_accounts(self):
        """Gets the can_track_attachments_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The can_track_attachments_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: bool
        """
        return self._can_track_attachments_for_receiver_accounts

    @can_track_attachments_for_receiver_accounts.setter
    def can_track_attachments_for_receiver_accounts(self, can_track_attachments_for_receiver_accounts):
        """Sets the can_track_attachments_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.


        :param can_track_attachments_for_receiver_accounts: The can_track_attachments_for_receiver_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: bool
        """

        self._can_track_attachments_for_receiver_accounts = can_track_attachments_for_receiver_accounts

    @property
    def carrier_accounts(self):
        """Gets the carrier_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The carrier_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: list[CarrierAccountLiteWithServices]
        """
        return self._carrier_accounts

    @carrier_accounts.setter
    def carrier_accounts(self, carrier_accounts):
        """Sets the carrier_accounts of this CarrierWithAccountsAndServicesLite.


        :param carrier_accounts: The carrier_accounts of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: list[CarrierAccountLiteWithServices]
        """

        self._carrier_accounts = carrier_accounts

    @property
    def custom_field_sets(self):
        """Gets the custom_field_sets of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The custom_field_sets of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: list[CustomFieldSet]
        """
        return self._custom_field_sets

    @custom_field_sets.setter
    def custom_field_sets(self, custom_field_sets):
        """Sets the custom_field_sets of this CarrierWithAccountsAndServicesLite.


        :param custom_field_sets: The custom_field_sets of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: list[CustomFieldSet]
        """

        self._custom_field_sets = custom_field_sets

    @property
    def custom_fields_class(self):
        """Gets the custom_fields_class of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The custom_fields_class of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: str
        """
        return self._custom_fields_class

    @custom_fields_class.setter
    def custom_fields_class(self, custom_fields_class):
        """Sets the custom_fields_class of this CarrierWithAccountsAndServicesLite.


        :param custom_fields_class: The custom_fields_class of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: str
        """

        self._custom_fields_class = custom_fields_class

    @property
    def accepts_despatch_times(self):
        """Gets the accepts_despatch_times of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The accepts_despatch_times of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: bool
        """
        return self._accepts_despatch_times

    @accepts_despatch_times.setter
    def accepts_despatch_times(self, accepts_despatch_times):
        """Sets the accepts_despatch_times of this CarrierWithAccountsAndServicesLite.


        :param accepts_despatch_times: The accepts_despatch_times of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: bool
        """

        self._accepts_despatch_times = accepts_despatch_times

    @property
    def can_deliver_to_post_office_boxes(self):
        """Gets the can_deliver_to_post_office_boxes of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The can_deliver_to_post_office_boxes of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: bool
        """
        return self._can_deliver_to_post_office_boxes

    @can_deliver_to_post_office_boxes.setter
    def can_deliver_to_post_office_boxes(self, can_deliver_to_post_office_boxes):
        """Sets the can_deliver_to_post_office_boxes of this CarrierWithAccountsAndServicesLite.


        :param can_deliver_to_post_office_boxes: The can_deliver_to_post_office_boxes of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: bool
        """

        self._can_deliver_to_post_office_boxes = can_deliver_to_post_office_boxes

    @property
    def company_carrier_custom_field_sets(self):
        """Gets the company_carrier_custom_field_sets of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The company_carrier_custom_field_sets of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: list[CompanyCarrierCustomFieldSetList]
        """
        return self._company_carrier_custom_field_sets

    @company_carrier_custom_field_sets.setter
    def company_carrier_custom_field_sets(self, company_carrier_custom_field_sets):
        """Sets the company_carrier_custom_field_sets of this CarrierWithAccountsAndServicesLite.


        :param company_carrier_custom_field_sets: The company_carrier_custom_field_sets of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: list[CompanyCarrierCustomFieldSetList]
        """

        self._company_carrier_custom_field_sets = company_carrier_custom_field_sets

    @property
    def carrier_logo_file_name(self):
        """Gets the carrier_logo_file_name of this CarrierWithAccountsAndServicesLite.  # noqa: E501


        :return: The carrier_logo_file_name of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :rtype: str
        """
        return self._carrier_logo_file_name

    @carrier_logo_file_name.setter
    def carrier_logo_file_name(self, carrier_logo_file_name):
        """Sets the carrier_logo_file_name of this CarrierWithAccountsAndServicesLite.


        :param carrier_logo_file_name: The carrier_logo_file_name of this CarrierWithAccountsAndServicesLite.  # noqa: E501
        :type: str
        """

        self._carrier_logo_file_name = carrier_logo_file_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CarrierWithAccountsAndServicesLite, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CarrierWithAccountsAndServicesLite):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
