# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QuoteV2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'company_id': 'int',
        'company': 'CompanyV2',
        'carrier_service_id': 'int',
        'carrier_service': 'CarrierServiceLite',
        'sub_service_id': 'int',
        'sub_service': 'CarrierServiceSubServiceLite',
        'from_carrier_zone_id': 'int',
        'from_carrier_zone': 'ZoneV2',
        'to_carrier_zone_id': 'int',
        'to_carrier_zone': 'ZoneV2',
        'consignment_number': 'str',
        'date_created': 'datetime',
        'created_by_user_id': 'int',
        'despatch_date': 'datetime',
        'despatch_date_utc': 'datetime',
        'despatch_date_local': 'datetime',
        'eta': 'datetime',
        'eta_utc': 'datetime',
        'from_company_location_id': 'int',
        'from_name': 'str',
        'from_contact': 'str',
        'from_phone': 'str',
        'from_email': 'str',
        'from_address_line1': 'str',
        'from_address_line2': 'str',
        'from_location': 'LocationV2',
        'to_location': 'LocationV2',
        'to_company_location_id': 'int',
        'to_name': 'str',
        'to_contact': 'str',
        'to_phone': 'str',
        'to_email': 'str',
        'to_address_line1': 'str',
        'to_address_line2': 'str',
        'special_instructions': 'str',
        'customer_reference': 'str',
        'customer_reference2': 'str',
        'company_carrier_account': 'CompanyCarrierAccountLite',
        'consignment_total': 'ConsignmentTotal',
        'total_weight': 'float',
        'total_cubic': 'float',
        'total_volume': 'float',
        'heaviest_weight': 'float',
        'total_item_count': 'int',
        'inserted_by': 'int',
        'inserted_by_user_name': 'str',
        'permanent_pickup': 'bool',
        'distance': 'float',
        'is_hourly': 'bool',
        'is_test': 'bool',
        'consignment_items': 'list[ConsignmentItemV2]',
        'consignment_custom_status_id': 'int',
        'is_international': 'bool',
        'international_from_city': 'str',
        'international_from_postcode': 'str',
        'international_from_province': 'str',
        'from_country_id': 'int',
        'from_country': 'Country',
        'international_to_city': 'str',
        'international_to_postcode': 'str',
        'international_to_province': 'str',
        'to_country_id': 'int',
        'to_country': 'Country',
        'quote_expiry_date': 'datetime',
        'quote_created_date_utc': 'datetime',
        'quote_created_date_local': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'company_id': 'companyId',
        'company': 'company',
        'carrier_service_id': 'carrierServiceId',
        'carrier_service': 'carrierService',
        'sub_service_id': 'subServiceId',
        'sub_service': 'subService',
        'from_carrier_zone_id': 'fromCarrierZoneId',
        'from_carrier_zone': 'fromCarrierZone',
        'to_carrier_zone_id': 'toCarrierZoneId',
        'to_carrier_zone': 'toCarrierZone',
        'consignment_number': 'consignmentNumber',
        'date_created': 'dateCreated',
        'created_by_user_id': 'createdByUserId',
        'despatch_date': 'despatchDate',
        'despatch_date_utc': 'despatchDateUtc',
        'despatch_date_local': 'despatchDateLocal',
        'eta': 'eta',
        'eta_utc': 'etaUtc',
        'from_company_location_id': 'fromCompanyLocationId',
        'from_name': 'fromName',
        'from_contact': 'fromContact',
        'from_phone': 'fromPhone',
        'from_email': 'fromEmail',
        'from_address_line1': 'fromAddressLine1',
        'from_address_line2': 'fromAddressLine2',
        'from_location': 'fromLocation',
        'to_location': 'toLocation',
        'to_company_location_id': 'toCompanyLocationId',
        'to_name': 'toName',
        'to_contact': 'toContact',
        'to_phone': 'toPhone',
        'to_email': 'toEmail',
        'to_address_line1': 'toAddressLine1',
        'to_address_line2': 'toAddressLine2',
        'special_instructions': 'specialInstructions',
        'customer_reference': 'customerReference',
        'customer_reference2': 'customerReference2',
        'company_carrier_account': 'companyCarrierAccount',
        'consignment_total': 'consignmentTotal',
        'total_weight': 'totalWeight',
        'total_cubic': 'totalCubic',
        'total_volume': 'totalVolume',
        'heaviest_weight': 'heaviestWeight',
        'total_item_count': 'totalItemCount',
        'inserted_by': 'insertedBy',
        'inserted_by_user_name': 'insertedByUserName',
        'permanent_pickup': 'permanentPickup',
        'distance': 'distance',
        'is_hourly': 'isHourly',
        'is_test': 'isTest',
        'consignment_items': 'consignmentItems',
        'consignment_custom_status_id': 'consignmentCustomStatusId',
        'is_international': 'isInternational',
        'international_from_city': 'internationalFromCity',
        'international_from_postcode': 'internationalFromPostcode',
        'international_from_province': 'internationalFromProvince',
        'from_country_id': 'fromCountryId',
        'from_country': 'fromCountry',
        'international_to_city': 'internationalToCity',
        'international_to_postcode': 'internationalToPostcode',
        'international_to_province': 'internationalToProvince',
        'to_country_id': 'toCountryId',
        'to_country': 'toCountry',
        'quote_expiry_date': 'quoteExpiryDate',
        'quote_created_date_utc': 'quoteCreatedDateUtc',
        'quote_created_date_local': 'quoteCreatedDateLocal'
    }

    def __init__(self, id=None, company_id=None, company=None, carrier_service_id=None, carrier_service=None, sub_service_id=None, sub_service=None, from_carrier_zone_id=None, from_carrier_zone=None, to_carrier_zone_id=None, to_carrier_zone=None, consignment_number=None, date_created=None, created_by_user_id=None, despatch_date=None, despatch_date_utc=None, despatch_date_local=None, eta=None, eta_utc=None, from_company_location_id=None, from_name=None, from_contact=None, from_phone=None, from_email=None, from_address_line1=None, from_address_line2=None, from_location=None, to_location=None, to_company_location_id=None, to_name=None, to_contact=None, to_phone=None, to_email=None, to_address_line1=None, to_address_line2=None, special_instructions=None, customer_reference=None, customer_reference2=None, company_carrier_account=None, consignment_total=None, total_weight=None, total_cubic=None, total_volume=None, heaviest_weight=None, total_item_count=None, inserted_by=None, inserted_by_user_name=None, permanent_pickup=None, distance=None, is_hourly=None, is_test=None, consignment_items=None, consignment_custom_status_id=None, is_international=None, international_from_city=None, international_from_postcode=None, international_from_province=None, from_country_id=None, from_country=None, international_to_city=None, international_to_postcode=None, international_to_province=None, to_country_id=None, to_country=None, quote_expiry_date=None, quote_created_date_utc=None, quote_created_date_local=None):  # noqa: E501
        """QuoteV2 - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._company_id = None
        self._company = None
        self._carrier_service_id = None
        self._carrier_service = None
        self._sub_service_id = None
        self._sub_service = None
        self._from_carrier_zone_id = None
        self._from_carrier_zone = None
        self._to_carrier_zone_id = None
        self._to_carrier_zone = None
        self._consignment_number = None
        self._date_created = None
        self._created_by_user_id = None
        self._despatch_date = None
        self._despatch_date_utc = None
        self._despatch_date_local = None
        self._eta = None
        self._eta_utc = None
        self._from_company_location_id = None
        self._from_name = None
        self._from_contact = None
        self._from_phone = None
        self._from_email = None
        self._from_address_line1 = None
        self._from_address_line2 = None
        self._from_location = None
        self._to_location = None
        self._to_company_location_id = None
        self._to_name = None
        self._to_contact = None
        self._to_phone = None
        self._to_email = None
        self._to_address_line1 = None
        self._to_address_line2 = None
        self._special_instructions = None
        self._customer_reference = None
        self._customer_reference2 = None
        self._company_carrier_account = None
        self._consignment_total = None
        self._total_weight = None
        self._total_cubic = None
        self._total_volume = None
        self._heaviest_weight = None
        self._total_item_count = None
        self._inserted_by = None
        self._inserted_by_user_name = None
        self._permanent_pickup = None
        self._distance = None
        self._is_hourly = None
        self._is_test = None
        self._consignment_items = None
        self._consignment_custom_status_id = None
        self._is_international = None
        self._international_from_city = None
        self._international_from_postcode = None
        self._international_from_province = None
        self._from_country_id = None
        self._from_country = None
        self._international_to_city = None
        self._international_to_postcode = None
        self._international_to_province = None
        self._to_country_id = None
        self._to_country = None
        self._quote_expiry_date = None
        self._quote_created_date_utc = None
        self._quote_created_date_local = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if company_id is not None:
            self.company_id = company_id
        if company is not None:
            self.company = company
        if carrier_service_id is not None:
            self.carrier_service_id = carrier_service_id
        if carrier_service is not None:
            self.carrier_service = carrier_service
        if sub_service_id is not None:
            self.sub_service_id = sub_service_id
        if sub_service is not None:
            self.sub_service = sub_service
        if from_carrier_zone_id is not None:
            self.from_carrier_zone_id = from_carrier_zone_id
        if from_carrier_zone is not None:
            self.from_carrier_zone = from_carrier_zone
        if to_carrier_zone_id is not None:
            self.to_carrier_zone_id = to_carrier_zone_id
        if to_carrier_zone is not None:
            self.to_carrier_zone = to_carrier_zone
        if consignment_number is not None:
            self.consignment_number = consignment_number
        if date_created is not None:
            self.date_created = date_created
        if created_by_user_id is not None:
            self.created_by_user_id = created_by_user_id
        if despatch_date is not None:
            self.despatch_date = despatch_date
        if despatch_date_utc is not None:
            self.despatch_date_utc = despatch_date_utc
        if despatch_date_local is not None:
            self.despatch_date_local = despatch_date_local
        if eta is not None:
            self.eta = eta
        if eta_utc is not None:
            self.eta_utc = eta_utc
        if from_company_location_id is not None:
            self.from_company_location_id = from_company_location_id
        if from_name is not None:
            self.from_name = from_name
        if from_contact is not None:
            self.from_contact = from_contact
        if from_phone is not None:
            self.from_phone = from_phone
        if from_email is not None:
            self.from_email = from_email
        if from_address_line1 is not None:
            self.from_address_line1 = from_address_line1
        if from_address_line2 is not None:
            self.from_address_line2 = from_address_line2
        if from_location is not None:
            self.from_location = from_location
        if to_location is not None:
            self.to_location = to_location
        if to_company_location_id is not None:
            self.to_company_location_id = to_company_location_id
        if to_name is not None:
            self.to_name = to_name
        if to_contact is not None:
            self.to_contact = to_contact
        if to_phone is not None:
            self.to_phone = to_phone
        if to_email is not None:
            self.to_email = to_email
        if to_address_line1 is not None:
            self.to_address_line1 = to_address_line1
        if to_address_line2 is not None:
            self.to_address_line2 = to_address_line2
        if special_instructions is not None:
            self.special_instructions = special_instructions
        if customer_reference is not None:
            self.customer_reference = customer_reference
        if customer_reference2 is not None:
            self.customer_reference2 = customer_reference2
        if company_carrier_account is not None:
            self.company_carrier_account = company_carrier_account
        if consignment_total is not None:
            self.consignment_total = consignment_total
        if total_weight is not None:
            self.total_weight = total_weight
        if total_cubic is not None:
            self.total_cubic = total_cubic
        if total_volume is not None:
            self.total_volume = total_volume
        if heaviest_weight is not None:
            self.heaviest_weight = heaviest_weight
        if total_item_count is not None:
            self.total_item_count = total_item_count
        if inserted_by is not None:
            self.inserted_by = inserted_by
        if inserted_by_user_name is not None:
            self.inserted_by_user_name = inserted_by_user_name
        if permanent_pickup is not None:
            self.permanent_pickup = permanent_pickup
        if distance is not None:
            self.distance = distance
        if is_hourly is not None:
            self.is_hourly = is_hourly
        if is_test is not None:
            self.is_test = is_test
        if consignment_items is not None:
            self.consignment_items = consignment_items
        if consignment_custom_status_id is not None:
            self.consignment_custom_status_id = consignment_custom_status_id
        if is_international is not None:
            self.is_international = is_international
        if international_from_city is not None:
            self.international_from_city = international_from_city
        if international_from_postcode is not None:
            self.international_from_postcode = international_from_postcode
        if international_from_province is not None:
            self.international_from_province = international_from_province
        if from_country_id is not None:
            self.from_country_id = from_country_id
        if from_country is not None:
            self.from_country = from_country
        if international_to_city is not None:
            self.international_to_city = international_to_city
        if international_to_postcode is not None:
            self.international_to_postcode = international_to_postcode
        if international_to_province is not None:
            self.international_to_province = international_to_province
        if to_country_id is not None:
            self.to_country_id = to_country_id
        if to_country is not None:
            self.to_country = to_country
        if quote_expiry_date is not None:
            self.quote_expiry_date = quote_expiry_date
        if quote_created_date_utc is not None:
            self.quote_created_date_utc = quote_created_date_utc
        if quote_created_date_local is not None:
            self.quote_created_date_local = quote_created_date_local

    @property
    def id(self):
        """Gets the id of this QuoteV2.  # noqa: E501


        :return: The id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QuoteV2.


        :param id: The id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def company_id(self):
        """Gets the company_id of this QuoteV2.  # noqa: E501


        :return: The company_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this QuoteV2.


        :param company_id: The company_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def company(self):
        """Gets the company of this QuoteV2.  # noqa: E501


        :return: The company of this QuoteV2.  # noqa: E501
        :rtype: CompanyV2
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this QuoteV2.


        :param company: The company of this QuoteV2.  # noqa: E501
        :type: CompanyV2
        """

        self._company = company

    @property
    def carrier_service_id(self):
        """Gets the carrier_service_id of this QuoteV2.  # noqa: E501


        :return: The carrier_service_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._carrier_service_id

    @carrier_service_id.setter
    def carrier_service_id(self, carrier_service_id):
        """Sets the carrier_service_id of this QuoteV2.


        :param carrier_service_id: The carrier_service_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._carrier_service_id = carrier_service_id

    @property
    def carrier_service(self):
        """Gets the carrier_service of this QuoteV2.  # noqa: E501


        :return: The carrier_service of this QuoteV2.  # noqa: E501
        :rtype: CarrierServiceLite
        """
        return self._carrier_service

    @carrier_service.setter
    def carrier_service(self, carrier_service):
        """Sets the carrier_service of this QuoteV2.


        :param carrier_service: The carrier_service of this QuoteV2.  # noqa: E501
        :type: CarrierServiceLite
        """

        self._carrier_service = carrier_service

    @property
    def sub_service_id(self):
        """Gets the sub_service_id of this QuoteV2.  # noqa: E501


        :return: The sub_service_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._sub_service_id

    @sub_service_id.setter
    def sub_service_id(self, sub_service_id):
        """Sets the sub_service_id of this QuoteV2.


        :param sub_service_id: The sub_service_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._sub_service_id = sub_service_id

    @property
    def sub_service(self):
        """Gets the sub_service of this QuoteV2.  # noqa: E501


        :return: The sub_service of this QuoteV2.  # noqa: E501
        :rtype: CarrierServiceSubServiceLite
        """
        return self._sub_service

    @sub_service.setter
    def sub_service(self, sub_service):
        """Sets the sub_service of this QuoteV2.


        :param sub_service: The sub_service of this QuoteV2.  # noqa: E501
        :type: CarrierServiceSubServiceLite
        """

        self._sub_service = sub_service

    @property
    def from_carrier_zone_id(self):
        """Gets the from_carrier_zone_id of this QuoteV2.  # noqa: E501


        :return: The from_carrier_zone_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._from_carrier_zone_id

    @from_carrier_zone_id.setter
    def from_carrier_zone_id(self, from_carrier_zone_id):
        """Sets the from_carrier_zone_id of this QuoteV2.


        :param from_carrier_zone_id: The from_carrier_zone_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._from_carrier_zone_id = from_carrier_zone_id

    @property
    def from_carrier_zone(self):
        """Gets the from_carrier_zone of this QuoteV2.  # noqa: E501


        :return: The from_carrier_zone of this QuoteV2.  # noqa: E501
        :rtype: ZoneV2
        """
        return self._from_carrier_zone

    @from_carrier_zone.setter
    def from_carrier_zone(self, from_carrier_zone):
        """Sets the from_carrier_zone of this QuoteV2.


        :param from_carrier_zone: The from_carrier_zone of this QuoteV2.  # noqa: E501
        :type: ZoneV2
        """

        self._from_carrier_zone = from_carrier_zone

    @property
    def to_carrier_zone_id(self):
        """Gets the to_carrier_zone_id of this QuoteV2.  # noqa: E501


        :return: The to_carrier_zone_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._to_carrier_zone_id

    @to_carrier_zone_id.setter
    def to_carrier_zone_id(self, to_carrier_zone_id):
        """Sets the to_carrier_zone_id of this QuoteV2.


        :param to_carrier_zone_id: The to_carrier_zone_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._to_carrier_zone_id = to_carrier_zone_id

    @property
    def to_carrier_zone(self):
        """Gets the to_carrier_zone of this QuoteV2.  # noqa: E501


        :return: The to_carrier_zone of this QuoteV2.  # noqa: E501
        :rtype: ZoneV2
        """
        return self._to_carrier_zone

    @to_carrier_zone.setter
    def to_carrier_zone(self, to_carrier_zone):
        """Sets the to_carrier_zone of this QuoteV2.


        :param to_carrier_zone: The to_carrier_zone of this QuoteV2.  # noqa: E501
        :type: ZoneV2
        """

        self._to_carrier_zone = to_carrier_zone

    @property
    def consignment_number(self):
        """Gets the consignment_number of this QuoteV2.  # noqa: E501


        :return: The consignment_number of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._consignment_number

    @consignment_number.setter
    def consignment_number(self, consignment_number):
        """Sets the consignment_number of this QuoteV2.


        :param consignment_number: The consignment_number of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._consignment_number = consignment_number

    @property
    def date_created(self):
        """Gets the date_created of this QuoteV2.  # noqa: E501


        :return: The date_created of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this QuoteV2.


        :param date_created: The date_created of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def created_by_user_id(self):
        """Gets the created_by_user_id of this QuoteV2.  # noqa: E501


        :return: The created_by_user_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._created_by_user_id

    @created_by_user_id.setter
    def created_by_user_id(self, created_by_user_id):
        """Sets the created_by_user_id of this QuoteV2.


        :param created_by_user_id: The created_by_user_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._created_by_user_id = created_by_user_id

    @property
    def despatch_date(self):
        """Gets the despatch_date of this QuoteV2.  # noqa: E501


        :return: The despatch_date of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date

    @despatch_date.setter
    def despatch_date(self, despatch_date):
        """Sets the despatch_date of this QuoteV2.


        :param despatch_date: The despatch_date of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._despatch_date = despatch_date

    @property
    def despatch_date_utc(self):
        """Gets the despatch_date_utc of this QuoteV2.  # noqa: E501


        :return: The despatch_date_utc of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_utc

    @despatch_date_utc.setter
    def despatch_date_utc(self, despatch_date_utc):
        """Sets the despatch_date_utc of this QuoteV2.


        :param despatch_date_utc: The despatch_date_utc of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_utc = despatch_date_utc

    @property
    def despatch_date_local(self):
        """Gets the despatch_date_local of this QuoteV2.  # noqa: E501


        :return: The despatch_date_local of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_local

    @despatch_date_local.setter
    def despatch_date_local(self, despatch_date_local):
        """Sets the despatch_date_local of this QuoteV2.


        :param despatch_date_local: The despatch_date_local of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_local = despatch_date_local

    @property
    def eta(self):
        """Gets the eta of this QuoteV2.  # noqa: E501


        :return: The eta of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this QuoteV2.


        :param eta: The eta of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._eta = eta

    @property
    def eta_utc(self):
        """Gets the eta_utc of this QuoteV2.  # noqa: E501


        :return: The eta_utc of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._eta_utc

    @eta_utc.setter
    def eta_utc(self, eta_utc):
        """Sets the eta_utc of this QuoteV2.


        :param eta_utc: The eta_utc of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._eta_utc = eta_utc

    @property
    def from_company_location_id(self):
        """Gets the from_company_location_id of this QuoteV2.  # noqa: E501


        :return: The from_company_location_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._from_company_location_id

    @from_company_location_id.setter
    def from_company_location_id(self, from_company_location_id):
        """Sets the from_company_location_id of this QuoteV2.


        :param from_company_location_id: The from_company_location_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._from_company_location_id = from_company_location_id

    @property
    def from_name(self):
        """Gets the from_name of this QuoteV2.  # noqa: E501


        :return: The from_name of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._from_name

    @from_name.setter
    def from_name(self, from_name):
        """Sets the from_name of this QuoteV2.


        :param from_name: The from_name of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._from_name = from_name

    @property
    def from_contact(self):
        """Gets the from_contact of this QuoteV2.  # noqa: E501


        :return: The from_contact of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._from_contact

    @from_contact.setter
    def from_contact(self, from_contact):
        """Sets the from_contact of this QuoteV2.


        :param from_contact: The from_contact of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._from_contact = from_contact

    @property
    def from_phone(self):
        """Gets the from_phone of this QuoteV2.  # noqa: E501


        :return: The from_phone of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._from_phone

    @from_phone.setter
    def from_phone(self, from_phone):
        """Sets the from_phone of this QuoteV2.


        :param from_phone: The from_phone of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._from_phone = from_phone

    @property
    def from_email(self):
        """Gets the from_email of this QuoteV2.  # noqa: E501


        :return: The from_email of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._from_email

    @from_email.setter
    def from_email(self, from_email):
        """Sets the from_email of this QuoteV2.


        :param from_email: The from_email of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._from_email = from_email

    @property
    def from_address_line1(self):
        """Gets the from_address_line1 of this QuoteV2.  # noqa: E501


        :return: The from_address_line1 of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._from_address_line1

    @from_address_line1.setter
    def from_address_line1(self, from_address_line1):
        """Sets the from_address_line1 of this QuoteV2.


        :param from_address_line1: The from_address_line1 of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._from_address_line1 = from_address_line1

    @property
    def from_address_line2(self):
        """Gets the from_address_line2 of this QuoteV2.  # noqa: E501


        :return: The from_address_line2 of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._from_address_line2

    @from_address_line2.setter
    def from_address_line2(self, from_address_line2):
        """Sets the from_address_line2 of this QuoteV2.


        :param from_address_line2: The from_address_line2 of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._from_address_line2 = from_address_line2

    @property
    def from_location(self):
        """Gets the from_location of this QuoteV2.  # noqa: E501


        :return: The from_location of this QuoteV2.  # noqa: E501
        :rtype: LocationV2
        """
        return self._from_location

    @from_location.setter
    def from_location(self, from_location):
        """Sets the from_location of this QuoteV2.


        :param from_location: The from_location of this QuoteV2.  # noqa: E501
        :type: LocationV2
        """

        self._from_location = from_location

    @property
    def to_location(self):
        """Gets the to_location of this QuoteV2.  # noqa: E501


        :return: The to_location of this QuoteV2.  # noqa: E501
        :rtype: LocationV2
        """
        return self._to_location

    @to_location.setter
    def to_location(self, to_location):
        """Sets the to_location of this QuoteV2.


        :param to_location: The to_location of this QuoteV2.  # noqa: E501
        :type: LocationV2
        """

        self._to_location = to_location

    @property
    def to_company_location_id(self):
        """Gets the to_company_location_id of this QuoteV2.  # noqa: E501


        :return: The to_company_location_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._to_company_location_id

    @to_company_location_id.setter
    def to_company_location_id(self, to_company_location_id):
        """Sets the to_company_location_id of this QuoteV2.


        :param to_company_location_id: The to_company_location_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._to_company_location_id = to_company_location_id

    @property
    def to_name(self):
        """Gets the to_name of this QuoteV2.  # noqa: E501


        :return: The to_name of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._to_name

    @to_name.setter
    def to_name(self, to_name):
        """Sets the to_name of this QuoteV2.


        :param to_name: The to_name of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._to_name = to_name

    @property
    def to_contact(self):
        """Gets the to_contact of this QuoteV2.  # noqa: E501


        :return: The to_contact of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._to_contact

    @to_contact.setter
    def to_contact(self, to_contact):
        """Sets the to_contact of this QuoteV2.


        :param to_contact: The to_contact of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._to_contact = to_contact

    @property
    def to_phone(self):
        """Gets the to_phone of this QuoteV2.  # noqa: E501


        :return: The to_phone of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._to_phone

    @to_phone.setter
    def to_phone(self, to_phone):
        """Sets the to_phone of this QuoteV2.


        :param to_phone: The to_phone of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._to_phone = to_phone

    @property
    def to_email(self):
        """Gets the to_email of this QuoteV2.  # noqa: E501


        :return: The to_email of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._to_email

    @to_email.setter
    def to_email(self, to_email):
        """Sets the to_email of this QuoteV2.


        :param to_email: The to_email of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._to_email = to_email

    @property
    def to_address_line1(self):
        """Gets the to_address_line1 of this QuoteV2.  # noqa: E501


        :return: The to_address_line1 of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._to_address_line1

    @to_address_line1.setter
    def to_address_line1(self, to_address_line1):
        """Sets the to_address_line1 of this QuoteV2.


        :param to_address_line1: The to_address_line1 of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._to_address_line1 = to_address_line1

    @property
    def to_address_line2(self):
        """Gets the to_address_line2 of this QuoteV2.  # noqa: E501


        :return: The to_address_line2 of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._to_address_line2

    @to_address_line2.setter
    def to_address_line2(self, to_address_line2):
        """Sets the to_address_line2 of this QuoteV2.


        :param to_address_line2: The to_address_line2 of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._to_address_line2 = to_address_line2

    @property
    def special_instructions(self):
        """Gets the special_instructions of this QuoteV2.  # noqa: E501


        :return: The special_instructions of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._special_instructions

    @special_instructions.setter
    def special_instructions(self, special_instructions):
        """Sets the special_instructions of this QuoteV2.


        :param special_instructions: The special_instructions of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._special_instructions = special_instructions

    @property
    def customer_reference(self):
        """Gets the customer_reference of this QuoteV2.  # noqa: E501


        :return: The customer_reference of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference

    @customer_reference.setter
    def customer_reference(self, customer_reference):
        """Sets the customer_reference of this QuoteV2.


        :param customer_reference: The customer_reference of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._customer_reference = customer_reference

    @property
    def customer_reference2(self):
        """Gets the customer_reference2 of this QuoteV2.  # noqa: E501


        :return: The customer_reference2 of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference2

    @customer_reference2.setter
    def customer_reference2(self, customer_reference2):
        """Sets the customer_reference2 of this QuoteV2.


        :param customer_reference2: The customer_reference2 of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._customer_reference2 = customer_reference2

    @property
    def company_carrier_account(self):
        """Gets the company_carrier_account of this QuoteV2.  # noqa: E501


        :return: The company_carrier_account of this QuoteV2.  # noqa: E501
        :rtype: CompanyCarrierAccountLite
        """
        return self._company_carrier_account

    @company_carrier_account.setter
    def company_carrier_account(self, company_carrier_account):
        """Sets the company_carrier_account of this QuoteV2.


        :param company_carrier_account: The company_carrier_account of this QuoteV2.  # noqa: E501
        :type: CompanyCarrierAccountLite
        """

        self._company_carrier_account = company_carrier_account

    @property
    def consignment_total(self):
        """Gets the consignment_total of this QuoteV2.  # noqa: E501


        :return: The consignment_total of this QuoteV2.  # noqa: E501
        :rtype: ConsignmentTotal
        """
        return self._consignment_total

    @consignment_total.setter
    def consignment_total(self, consignment_total):
        """Sets the consignment_total of this QuoteV2.


        :param consignment_total: The consignment_total of this QuoteV2.  # noqa: E501
        :type: ConsignmentTotal
        """

        self._consignment_total = consignment_total

    @property
    def total_weight(self):
        """Gets the total_weight of this QuoteV2.  # noqa: E501


        :return: The total_weight of this QuoteV2.  # noqa: E501
        :rtype: float
        """
        return self._total_weight

    @total_weight.setter
    def total_weight(self, total_weight):
        """Sets the total_weight of this QuoteV2.


        :param total_weight: The total_weight of this QuoteV2.  # noqa: E501
        :type: float
        """

        self._total_weight = total_weight

    @property
    def total_cubic(self):
        """Gets the total_cubic of this QuoteV2.  # noqa: E501


        :return: The total_cubic of this QuoteV2.  # noqa: E501
        :rtype: float
        """
        return self._total_cubic

    @total_cubic.setter
    def total_cubic(self, total_cubic):
        """Sets the total_cubic of this QuoteV2.


        :param total_cubic: The total_cubic of this QuoteV2.  # noqa: E501
        :type: float
        """

        self._total_cubic = total_cubic

    @property
    def total_volume(self):
        """Gets the total_volume of this QuoteV2.  # noqa: E501


        :return: The total_volume of this QuoteV2.  # noqa: E501
        :rtype: float
        """
        return self._total_volume

    @total_volume.setter
    def total_volume(self, total_volume):
        """Sets the total_volume of this QuoteV2.


        :param total_volume: The total_volume of this QuoteV2.  # noqa: E501
        :type: float
        """

        self._total_volume = total_volume

    @property
    def heaviest_weight(self):
        """Gets the heaviest_weight of this QuoteV2.  # noqa: E501


        :return: The heaviest_weight of this QuoteV2.  # noqa: E501
        :rtype: float
        """
        return self._heaviest_weight

    @heaviest_weight.setter
    def heaviest_weight(self, heaviest_weight):
        """Sets the heaviest_weight of this QuoteV2.


        :param heaviest_weight: The heaviest_weight of this QuoteV2.  # noqa: E501
        :type: float
        """

        self._heaviest_weight = heaviest_weight

    @property
    def total_item_count(self):
        """Gets the total_item_count of this QuoteV2.  # noqa: E501


        :return: The total_item_count of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._total_item_count

    @total_item_count.setter
    def total_item_count(self, total_item_count):
        """Sets the total_item_count of this QuoteV2.


        :param total_item_count: The total_item_count of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._total_item_count = total_item_count

    @property
    def inserted_by(self):
        """Gets the inserted_by of this QuoteV2.  # noqa: E501


        :return: The inserted_by of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._inserted_by

    @inserted_by.setter
    def inserted_by(self, inserted_by):
        """Sets the inserted_by of this QuoteV2.


        :param inserted_by: The inserted_by of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._inserted_by = inserted_by

    @property
    def inserted_by_user_name(self):
        """Gets the inserted_by_user_name of this QuoteV2.  # noqa: E501


        :return: The inserted_by_user_name of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._inserted_by_user_name

    @inserted_by_user_name.setter
    def inserted_by_user_name(self, inserted_by_user_name):
        """Sets the inserted_by_user_name of this QuoteV2.


        :param inserted_by_user_name: The inserted_by_user_name of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._inserted_by_user_name = inserted_by_user_name

    @property
    def permanent_pickup(self):
        """Gets the permanent_pickup of this QuoteV2.  # noqa: E501


        :return: The permanent_pickup of this QuoteV2.  # noqa: E501
        :rtype: bool
        """
        return self._permanent_pickup

    @permanent_pickup.setter
    def permanent_pickup(self, permanent_pickup):
        """Sets the permanent_pickup of this QuoteV2.


        :param permanent_pickup: The permanent_pickup of this QuoteV2.  # noqa: E501
        :type: bool
        """

        self._permanent_pickup = permanent_pickup

    @property
    def distance(self):
        """Gets the distance of this QuoteV2.  # noqa: E501


        :return: The distance of this QuoteV2.  # noqa: E501
        :rtype: float
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this QuoteV2.


        :param distance: The distance of this QuoteV2.  # noqa: E501
        :type: float
        """

        self._distance = distance

    @property
    def is_hourly(self):
        """Gets the is_hourly of this QuoteV2.  # noqa: E501


        :return: The is_hourly of this QuoteV2.  # noqa: E501
        :rtype: bool
        """
        return self._is_hourly

    @is_hourly.setter
    def is_hourly(self, is_hourly):
        """Sets the is_hourly of this QuoteV2.


        :param is_hourly: The is_hourly of this QuoteV2.  # noqa: E501
        :type: bool
        """

        self._is_hourly = is_hourly

    @property
    def is_test(self):
        """Gets the is_test of this QuoteV2.  # noqa: E501


        :return: The is_test of this QuoteV2.  # noqa: E501
        :rtype: bool
        """
        return self._is_test

    @is_test.setter
    def is_test(self, is_test):
        """Sets the is_test of this QuoteV2.


        :param is_test: The is_test of this QuoteV2.  # noqa: E501
        :type: bool
        """

        self._is_test = is_test

    @property
    def consignment_items(self):
        """Gets the consignment_items of this QuoteV2.  # noqa: E501


        :return: The consignment_items of this QuoteV2.  # noqa: E501
        :rtype: list[ConsignmentItemV2]
        """
        return self._consignment_items

    @consignment_items.setter
    def consignment_items(self, consignment_items):
        """Sets the consignment_items of this QuoteV2.


        :param consignment_items: The consignment_items of this QuoteV2.  # noqa: E501
        :type: list[ConsignmentItemV2]
        """

        self._consignment_items = consignment_items

    @property
    def consignment_custom_status_id(self):
        """Gets the consignment_custom_status_id of this QuoteV2.  # noqa: E501


        :return: The consignment_custom_status_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._consignment_custom_status_id

    @consignment_custom_status_id.setter
    def consignment_custom_status_id(self, consignment_custom_status_id):
        """Sets the consignment_custom_status_id of this QuoteV2.


        :param consignment_custom_status_id: The consignment_custom_status_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._consignment_custom_status_id = consignment_custom_status_id

    @property
    def is_international(self):
        """Gets the is_international of this QuoteV2.  # noqa: E501


        :return: The is_international of this QuoteV2.  # noqa: E501
        :rtype: bool
        """
        return self._is_international

    @is_international.setter
    def is_international(self, is_international):
        """Sets the is_international of this QuoteV2.


        :param is_international: The is_international of this QuoteV2.  # noqa: E501
        :type: bool
        """

        self._is_international = is_international

    @property
    def international_from_city(self):
        """Gets the international_from_city of this QuoteV2.  # noqa: E501


        :return: The international_from_city of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._international_from_city

    @international_from_city.setter
    def international_from_city(self, international_from_city):
        """Sets the international_from_city of this QuoteV2.


        :param international_from_city: The international_from_city of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._international_from_city = international_from_city

    @property
    def international_from_postcode(self):
        """Gets the international_from_postcode of this QuoteV2.  # noqa: E501


        :return: The international_from_postcode of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._international_from_postcode

    @international_from_postcode.setter
    def international_from_postcode(self, international_from_postcode):
        """Sets the international_from_postcode of this QuoteV2.


        :param international_from_postcode: The international_from_postcode of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._international_from_postcode = international_from_postcode

    @property
    def international_from_province(self):
        """Gets the international_from_province of this QuoteV2.  # noqa: E501


        :return: The international_from_province of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._international_from_province

    @international_from_province.setter
    def international_from_province(self, international_from_province):
        """Sets the international_from_province of this QuoteV2.


        :param international_from_province: The international_from_province of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._international_from_province = international_from_province

    @property
    def from_country_id(self):
        """Gets the from_country_id of this QuoteV2.  # noqa: E501


        :return: The from_country_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._from_country_id

    @from_country_id.setter
    def from_country_id(self, from_country_id):
        """Sets the from_country_id of this QuoteV2.


        :param from_country_id: The from_country_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._from_country_id = from_country_id

    @property
    def from_country(self):
        """Gets the from_country of this QuoteV2.  # noqa: E501


        :return: The from_country of this QuoteV2.  # noqa: E501
        :rtype: Country
        """
        return self._from_country

    @from_country.setter
    def from_country(self, from_country):
        """Sets the from_country of this QuoteV2.


        :param from_country: The from_country of this QuoteV2.  # noqa: E501
        :type: Country
        """

        self._from_country = from_country

    @property
    def international_to_city(self):
        """Gets the international_to_city of this QuoteV2.  # noqa: E501


        :return: The international_to_city of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._international_to_city

    @international_to_city.setter
    def international_to_city(self, international_to_city):
        """Sets the international_to_city of this QuoteV2.


        :param international_to_city: The international_to_city of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._international_to_city = international_to_city

    @property
    def international_to_postcode(self):
        """Gets the international_to_postcode of this QuoteV2.  # noqa: E501


        :return: The international_to_postcode of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._international_to_postcode

    @international_to_postcode.setter
    def international_to_postcode(self, international_to_postcode):
        """Sets the international_to_postcode of this QuoteV2.


        :param international_to_postcode: The international_to_postcode of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._international_to_postcode = international_to_postcode

    @property
    def international_to_province(self):
        """Gets the international_to_province of this QuoteV2.  # noqa: E501


        :return: The international_to_province of this QuoteV2.  # noqa: E501
        :rtype: str
        """
        return self._international_to_province

    @international_to_province.setter
    def international_to_province(self, international_to_province):
        """Sets the international_to_province of this QuoteV2.


        :param international_to_province: The international_to_province of this QuoteV2.  # noqa: E501
        :type: str
        """

        self._international_to_province = international_to_province

    @property
    def to_country_id(self):
        """Gets the to_country_id of this QuoteV2.  # noqa: E501


        :return: The to_country_id of this QuoteV2.  # noqa: E501
        :rtype: int
        """
        return self._to_country_id

    @to_country_id.setter
    def to_country_id(self, to_country_id):
        """Sets the to_country_id of this QuoteV2.


        :param to_country_id: The to_country_id of this QuoteV2.  # noqa: E501
        :type: int
        """

        self._to_country_id = to_country_id

    @property
    def to_country(self):
        """Gets the to_country of this QuoteV2.  # noqa: E501


        :return: The to_country of this QuoteV2.  # noqa: E501
        :rtype: Country
        """
        return self._to_country

    @to_country.setter
    def to_country(self, to_country):
        """Sets the to_country of this QuoteV2.


        :param to_country: The to_country of this QuoteV2.  # noqa: E501
        :type: Country
        """

        self._to_country = to_country

    @property
    def quote_expiry_date(self):
        """Gets the quote_expiry_date of this QuoteV2.  # noqa: E501


        :return: The quote_expiry_date of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._quote_expiry_date

    @quote_expiry_date.setter
    def quote_expiry_date(self, quote_expiry_date):
        """Sets the quote_expiry_date of this QuoteV2.


        :param quote_expiry_date: The quote_expiry_date of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._quote_expiry_date = quote_expiry_date

    @property
    def quote_created_date_utc(self):
        """Gets the quote_created_date_utc of this QuoteV2.  # noqa: E501


        :return: The quote_created_date_utc of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._quote_created_date_utc

    @quote_created_date_utc.setter
    def quote_created_date_utc(self, quote_created_date_utc):
        """Sets the quote_created_date_utc of this QuoteV2.


        :param quote_created_date_utc: The quote_created_date_utc of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._quote_created_date_utc = quote_created_date_utc

    @property
    def quote_created_date_local(self):
        """Gets the quote_created_date_local of this QuoteV2.  # noqa: E501


        :return: The quote_created_date_local of this QuoteV2.  # noqa: E501
        :rtype: datetime
        """
        return self._quote_created_date_local

    @quote_created_date_local.setter
    def quote_created_date_local(self, quote_created_date_local):
        """Sets the quote_created_date_local of this QuoteV2.


        :param quote_created_date_local: The quote_created_date_local of this QuoteV2.  # noqa: E501
        :type: datetime
        """

        self._quote_created_date_local = quote_created_date_local

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QuoteV2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QuoteV2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
