# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RouteDespatchOptionLite(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'despatch_date_local': 'datetime',
        'despatch_date_utc': 'datetime',
        'eta_local': 'datetime',
        'eta_utc': 'datetime',
        'duration_in_minutes': 'float',
        'is_time_window': 'bool',
        'total_days': 'int',
        'total_hours': 'int',
        'total_business_days': 'int',
        'eta_affected_by_public_holidays': 'bool',
        'despatch_date_affected_by_public_holidays': 'bool',
        'business_days_only': 'bool',
        'custom_eta_string': 'str',
        'carrier_accepts_despatch_times': 'bool'
    }

    attribute_map = {
        'despatch_date_local': 'despatchDateLocal',
        'despatch_date_utc': 'despatchDateUtc',
        'eta_local': 'etaLocal',
        'eta_utc': 'etaUtc',
        'duration_in_minutes': 'durationInMinutes',
        'is_time_window': 'isTimeWindow',
        'total_days': 'totalDays',
        'total_hours': 'totalHours',
        'total_business_days': 'totalBusinessDays',
        'eta_affected_by_public_holidays': 'etaAffectedByPublicHolidays',
        'despatch_date_affected_by_public_holidays': 'despatchDateAffectedByPublicHolidays',
        'business_days_only': 'businessDaysOnly',
        'custom_eta_string': 'customEtaString',
        'carrier_accepts_despatch_times': 'carrierAcceptsDespatchTimes'
    }

    def __init__(self, despatch_date_local=None, despatch_date_utc=None, eta_local=None, eta_utc=None, duration_in_minutes=None, is_time_window=None, total_days=None, total_hours=None, total_business_days=None, eta_affected_by_public_holidays=None, despatch_date_affected_by_public_holidays=None, business_days_only=None, custom_eta_string=None, carrier_accepts_despatch_times=None):  # noqa: E501
        """RouteDespatchOptionLite - a model defined in Swagger"""  # noqa: E501
        self._despatch_date_local = None
        self._despatch_date_utc = None
        self._eta_local = None
        self._eta_utc = None
        self._duration_in_minutes = None
        self._is_time_window = None
        self._total_days = None
        self._total_hours = None
        self._total_business_days = None
        self._eta_affected_by_public_holidays = None
        self._despatch_date_affected_by_public_holidays = None
        self._business_days_only = None
        self._custom_eta_string = None
        self._carrier_accepts_despatch_times = None
        self.discriminator = None
        if despatch_date_local is not None:
            self.despatch_date_local = despatch_date_local
        if despatch_date_utc is not None:
            self.despatch_date_utc = despatch_date_utc
        if eta_local is not None:
            self.eta_local = eta_local
        if eta_utc is not None:
            self.eta_utc = eta_utc
        if duration_in_minutes is not None:
            self.duration_in_minutes = duration_in_minutes
        if is_time_window is not None:
            self.is_time_window = is_time_window
        if total_days is not None:
            self.total_days = total_days
        if total_hours is not None:
            self.total_hours = total_hours
        if total_business_days is not None:
            self.total_business_days = total_business_days
        if eta_affected_by_public_holidays is not None:
            self.eta_affected_by_public_holidays = eta_affected_by_public_holidays
        if despatch_date_affected_by_public_holidays is not None:
            self.despatch_date_affected_by_public_holidays = despatch_date_affected_by_public_holidays
        if business_days_only is not None:
            self.business_days_only = business_days_only
        if custom_eta_string is not None:
            self.custom_eta_string = custom_eta_string
        if carrier_accepts_despatch_times is not None:
            self.carrier_accepts_despatch_times = carrier_accepts_despatch_times

    @property
    def despatch_date_local(self):
        """Gets the despatch_date_local of this RouteDespatchOptionLite.  # noqa: E501

        The despatch date in the local time of the point of despatch  # noqa: E501

        :return: The despatch_date_local of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_local

    @despatch_date_local.setter
    def despatch_date_local(self, despatch_date_local):
        """Sets the despatch_date_local of this RouteDespatchOptionLite.

        The despatch date in the local time of the point of despatch  # noqa: E501

        :param despatch_date_local: The despatch_date_local of this RouteDespatchOptionLite.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_local = despatch_date_local

    @property
    def despatch_date_utc(self):
        """Gets the despatch_date_utc of this RouteDespatchOptionLite.  # noqa: E501

        The despatch date in UTC  # noqa: E501

        :return: The despatch_date_utc of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_utc

    @despatch_date_utc.setter
    def despatch_date_utc(self, despatch_date_utc):
        """Sets the despatch_date_utc of this RouteDespatchOptionLite.

        The despatch date in UTC  # noqa: E501

        :param despatch_date_utc: The despatch_date_utc of this RouteDespatchOptionLite.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_utc = despatch_date_utc

    @property
    def eta_local(self):
        """Gets the eta_local of this RouteDespatchOptionLite.  # noqa: E501

        The Estimated Time of Arrival in the local time of the point of delivery  # noqa: E501

        :return: The eta_local of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: datetime
        """
        return self._eta_local

    @eta_local.setter
    def eta_local(self, eta_local):
        """Sets the eta_local of this RouteDespatchOptionLite.

        The Estimated Time of Arrival in the local time of the point of delivery  # noqa: E501

        :param eta_local: The eta_local of this RouteDespatchOptionLite.  # noqa: E501
        :type: datetime
        """

        self._eta_local = eta_local

    @property
    def eta_utc(self):
        """Gets the eta_utc of this RouteDespatchOptionLite.  # noqa: E501

        The Estimated Time of Arrival in UTC  # noqa: E501

        :return: The eta_utc of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: datetime
        """
        return self._eta_utc

    @eta_utc.setter
    def eta_utc(self, eta_utc):
        """Sets the eta_utc of this RouteDespatchOptionLite.

        The Estimated Time of Arrival in UTC  # noqa: E501

        :param eta_utc: The eta_utc of this RouteDespatchOptionLite.  # noqa: E501
        :type: datetime
        """

        self._eta_utc = eta_utc

    @property
    def duration_in_minutes(self):
        """Gets the duration_in_minutes of this RouteDespatchOptionLite.  # noqa: E501

        The estimated duration of the service in minutes  # noqa: E501

        :return: The duration_in_minutes of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: float
        """
        return self._duration_in_minutes

    @duration_in_minutes.setter
    def duration_in_minutes(self, duration_in_minutes):
        """Sets the duration_in_minutes of this RouteDespatchOptionLite.

        The estimated duration of the service in minutes  # noqa: E501

        :param duration_in_minutes: The duration_in_minutes of this RouteDespatchOptionLite.  # noqa: E501
        :type: float
        """

        self._duration_in_minutes = duration_in_minutes

    @property
    def is_time_window(self):
        """Gets the is_time_window of this RouteDespatchOptionLite.  # noqa: E501


        :return: The is_time_window of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: bool
        """
        return self._is_time_window

    @is_time_window.setter
    def is_time_window(self, is_time_window):
        """Sets the is_time_window of this RouteDespatchOptionLite.


        :param is_time_window: The is_time_window of this RouteDespatchOptionLite.  # noqa: E501
        :type: bool
        """

        self._is_time_window = is_time_window

    @property
    def total_days(self):
        """Gets the total_days of this RouteDespatchOptionLite.  # noqa: E501


        :return: The total_days of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: int
        """
        return self._total_days

    @total_days.setter
    def total_days(self, total_days):
        """Sets the total_days of this RouteDespatchOptionLite.


        :param total_days: The total_days of this RouteDespatchOptionLite.  # noqa: E501
        :type: int
        """

        self._total_days = total_days

    @property
    def total_hours(self):
        """Gets the total_hours of this RouteDespatchOptionLite.  # noqa: E501


        :return: The total_hours of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: int
        """
        return self._total_hours

    @total_hours.setter
    def total_hours(self, total_hours):
        """Sets the total_hours of this RouteDespatchOptionLite.


        :param total_hours: The total_hours of this RouteDespatchOptionLite.  # noqa: E501
        :type: int
        """

        self._total_hours = total_hours

    @property
    def total_business_days(self):
        """Gets the total_business_days of this RouteDespatchOptionLite.  # noqa: E501


        :return: The total_business_days of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: int
        """
        return self._total_business_days

    @total_business_days.setter
    def total_business_days(self, total_business_days):
        """Sets the total_business_days of this RouteDespatchOptionLite.


        :param total_business_days: The total_business_days of this RouteDespatchOptionLite.  # noqa: E501
        :type: int
        """

        self._total_business_days = total_business_days

    @property
    def eta_affected_by_public_holidays(self):
        """Gets the eta_affected_by_public_holidays of this RouteDespatchOptionLite.  # noqa: E501


        :return: The eta_affected_by_public_holidays of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: bool
        """
        return self._eta_affected_by_public_holidays

    @eta_affected_by_public_holidays.setter
    def eta_affected_by_public_holidays(self, eta_affected_by_public_holidays):
        """Sets the eta_affected_by_public_holidays of this RouteDespatchOptionLite.


        :param eta_affected_by_public_holidays: The eta_affected_by_public_holidays of this RouteDespatchOptionLite.  # noqa: E501
        :type: bool
        """

        self._eta_affected_by_public_holidays = eta_affected_by_public_holidays

    @property
    def despatch_date_affected_by_public_holidays(self):
        """Gets the despatch_date_affected_by_public_holidays of this RouteDespatchOptionLite.  # noqa: E501


        :return: The despatch_date_affected_by_public_holidays of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: bool
        """
        return self._despatch_date_affected_by_public_holidays

    @despatch_date_affected_by_public_holidays.setter
    def despatch_date_affected_by_public_holidays(self, despatch_date_affected_by_public_holidays):
        """Sets the despatch_date_affected_by_public_holidays of this RouteDespatchOptionLite.


        :param despatch_date_affected_by_public_holidays: The despatch_date_affected_by_public_holidays of this RouteDespatchOptionLite.  # noqa: E501
        :type: bool
        """

        self._despatch_date_affected_by_public_holidays = despatch_date_affected_by_public_holidays

    @property
    def business_days_only(self):
        """Gets the business_days_only of this RouteDespatchOptionLite.  # noqa: E501


        :return: The business_days_only of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: bool
        """
        return self._business_days_only

    @business_days_only.setter
    def business_days_only(self, business_days_only):
        """Sets the business_days_only of this RouteDespatchOptionLite.


        :param business_days_only: The business_days_only of this RouteDespatchOptionLite.  # noqa: E501
        :type: bool
        """

        self._business_days_only = business_days_only

    @property
    def custom_eta_string(self):
        """Gets the custom_eta_string of this RouteDespatchOptionLite.  # noqa: E501


        :return: The custom_eta_string of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: str
        """
        return self._custom_eta_string

    @custom_eta_string.setter
    def custom_eta_string(self, custom_eta_string):
        """Sets the custom_eta_string of this RouteDespatchOptionLite.


        :param custom_eta_string: The custom_eta_string of this RouteDespatchOptionLite.  # noqa: E501
        :type: str
        """

        self._custom_eta_string = custom_eta_string

    @property
    def carrier_accepts_despatch_times(self):
        """Gets the carrier_accepts_despatch_times of this RouteDespatchOptionLite.  # noqa: E501


        :return: The carrier_accepts_despatch_times of this RouteDespatchOptionLite.  # noqa: E501
        :rtype: bool
        """
        return self._carrier_accepts_despatch_times

    @carrier_accepts_despatch_times.setter
    def carrier_accepts_despatch_times(self, carrier_accepts_despatch_times):
        """Sets the carrier_accepts_despatch_times of this RouteDespatchOptionLite.


        :param carrier_accepts_despatch_times: The carrier_accepts_despatch_times of this RouteDespatchOptionLite.  # noqa: E501
        :type: bool
        """

        self._carrier_accepts_despatch_times = carrier_accepts_despatch_times

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RouteDespatchOptionLite, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RouteDespatchOptionLite):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
