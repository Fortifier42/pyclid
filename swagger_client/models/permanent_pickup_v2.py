# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PermanentPickupV2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'carrier_id': 'int',
        'link_type': 'PermanentPickupLink',
        'service_ids': 'list[int]'
    }

    attribute_map = {
        'id': 'id',
        'carrier_id': 'carrierId',
        'link_type': 'linkType',
        'service_ids': 'serviceIds'
    }

    def __init__(self, id=None, carrier_id=None, link_type=None, service_ids=None):  # noqa: E501
        """PermanentPickupV2 - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._carrier_id = None
        self._link_type = None
        self._service_ids = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if carrier_id is not None:
            self.carrier_id = carrier_id
        if link_type is not None:
            self.link_type = link_type
        if service_ids is not None:
            self.service_ids = service_ids

    @property
    def id(self):
        """Gets the id of this PermanentPickupV2.  # noqa: E501

        The ID of this permanent pickup in MachShip  # noqa: E501

        :return: The id of this PermanentPickupV2.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PermanentPickupV2.

        The ID of this permanent pickup in MachShip  # noqa: E501

        :param id: The id of this PermanentPickupV2.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def carrier_id(self):
        """Gets the carrier_id of this PermanentPickupV2.  # noqa: E501

        A carrier's ID in MachShip  # noqa: E501

        :return: The carrier_id of this PermanentPickupV2.  # noqa: E501
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this PermanentPickupV2.

        A carrier's ID in MachShip  # noqa: E501

        :param carrier_id: The carrier_id of this PermanentPickupV2.  # noqa: E501
        :type: int
        """

        self._carrier_id = carrier_id

    @property
    def link_type(self):
        """Gets the link_type of this PermanentPickupV2.  # noqa: E501


        :return: The link_type of this PermanentPickupV2.  # noqa: E501
        :rtype: PermanentPickupLink
        """
        return self._link_type

    @link_type.setter
    def link_type(self, link_type):
        """Sets the link_type of this PermanentPickupV2.


        :param link_type: The link_type of this PermanentPickupV2.  # noqa: E501
        :type: PermanentPickupLink
        """

        self._link_type = link_type

    @property
    def service_ids(self):
        """Gets the service_ids of this PermanentPickupV2.  # noqa: E501

        When Machship.Common.Models.ApiV2Models.CompanyLocations.PermanentPickupV2.LinkType is set to Machship.Common.Models.ApiV2Models.CompanyLocations.PermanentPickupLink.LinkToSpecificServices then this  is an array of the carrier's service IDs in MachShip  # noqa: E501

        :return: The service_ids of this PermanentPickupV2.  # noqa: E501
        :rtype: list[int]
        """
        return self._service_ids

    @service_ids.setter
    def service_ids(self, service_ids):
        """Sets the service_ids of this PermanentPickupV2.

        When Machship.Common.Models.ApiV2Models.CompanyLocations.PermanentPickupV2.LinkType is set to Machship.Common.Models.ApiV2Models.CompanyLocations.PermanentPickupLink.LinkToSpecificServices then this  is an array of the carrier's service IDs in MachShip  # noqa: E501

        :param service_ids: The service_ids of this PermanentPickupV2.  # noqa: E501
        :type: list[int]
        """

        self._service_ids = service_ids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PermanentPickupV2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PermanentPickupV2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
