# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CarrierInvoiceEntryV2ForGetEntriesEndpoint(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'consignment_id': 'int',
        'consignment': 'object',
        'carrier_invoice_id': 'int',
        'sender_reference': 'str',
        'carrier_manifest_reference': 'str',
        'customer_reference': 'str',
        'customer_reference2': 'str',
        'carrier_consignment_reference': 'str',
        '_date': 'datetime',
        'carrier_account_abbreviation': 'str',
        'carrier_account_name': 'str',
        'service_name': 'str',
        'service_abbreviation': 'str',
        'from_zone_abbreviation': 'str',
        'to_zone_abbreviation': 'str',
        'from_name': 'str',
        'from_address': 'str',
        'from_suburb': 'str',
        'from_post_code': 'str',
        'from_state': 'str',
        'to_name': 'str',
        'to_address': 'str',
        'to_suburb': 'str',
        'to_post_code': 'str',
        'to_state': 'str',
        'cubic_metres': 'float',
        'weight': 'float',
        'volume': 'float',
        'charge_weight': 'float',
        'quantity': 'int',
        'total': 'float',
        'route_price': 'float',
        'fuel_surcharge': 'float',
        'fuel_surcharge_percentage': 'float',
        'tax': 'float',
        'total_before_tax': 'float',
        'other_values': 'list[MachKeyValuePair]',
        'status': 'CarrierInvoiceEntryStatus',
        'comments': 'str',
        'is_additional_charge': 'bool',
        'reason': 'CarrierInvoiceEntryRejectionReason',
        'rejection_comments': 'str',
        'from_display': 'str',
        'to_display': 'str',
        'service_display': 'str',
        'carrier_account_display': 'str',
        'route_price_and_charges': 'float',
        'amended_route_price_total': 'float',
        'amended_fuel_surcharge_total': 'float',
        'amended_tax_total': 'float',
        'amended_total': 'float',
        'amended_total_before_tax': 'float',
        'carrier_invoice_entry_charges': 'list[object]',
        'amendments': 'list[CarrierInvoiceEntryAmendmentV2ForGetEntriesEndpoint]',
        'carrier_account_id': 'int',
        'carrier_service_id': 'int',
        'company_id': 'int',
        'from_location_id': 'int',
        'to_location_id': 'int',
        'date_time_reconciled_utc': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'consignment_id': 'consignmentId',
        'consignment': 'consignment',
        'carrier_invoice_id': 'carrierInvoiceId',
        'sender_reference': 'senderReference',
        'carrier_manifest_reference': 'carrierManifestReference',
        'customer_reference': 'customerReference',
        'customer_reference2': 'customerReference2',
        'carrier_consignment_reference': 'carrierConsignmentReference',
        '_date': 'date',
        'carrier_account_abbreviation': 'carrierAccountAbbreviation',
        'carrier_account_name': 'carrierAccountName',
        'service_name': 'serviceName',
        'service_abbreviation': 'serviceAbbreviation',
        'from_zone_abbreviation': 'fromZoneAbbreviation',
        'to_zone_abbreviation': 'toZoneAbbreviation',
        'from_name': 'fromName',
        'from_address': 'fromAddress',
        'from_suburb': 'fromSuburb',
        'from_post_code': 'fromPostCode',
        'from_state': 'fromState',
        'to_name': 'toName',
        'to_address': 'toAddress',
        'to_suburb': 'toSuburb',
        'to_post_code': 'toPostCode',
        'to_state': 'toState',
        'cubic_metres': 'cubicMetres',
        'weight': 'weight',
        'volume': 'volume',
        'charge_weight': 'chargeWeight',
        'quantity': 'quantity',
        'total': 'total',
        'route_price': 'routePrice',
        'fuel_surcharge': 'fuelSurcharge',
        'fuel_surcharge_percentage': 'fuelSurchargePercentage',
        'tax': 'tax',
        'total_before_tax': 'totalBeforeTax',
        'other_values': 'otherValues',
        'status': 'status',
        'comments': 'comments',
        'is_additional_charge': 'isAdditionalCharge',
        'reason': 'reason',
        'rejection_comments': 'rejectionComments',
        'from_display': 'fromDisplay',
        'to_display': 'toDisplay',
        'service_display': 'serviceDisplay',
        'carrier_account_display': 'carrierAccountDisplay',
        'route_price_and_charges': 'routePriceAndCharges',
        'amended_route_price_total': 'amendedRoutePriceTotal',
        'amended_fuel_surcharge_total': 'amendedFuelSurchargeTotal',
        'amended_tax_total': 'amendedTaxTotal',
        'amended_total': 'amendedTotal',
        'amended_total_before_tax': 'amendedTotalBeforeTax',
        'carrier_invoice_entry_charges': 'carrierInvoiceEntryCharges',
        'amendments': 'amendments',
        'carrier_account_id': 'carrierAccountId',
        'carrier_service_id': 'carrierServiceId',
        'company_id': 'companyId',
        'from_location_id': 'fromLocationId',
        'to_location_id': 'toLocationId',
        'date_time_reconciled_utc': 'dateTimeReconciledUtc'
    }

    def __init__(self, id=None, consignment_id=None, consignment=None, carrier_invoice_id=None, sender_reference=None, carrier_manifest_reference=None, customer_reference=None, customer_reference2=None, carrier_consignment_reference=None, _date=None, carrier_account_abbreviation=None, carrier_account_name=None, service_name=None, service_abbreviation=None, from_zone_abbreviation=None, to_zone_abbreviation=None, from_name=None, from_address=None, from_suburb=None, from_post_code=None, from_state=None, to_name=None, to_address=None, to_suburb=None, to_post_code=None, to_state=None, cubic_metres=None, weight=None, volume=None, charge_weight=None, quantity=None, total=None, route_price=None, fuel_surcharge=None, fuel_surcharge_percentage=None, tax=None, total_before_tax=None, other_values=None, status=None, comments=None, is_additional_charge=None, reason=None, rejection_comments=None, from_display=None, to_display=None, service_display=None, carrier_account_display=None, route_price_and_charges=None, amended_route_price_total=None, amended_fuel_surcharge_total=None, amended_tax_total=None, amended_total=None, amended_total_before_tax=None, carrier_invoice_entry_charges=None, amendments=None, carrier_account_id=None, carrier_service_id=None, company_id=None, from_location_id=None, to_location_id=None, date_time_reconciled_utc=None):  # noqa: E501
        """CarrierInvoiceEntryV2ForGetEntriesEndpoint - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._consignment_id = None
        self._consignment = None
        self._carrier_invoice_id = None
        self._sender_reference = None
        self._carrier_manifest_reference = None
        self._customer_reference = None
        self._customer_reference2 = None
        self._carrier_consignment_reference = None
        self.__date = None
        self._carrier_account_abbreviation = None
        self._carrier_account_name = None
        self._service_name = None
        self._service_abbreviation = None
        self._from_zone_abbreviation = None
        self._to_zone_abbreviation = None
        self._from_name = None
        self._from_address = None
        self._from_suburb = None
        self._from_post_code = None
        self._from_state = None
        self._to_name = None
        self._to_address = None
        self._to_suburb = None
        self._to_post_code = None
        self._to_state = None
        self._cubic_metres = None
        self._weight = None
        self._volume = None
        self._charge_weight = None
        self._quantity = None
        self._total = None
        self._route_price = None
        self._fuel_surcharge = None
        self._fuel_surcharge_percentage = None
        self._tax = None
        self._total_before_tax = None
        self._other_values = None
        self._status = None
        self._comments = None
        self._is_additional_charge = None
        self._reason = None
        self._rejection_comments = None
        self._from_display = None
        self._to_display = None
        self._service_display = None
        self._carrier_account_display = None
        self._route_price_and_charges = None
        self._amended_route_price_total = None
        self._amended_fuel_surcharge_total = None
        self._amended_tax_total = None
        self._amended_total = None
        self._amended_total_before_tax = None
        self._carrier_invoice_entry_charges = None
        self._amendments = None
        self._carrier_account_id = None
        self._carrier_service_id = None
        self._company_id = None
        self._from_location_id = None
        self._to_location_id = None
        self._date_time_reconciled_utc = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if consignment_id is not None:
            self.consignment_id = consignment_id
        if consignment is not None:
            self.consignment = consignment
        if carrier_invoice_id is not None:
            self.carrier_invoice_id = carrier_invoice_id
        if sender_reference is not None:
            self.sender_reference = sender_reference
        if carrier_manifest_reference is not None:
            self.carrier_manifest_reference = carrier_manifest_reference
        if customer_reference is not None:
            self.customer_reference = customer_reference
        if customer_reference2 is not None:
            self.customer_reference2 = customer_reference2
        if carrier_consignment_reference is not None:
            self.carrier_consignment_reference = carrier_consignment_reference
        if _date is not None:
            self._date = _date
        if carrier_account_abbreviation is not None:
            self.carrier_account_abbreviation = carrier_account_abbreviation
        if carrier_account_name is not None:
            self.carrier_account_name = carrier_account_name
        if service_name is not None:
            self.service_name = service_name
        if service_abbreviation is not None:
            self.service_abbreviation = service_abbreviation
        if from_zone_abbreviation is not None:
            self.from_zone_abbreviation = from_zone_abbreviation
        if to_zone_abbreviation is not None:
            self.to_zone_abbreviation = to_zone_abbreviation
        if from_name is not None:
            self.from_name = from_name
        if from_address is not None:
            self.from_address = from_address
        if from_suburb is not None:
            self.from_suburb = from_suburb
        if from_post_code is not None:
            self.from_post_code = from_post_code
        if from_state is not None:
            self.from_state = from_state
        if to_name is not None:
            self.to_name = to_name
        if to_address is not None:
            self.to_address = to_address
        if to_suburb is not None:
            self.to_suburb = to_suburb
        if to_post_code is not None:
            self.to_post_code = to_post_code
        if to_state is not None:
            self.to_state = to_state
        if cubic_metres is not None:
            self.cubic_metres = cubic_metres
        if weight is not None:
            self.weight = weight
        if volume is not None:
            self.volume = volume
        if charge_weight is not None:
            self.charge_weight = charge_weight
        if quantity is not None:
            self.quantity = quantity
        if total is not None:
            self.total = total
        if route_price is not None:
            self.route_price = route_price
        if fuel_surcharge is not None:
            self.fuel_surcharge = fuel_surcharge
        if fuel_surcharge_percentage is not None:
            self.fuel_surcharge_percentage = fuel_surcharge_percentage
        if tax is not None:
            self.tax = tax
        if total_before_tax is not None:
            self.total_before_tax = total_before_tax
        if other_values is not None:
            self.other_values = other_values
        if status is not None:
            self.status = status
        if comments is not None:
            self.comments = comments
        if is_additional_charge is not None:
            self.is_additional_charge = is_additional_charge
        if reason is not None:
            self.reason = reason
        if rejection_comments is not None:
            self.rejection_comments = rejection_comments
        if from_display is not None:
            self.from_display = from_display
        if to_display is not None:
            self.to_display = to_display
        if service_display is not None:
            self.service_display = service_display
        if carrier_account_display is not None:
            self.carrier_account_display = carrier_account_display
        if route_price_and_charges is not None:
            self.route_price_and_charges = route_price_and_charges
        if amended_route_price_total is not None:
            self.amended_route_price_total = amended_route_price_total
        if amended_fuel_surcharge_total is not None:
            self.amended_fuel_surcharge_total = amended_fuel_surcharge_total
        if amended_tax_total is not None:
            self.amended_tax_total = amended_tax_total
        if amended_total is not None:
            self.amended_total = amended_total
        if amended_total_before_tax is not None:
            self.amended_total_before_tax = amended_total_before_tax
        if carrier_invoice_entry_charges is not None:
            self.carrier_invoice_entry_charges = carrier_invoice_entry_charges
        if amendments is not None:
            self.amendments = amendments
        if carrier_account_id is not None:
            self.carrier_account_id = carrier_account_id
        if carrier_service_id is not None:
            self.carrier_service_id = carrier_service_id
        if company_id is not None:
            self.company_id = company_id
        if from_location_id is not None:
            self.from_location_id = from_location_id
        if to_location_id is not None:
            self.to_location_id = to_location_id
        if date_time_reconciled_utc is not None:
            self.date_time_reconciled_utc = date_time_reconciled_utc

    @property
    def id(self):
        """Gets the id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param id: The id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def consignment_id(self):
        """Gets the consignment_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The consignment_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._consignment_id

    @consignment_id.setter
    def consignment_id(self, consignment_id):
        """Sets the consignment_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param consignment_id: The consignment_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._consignment_id = consignment_id

    @property
    def consignment(self):
        """Gets the consignment of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The consignment of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: object
        """
        return self._consignment

    @consignment.setter
    def consignment(self, consignment):
        """Sets the consignment of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param consignment: The consignment of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: object
        """

        self._consignment = consignment

    @property
    def carrier_invoice_id(self):
        """Gets the carrier_invoice_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501

        string representation of the carrier's invoice id  # noqa: E501

        :return: The carrier_invoice_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._carrier_invoice_id

    @carrier_invoice_id.setter
    def carrier_invoice_id(self, carrier_invoice_id):
        """Sets the carrier_invoice_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.

        string representation of the carrier's invoice id  # noqa: E501

        :param carrier_invoice_id: The carrier_invoice_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._carrier_invoice_id = carrier_invoice_id

    @property
    def sender_reference(self):
        """Gets the sender_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501

        string representation of the sender reference  # noqa: E501

        :return: The sender_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._sender_reference

    @sender_reference.setter
    def sender_reference(self, sender_reference):
        """Sets the sender_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.

        string representation of the sender reference  # noqa: E501

        :param sender_reference: The sender_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._sender_reference = sender_reference

    @property
    def carrier_manifest_reference(self):
        """Gets the carrier_manifest_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501

        string representation of the manifest reference  # noqa: E501

        :return: The carrier_manifest_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._carrier_manifest_reference

    @carrier_manifest_reference.setter
    def carrier_manifest_reference(self, carrier_manifest_reference):
        """Sets the carrier_manifest_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.

        string representation of the manifest reference  # noqa: E501

        :param carrier_manifest_reference: The carrier_manifest_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._carrier_manifest_reference = carrier_manifest_reference

    @property
    def customer_reference(self):
        """Gets the customer_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The customer_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference

    @customer_reference.setter
    def customer_reference(self, customer_reference):
        """Sets the customer_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param customer_reference: The customer_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._customer_reference = customer_reference

    @property
    def customer_reference2(self):
        """Gets the customer_reference2 of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The customer_reference2 of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference2

    @customer_reference2.setter
    def customer_reference2(self, customer_reference2):
        """Sets the customer_reference2 of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param customer_reference2: The customer_reference2 of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._customer_reference2 = customer_reference2

    @property
    def carrier_consignment_reference(self):
        """Gets the carrier_consignment_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_consignment_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._carrier_consignment_reference

    @carrier_consignment_reference.setter
    def carrier_consignment_reference(self, carrier_consignment_reference):
        """Sets the carrier_consignment_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_consignment_reference: The carrier_consignment_reference of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._carrier_consignment_reference = carrier_consignment_reference

    @property
    def _date(self):
        """Gets the _date of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The _date of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param _date: The _date of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def carrier_account_abbreviation(self):
        """Gets the carrier_account_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_account_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._carrier_account_abbreviation

    @carrier_account_abbreviation.setter
    def carrier_account_abbreviation(self, carrier_account_abbreviation):
        """Sets the carrier_account_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_account_abbreviation: The carrier_account_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._carrier_account_abbreviation = carrier_account_abbreviation

    @property
    def carrier_account_name(self):
        """Gets the carrier_account_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_account_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._carrier_account_name

    @carrier_account_name.setter
    def carrier_account_name(self, carrier_account_name):
        """Sets the carrier_account_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_account_name: The carrier_account_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._carrier_account_name = carrier_account_name

    @property
    def service_name(self):
        """Gets the service_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The service_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param service_name: The service_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._service_name = service_name

    @property
    def service_abbreviation(self):
        """Gets the service_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The service_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._service_abbreviation

    @service_abbreviation.setter
    def service_abbreviation(self, service_abbreviation):
        """Sets the service_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param service_abbreviation: The service_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._service_abbreviation = service_abbreviation

    @property
    def from_zone_abbreviation(self):
        """Gets the from_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_zone_abbreviation

    @from_zone_abbreviation.setter
    def from_zone_abbreviation(self, from_zone_abbreviation):
        """Sets the from_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_zone_abbreviation: The from_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_zone_abbreviation = from_zone_abbreviation

    @property
    def to_zone_abbreviation(self):
        """Gets the to_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_zone_abbreviation

    @to_zone_abbreviation.setter
    def to_zone_abbreviation(self, to_zone_abbreviation):
        """Sets the to_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_zone_abbreviation: The to_zone_abbreviation of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_zone_abbreviation = to_zone_abbreviation

    @property
    def from_name(self):
        """Gets the from_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_name

    @from_name.setter
    def from_name(self, from_name):
        """Sets the from_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_name: The from_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_name = from_name

    @property
    def from_address(self):
        """Gets the from_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_address

    @from_address.setter
    def from_address(self, from_address):
        """Sets the from_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_address: The from_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_address = from_address

    @property
    def from_suburb(self):
        """Gets the from_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_suburb

    @from_suburb.setter
    def from_suburb(self, from_suburb):
        """Sets the from_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_suburb: The from_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_suburb = from_suburb

    @property
    def from_post_code(self):
        """Gets the from_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_post_code

    @from_post_code.setter
    def from_post_code(self, from_post_code):
        """Sets the from_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_post_code: The from_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_post_code = from_post_code

    @property
    def from_state(self):
        """Gets the from_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_state

    @from_state.setter
    def from_state(self, from_state):
        """Sets the from_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_state: The from_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_state = from_state

    @property
    def to_name(self):
        """Gets the to_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_name

    @to_name.setter
    def to_name(self, to_name):
        """Sets the to_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_name: The to_name of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_name = to_name

    @property
    def to_address(self):
        """Gets the to_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_address

    @to_address.setter
    def to_address(self, to_address):
        """Sets the to_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_address: The to_address of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_address = to_address

    @property
    def to_suburb(self):
        """Gets the to_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_suburb

    @to_suburb.setter
    def to_suburb(self, to_suburb):
        """Sets the to_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_suburb: The to_suburb of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_suburb = to_suburb

    @property
    def to_post_code(self):
        """Gets the to_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_post_code

    @to_post_code.setter
    def to_post_code(self, to_post_code):
        """Sets the to_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_post_code: The to_post_code of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_post_code = to_post_code

    @property
    def to_state(self):
        """Gets the to_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_state

    @to_state.setter
    def to_state(self, to_state):
        """Sets the to_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_state: The to_state of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_state = to_state

    @property
    def cubic_metres(self):
        """Gets the cubic_metres of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The cubic_metres of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._cubic_metres

    @cubic_metres.setter
    def cubic_metres(self, cubic_metres):
        """Sets the cubic_metres of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param cubic_metres: The cubic_metres of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._cubic_metres = cubic_metres

    @property
    def weight(self):
        """Gets the weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param weight: The weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._weight = weight

    @property
    def volume(self):
        """Gets the volume of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The volume of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param volume: The volume of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._volume = volume

    @property
    def charge_weight(self):
        """Gets the charge_weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The charge_weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._charge_weight

    @charge_weight.setter
    def charge_weight(self, charge_weight):
        """Sets the charge_weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param charge_weight: The charge_weight of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._charge_weight = charge_weight

    @property
    def quantity(self):
        """Gets the quantity of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The quantity of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param quantity: The quantity of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def total(self):
        """Gets the total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param total: The total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._total = total

    @property
    def route_price(self):
        """Gets the route_price of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The route_price of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._route_price

    @route_price.setter
    def route_price(self, route_price):
        """Sets the route_price of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param route_price: The route_price of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._route_price = route_price

    @property
    def fuel_surcharge(self):
        """Gets the fuel_surcharge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The fuel_surcharge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._fuel_surcharge

    @fuel_surcharge.setter
    def fuel_surcharge(self, fuel_surcharge):
        """Sets the fuel_surcharge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param fuel_surcharge: The fuel_surcharge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._fuel_surcharge = fuel_surcharge

    @property
    def fuel_surcharge_percentage(self):
        """Gets the fuel_surcharge_percentage of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The fuel_surcharge_percentage of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._fuel_surcharge_percentage

    @fuel_surcharge_percentage.setter
    def fuel_surcharge_percentage(self, fuel_surcharge_percentage):
        """Sets the fuel_surcharge_percentage of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param fuel_surcharge_percentage: The fuel_surcharge_percentage of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._fuel_surcharge_percentage = fuel_surcharge_percentage

    @property
    def tax(self):
        """Gets the tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param tax: The tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._tax = tax

    @property
    def total_before_tax(self):
        """Gets the total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._total_before_tax

    @total_before_tax.setter
    def total_before_tax(self, total_before_tax):
        """Sets the total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param total_before_tax: The total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._total_before_tax = total_before_tax

    @property
    def other_values(self):
        """Gets the other_values of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The other_values of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: list[MachKeyValuePair]
        """
        return self._other_values

    @other_values.setter
    def other_values(self, other_values):
        """Sets the other_values of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param other_values: The other_values of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: list[MachKeyValuePair]
        """

        self._other_values = other_values

    @property
    def status(self):
        """Gets the status of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The status of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: CarrierInvoiceEntryStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param status: The status of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: CarrierInvoiceEntryStatus
        """

        self._status = status

    @property
    def comments(self):
        """Gets the comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param comments: The comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._comments = comments

    @property
    def is_additional_charge(self):
        """Gets the is_additional_charge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501

        This is not a main charge, but an additional charge to the main charge. We should not try to auto create consignments from additional charges  # noqa: E501

        :return: The is_additional_charge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: bool
        """
        return self._is_additional_charge

    @is_additional_charge.setter
    def is_additional_charge(self, is_additional_charge):
        """Sets the is_additional_charge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.

        This is not a main charge, but an additional charge to the main charge. We should not try to auto create consignments from additional charges  # noqa: E501

        :param is_additional_charge: The is_additional_charge of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: bool
        """

        self._is_additional_charge = is_additional_charge

    @property
    def reason(self):
        """Gets the reason of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The reason of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: CarrierInvoiceEntryRejectionReason
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param reason: The reason of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: CarrierInvoiceEntryRejectionReason
        """

        self._reason = reason

    @property
    def rejection_comments(self):
        """Gets the rejection_comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The rejection_comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._rejection_comments

    @rejection_comments.setter
    def rejection_comments(self, rejection_comments):
        """Sets the rejection_comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param rejection_comments: The rejection_comments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._rejection_comments = rejection_comments

    @property
    def from_display(self):
        """Gets the from_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._from_display

    @from_display.setter
    def from_display(self, from_display):
        """Sets the from_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_display: The from_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._from_display = from_display

    @property
    def to_display(self):
        """Gets the to_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._to_display

    @to_display.setter
    def to_display(self, to_display):
        """Sets the to_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_display: The to_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._to_display = to_display

    @property
    def service_display(self):
        """Gets the service_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The service_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._service_display

    @service_display.setter
    def service_display(self, service_display):
        """Sets the service_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param service_display: The service_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._service_display = service_display

    @property
    def carrier_account_display(self):
        """Gets the carrier_account_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_account_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: str
        """
        return self._carrier_account_display

    @carrier_account_display.setter
    def carrier_account_display(self, carrier_account_display):
        """Sets the carrier_account_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_account_display: The carrier_account_display of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: str
        """

        self._carrier_account_display = carrier_account_display

    @property
    def route_price_and_charges(self):
        """Gets the route_price_and_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The route_price_and_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._route_price_and_charges

    @route_price_and_charges.setter
    def route_price_and_charges(self, route_price_and_charges):
        """Sets the route_price_and_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param route_price_and_charges: The route_price_and_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._route_price_and_charges = route_price_and_charges

    @property
    def amended_route_price_total(self):
        """Gets the amended_route_price_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The amended_route_price_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._amended_route_price_total

    @amended_route_price_total.setter
    def amended_route_price_total(self, amended_route_price_total):
        """Sets the amended_route_price_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param amended_route_price_total: The amended_route_price_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._amended_route_price_total = amended_route_price_total

    @property
    def amended_fuel_surcharge_total(self):
        """Gets the amended_fuel_surcharge_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The amended_fuel_surcharge_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._amended_fuel_surcharge_total

    @amended_fuel_surcharge_total.setter
    def amended_fuel_surcharge_total(self, amended_fuel_surcharge_total):
        """Sets the amended_fuel_surcharge_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param amended_fuel_surcharge_total: The amended_fuel_surcharge_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._amended_fuel_surcharge_total = amended_fuel_surcharge_total

    @property
    def amended_tax_total(self):
        """Gets the amended_tax_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The amended_tax_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._amended_tax_total

    @amended_tax_total.setter
    def amended_tax_total(self, amended_tax_total):
        """Sets the amended_tax_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param amended_tax_total: The amended_tax_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._amended_tax_total = amended_tax_total

    @property
    def amended_total(self):
        """Gets the amended_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The amended_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._amended_total

    @amended_total.setter
    def amended_total(self, amended_total):
        """Sets the amended_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param amended_total: The amended_total of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._amended_total = amended_total

    @property
    def amended_total_before_tax(self):
        """Gets the amended_total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The amended_total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: float
        """
        return self._amended_total_before_tax

    @amended_total_before_tax.setter
    def amended_total_before_tax(self, amended_total_before_tax):
        """Sets the amended_total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param amended_total_before_tax: The amended_total_before_tax of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: float
        """

        self._amended_total_before_tax = amended_total_before_tax

    @property
    def carrier_invoice_entry_charges(self):
        """Gets the carrier_invoice_entry_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_invoice_entry_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: list[object]
        """
        return self._carrier_invoice_entry_charges

    @carrier_invoice_entry_charges.setter
    def carrier_invoice_entry_charges(self, carrier_invoice_entry_charges):
        """Sets the carrier_invoice_entry_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_invoice_entry_charges: The carrier_invoice_entry_charges of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: list[object]
        """

        self._carrier_invoice_entry_charges = carrier_invoice_entry_charges

    @property
    def amendments(self):
        """Gets the amendments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The amendments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: list[CarrierInvoiceEntryAmendmentV2ForGetEntriesEndpoint]
        """
        return self._amendments

    @amendments.setter
    def amendments(self, amendments):
        """Sets the amendments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param amendments: The amendments of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: list[CarrierInvoiceEntryAmendmentV2ForGetEntriesEndpoint]
        """

        self._amendments = amendments

    @property
    def carrier_account_id(self):
        """Gets the carrier_account_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_account_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._carrier_account_id

    @carrier_account_id.setter
    def carrier_account_id(self, carrier_account_id):
        """Sets the carrier_account_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_account_id: The carrier_account_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._carrier_account_id = carrier_account_id

    @property
    def carrier_service_id(self):
        """Gets the carrier_service_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The carrier_service_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._carrier_service_id

    @carrier_service_id.setter
    def carrier_service_id(self, carrier_service_id):
        """Sets the carrier_service_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param carrier_service_id: The carrier_service_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._carrier_service_id = carrier_service_id

    @property
    def company_id(self):
        """Gets the company_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The company_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param company_id: The company_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def from_location_id(self):
        """Gets the from_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The from_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._from_location_id

    @from_location_id.setter
    def from_location_id(self, from_location_id):
        """Sets the from_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param from_location_id: The from_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._from_location_id = from_location_id

    @property
    def to_location_id(self):
        """Gets the to_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The to_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: int
        """
        return self._to_location_id

    @to_location_id.setter
    def to_location_id(self, to_location_id):
        """Sets the to_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param to_location_id: The to_location_id of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: int
        """

        self._to_location_id = to_location_id

    @property
    def date_time_reconciled_utc(self):
        """Gets the date_time_reconciled_utc of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501


        :return: The date_time_reconciled_utc of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :rtype: datetime
        """
        return self._date_time_reconciled_utc

    @date_time_reconciled_utc.setter
    def date_time_reconciled_utc(self, date_time_reconciled_utc):
        """Sets the date_time_reconciled_utc of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.


        :param date_time_reconciled_utc: The date_time_reconciled_utc of this CarrierInvoiceEntryV2ForGetEntriesEndpoint.  # noqa: E501
        :type: datetime
        """

        self._date_time_reconciled_utc = date_time_reconciled_utc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CarrierInvoiceEntryV2ForGetEntriesEndpoint, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CarrierInvoiceEntryV2ForGetEntriesEndpoint):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
