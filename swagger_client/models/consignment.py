# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Consignment(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'company_id': 'int',
        'id': 'int',
        'consignment_number': 'str',
        'consignment_tracking_status_id': 'int',
        'manifest_id': 'int',
        'consignment_tracking_status': 'ConsignmentTrackingStatus',
        'consignment_status_type': 'ConsignmentStatusType',
        'is_benign': 'bool',
        'manually_track': 'bool',
        'has_notes': 'bool',
        'total_rows': 'int',
        'held_reconciliation': 'bool',
        'held_invoicing': 'bool',
        'can_manually_track_statuses': 'bool',
        'can_manually_track_attachments': 'bool',
        'automatically_tracks_statuses': 'bool',
        'automatically_tracks_attachments': 'bool',
        'held_reconciliation_user_id': 'int',
        'held_invoicing_user_id': 'int',
        'show_despatch_eta_times': 'bool',
        'is_international': 'bool',
        'carrier_received_commercial_invoice': 'bool',
        'has_commercial_invoice': 'bool',
        'is_commercial_invoice_machship_generated': 'bool',
        'from_location': 'Location',
        'from_name': 'str',
        'from_name_and_location': 'str',
        'to_location': 'Location',
        'to_name': 'str',
        'to_name_and_location': 'str',
        'international_from_city': 'str',
        'international_from_postcode': 'str',
        'international_from_province': 'str',
        'from_country_id': 'int',
        'from_country': 'Country',
        'international_to_city': 'str',
        'international_to_postcode': 'str',
        'international_to_province': 'str',
        'to_country_id': 'int',
        'to_country': 'Country',
        'company': 'Company',
        'carrier_service_id': 'int',
        'carrier_service': 'CarrierServiceModel',
        'from_carrier_zone_id': 'int',
        'from_carrier_zone': 'CarrierZone',
        'to_carrier_zone_id': 'int',
        'to_carrier_zone': 'CarrierZone',
        'invoice_item_id': 'int',
        'invoice_item': 'InvoiceItem',
        'carrier_consignment_id': 'str',
        'date_created': 'datetime',
        'company_name': 'str',
        'company_carrier_name': 'str',
        'quote_expiry_date': 'datetime',
        'booked_date': 'datetime',
        'completed_date': 'datetime',
        'completed_date_utc': 'datetime',
        'despatch_date': 'datetime',
        'despatch_date_utc': 'datetime',
        'despatch_date_local': 'datetime',
        'despatch_date_local_date_only': 'datetime',
        'desired_despatch_date_utc': 'datetime',
        'desired_despatch_date_local': 'datetime',
        'friendly_despatch_date': 'str',
        'friendly_despatch_time': 'str',
        'eta': 'datetime',
        'eta_local': 'datetime',
        'eta_utc': 'datetime',
        'from_company_location_id': 'int',
        'from_company_location_abbreviation': 'str',
        'from_company_location': 'CompanyLocation',
        'from_contact': 'str',
        'from_phone': 'str',
        'from_email': 'str',
        'from_address_line1': 'str',
        'from_address_line2': 'str',
        'from_location_id': 'int',
        'to_company_location': 'CompanyLocation',
        'to_company_location_id': 'int',
        'to_contact': 'str',
        'to_phone': 'str',
        'to_email': 'str',
        'to_address_line1': 'str',
        'to_address_line2': 'str',
        'to_location_id': 'int',
        'special_instructions': 'str',
        'public_guid': 'str',
        'public_guid_base64': 'str',
        'customer_reference': 'str',
        'customer_reference2': 'str',
        'service': 'str',
        'item_count': 'int',
        'company_carrier_account_id': 'int',
        'company_carrier_account': 'CompanyCarrierAccount',
        'consignment_total': 'ConsignmentTotal',
        'consignment_hourly_pricing': 'ConsignmentHourlyPricing',
        'total_weight': 'float',
        'total_cubic': 'float',
        'total_sell_cubic_weight': 'float',
        'total_cubic_display': 'float',
        'total_volume': 'float',
        'heaviest_weight': 'float',
        'sell_heaviest_weight': 'float',
        'overriding_carrier_accounts': 'bool',
        'total_item_count': 'int',
        'total_sell_price': 'float',
        'total_base_sell_price': 'float',
        'total_tax_sell_price': 'float',
        'dangerous_goods': 'bool',
        'carrier_reference': 'str',
        'carrier_manifest_reference': 'str',
        'serialised_custom_fields': 'str',
        'attachment_count': 'int',
        'inserted_by': 'int',
        'inserted_by_user_name': 'str',
        'staff_member_name': 'str',
        'important': 'bool',
        'valid_from_company_location': 'bool',
        'valid_to_company_location': 'bool',
        'can_override_sell_prices': 'bool',
        'external_invoiced': 'bool',
        'is_deleted': 'bool',
        'override_show_sell_values': 'bool',
        'permanent_pickup': 'bool',
        'custom_field_sets': 'list[CustomFieldSet]',
        'custom_values': 'list[CustomValue]',
        'consignment_carrier_surcharges': 'list[ConsignmentSurcharge]',
        'consignment_carrier_lane_rates': 'list[ConsignmentCarrierLaneRate]',
        'consignment_items': 'list[ConsignmentItem]',
        'consignment_reconciliation_charges': 'list[ConsignmentReconciliationCharge]',
        'carrier_invoice_entries': 'list[CarrierInvoiceEntry]',
        'questions': 'list[QuestionLite]',
        'is_eta_editable': 'bool',
        'original_eta_utc': 'datetime',
        'original_eta_local': 'datetime',
        'cutoff_utc': 'datetime',
        'cutoff_local': 'datetime',
        'eta_affected_by_public_holidays': 'bool',
        'despatch_date_affected_by_public_holidays': 'bool',
        'consignment_batch_id': 'int',
        'send_tracking_email': 'bool',
        'send_tracking_sms': 'bool',
        'distance': 'float',
        'sub_service_id': 'int',
        'invoice_pre_authorisation': 'bool',
        'receiver_account_code': 'str',
        'receiver_account_id': 'int',
        'is_receiver_account': 'bool',
        'is_hourly': 'bool',
        'is_dg_consignment': 'bool',
        'dgs_declaration': 'bool',
        'dgs_declaration_date_time_utc': 'datetime',
        'dgs_declaration_user_id': 'int',
        'dgs_declaration_user': 'UserLite',
        'printer_token': 'str',
        'priced_by_external_system': 'bool',
        'is_test': 'bool',
        'manifesting_timestamp_utc': 'datetime',
        'consignment_custom_status_id': 'int',
        'consignment_custom_status': 'ConsignmentCustomStatus',
        'from_location_display': 'str',
        'to_location_display': 'str'
    }

    attribute_map = {
        'company_id': 'companyId',
        'id': 'id',
        'consignment_number': 'consignmentNumber',
        'consignment_tracking_status_id': 'consignmentTrackingStatusId',
        'manifest_id': 'manifestId',
        'consignment_tracking_status': 'consignmentTrackingStatus',
        'consignment_status_type': 'consignmentStatusType',
        'is_benign': 'isBenign',
        'manually_track': 'manuallyTrack',
        'has_notes': 'hasNotes',
        'total_rows': 'totalRows',
        'held_reconciliation': 'heldReconciliation',
        'held_invoicing': 'heldInvoicing',
        'can_manually_track_statuses': 'canManuallyTrackStatuses',
        'can_manually_track_attachments': 'canManuallyTrackAttachments',
        'automatically_tracks_statuses': 'automaticallyTracksStatuses',
        'automatically_tracks_attachments': 'automaticallyTracksAttachments',
        'held_reconciliation_user_id': 'heldReconciliationUserId',
        'held_invoicing_user_id': 'heldInvoicingUserId',
        'show_despatch_eta_times': 'showDespatchEtaTimes',
        'is_international': 'isInternational',
        'carrier_received_commercial_invoice': 'carrierReceivedCommercialInvoice',
        'has_commercial_invoice': 'hasCommercialInvoice',
        'is_commercial_invoice_machship_generated': 'isCommercialInvoiceMachshipGenerated',
        'from_location': 'fromLocation',
        'from_name': 'fromName',
        'from_name_and_location': 'fromNameAndLocation',
        'to_location': 'toLocation',
        'to_name': 'toName',
        'to_name_and_location': 'toNameAndLocation',
        'international_from_city': 'internationalFromCity',
        'international_from_postcode': 'internationalFromPostcode',
        'international_from_province': 'internationalFromProvince',
        'from_country_id': 'fromCountryId',
        'from_country': 'fromCountry',
        'international_to_city': 'internationalToCity',
        'international_to_postcode': 'internationalToPostcode',
        'international_to_province': 'internationalToProvince',
        'to_country_id': 'toCountryId',
        'to_country': 'toCountry',
        'company': 'company',
        'carrier_service_id': 'carrierServiceId',
        'carrier_service': 'carrierService',
        'from_carrier_zone_id': 'fromCarrierZoneId',
        'from_carrier_zone': 'fromCarrierZone',
        'to_carrier_zone_id': 'toCarrierZoneId',
        'to_carrier_zone': 'toCarrierZone',
        'invoice_item_id': 'invoiceItemId',
        'invoice_item': 'invoiceItem',
        'carrier_consignment_id': 'carrierConsignmentId',
        'date_created': 'dateCreated',
        'company_name': 'companyName',
        'company_carrier_name': 'companyCarrierName',
        'quote_expiry_date': 'quoteExpiryDate',
        'booked_date': 'bookedDate',
        'completed_date': 'completedDate',
        'completed_date_utc': 'completedDateUtc',
        'despatch_date': 'despatchDate',
        'despatch_date_utc': 'despatchDateUtc',
        'despatch_date_local': 'despatchDateLocal',
        'despatch_date_local_date_only': 'despatchDateLocalDateOnly',
        'desired_despatch_date_utc': 'desiredDespatchDateUtc',
        'desired_despatch_date_local': 'desiredDespatchDateLocal',
        'friendly_despatch_date': 'friendlyDespatchDate',
        'friendly_despatch_time': 'friendlyDespatchTime',
        'eta': 'eta',
        'eta_local': 'etaLocal',
        'eta_utc': 'etaUtc',
        'from_company_location_id': 'fromCompanyLocationId',
        'from_company_location_abbreviation': 'fromCompanyLocationAbbreviation',
        'from_company_location': 'fromCompanyLocation',
        'from_contact': 'fromContact',
        'from_phone': 'fromPhone',
        'from_email': 'fromEmail',
        'from_address_line1': 'fromAddressLine1',
        'from_address_line2': 'fromAddressLine2',
        'from_location_id': 'fromLocationId',
        'to_company_location': 'toCompanyLocation',
        'to_company_location_id': 'toCompanyLocationId',
        'to_contact': 'toContact',
        'to_phone': 'toPhone',
        'to_email': 'toEmail',
        'to_address_line1': 'toAddressLine1',
        'to_address_line2': 'toAddressLine2',
        'to_location_id': 'toLocationId',
        'special_instructions': 'specialInstructions',
        'public_guid': 'publicGuid',
        'public_guid_base64': 'publicGuidBase64',
        'customer_reference': 'customerReference',
        'customer_reference2': 'customerReference2',
        'service': 'service',
        'item_count': 'itemCount',
        'company_carrier_account_id': 'companyCarrierAccountId',
        'company_carrier_account': 'companyCarrierAccount',
        'consignment_total': 'consignmentTotal',
        'consignment_hourly_pricing': 'consignmentHourlyPricing',
        'total_weight': 'totalWeight',
        'total_cubic': 'totalCubic',
        'total_sell_cubic_weight': 'totalSellCubicWeight',
        'total_cubic_display': 'totalCubicDisplay',
        'total_volume': 'totalVolume',
        'heaviest_weight': 'heaviestWeight',
        'sell_heaviest_weight': 'sellHeaviestWeight',
        'overriding_carrier_accounts': 'overridingCarrierAccounts',
        'total_item_count': 'totalItemCount',
        'total_sell_price': 'totalSellPrice',
        'total_base_sell_price': 'totalBaseSellPrice',
        'total_tax_sell_price': 'totalTaxSellPrice',
        'dangerous_goods': 'dangerousGoods',
        'carrier_reference': 'carrierReference',
        'carrier_manifest_reference': 'carrierManifestReference',
        'serialised_custom_fields': 'serialisedCustomFields',
        'attachment_count': 'attachmentCount',
        'inserted_by': 'insertedBy',
        'inserted_by_user_name': 'insertedByUserName',
        'staff_member_name': 'staffMemberName',
        'important': 'important',
        'valid_from_company_location': 'validFromCompanyLocation',
        'valid_to_company_location': 'validToCompanyLocation',
        'can_override_sell_prices': 'canOverrideSellPrices',
        'external_invoiced': 'externalInvoiced',
        'is_deleted': 'isDeleted',
        'override_show_sell_values': 'overrideShowSellValues',
        'permanent_pickup': 'permanentPickup',
        'custom_field_sets': 'customFieldSets',
        'custom_values': 'customValues',
        'consignment_carrier_surcharges': 'consignmentCarrierSurcharges',
        'consignment_carrier_lane_rates': 'consignmentCarrierLaneRates',
        'consignment_items': 'consignmentItems',
        'consignment_reconciliation_charges': 'consignmentReconciliationCharges',
        'carrier_invoice_entries': 'carrierInvoiceEntries',
        'questions': 'questions',
        'is_eta_editable': 'isETAEditable',
        'original_eta_utc': 'originalEtaUtc',
        'original_eta_local': 'originalEtaLocal',
        'cutoff_utc': 'cutoffUtc',
        'cutoff_local': 'cutoffLocal',
        'eta_affected_by_public_holidays': 'etaAffectedByPublicHolidays',
        'despatch_date_affected_by_public_holidays': 'despatchDateAffectedByPublicHolidays',
        'consignment_batch_id': 'consignmentBatchId',
        'send_tracking_email': 'sendTrackingEmail',
        'send_tracking_sms': 'sendTrackingSms',
        'distance': 'distance',
        'sub_service_id': 'subServiceId',
        'invoice_pre_authorisation': 'invoicePreAuthorisation',
        'receiver_account_code': 'receiverAccountCode',
        'receiver_account_id': 'receiverAccountId',
        'is_receiver_account': 'isReceiverAccount',
        'is_hourly': 'isHourly',
        'is_dg_consignment': 'isDgConsignment',
        'dgs_declaration': 'dgsDeclaration',
        'dgs_declaration_date_time_utc': 'dgsDeclarationDateTimeUtc',
        'dgs_declaration_user_id': 'dgsDeclarationUserId',
        'dgs_declaration_user': 'dgsDeclarationUser',
        'printer_token': 'printerToken',
        'priced_by_external_system': 'pricedByExternalSystem',
        'is_test': 'isTest',
        'manifesting_timestamp_utc': 'manifestingTimestampUtc',
        'consignment_custom_status_id': 'consignmentCustomStatusId',
        'consignment_custom_status': 'consignmentCustomStatus',
        'from_location_display': 'fromLocationDisplay',
        'to_location_display': 'toLocationDisplay'
    }

    def __init__(self, company_id=None, id=None, consignment_number=None, consignment_tracking_status_id=None, manifest_id=None, consignment_tracking_status=None, consignment_status_type=None, is_benign=None, manually_track=None, has_notes=None, total_rows=None, held_reconciliation=None, held_invoicing=None, can_manually_track_statuses=None, can_manually_track_attachments=None, automatically_tracks_statuses=None, automatically_tracks_attachments=None, held_reconciliation_user_id=None, held_invoicing_user_id=None, show_despatch_eta_times=None, is_international=None, carrier_received_commercial_invoice=None, has_commercial_invoice=None, is_commercial_invoice_machship_generated=None, from_location=None, from_name=None, from_name_and_location=None, to_location=None, to_name=None, to_name_and_location=None, international_from_city=None, international_from_postcode=None, international_from_province=None, from_country_id=None, from_country=None, international_to_city=None, international_to_postcode=None, international_to_province=None, to_country_id=None, to_country=None, company=None, carrier_service_id=None, carrier_service=None, from_carrier_zone_id=None, from_carrier_zone=None, to_carrier_zone_id=None, to_carrier_zone=None, invoice_item_id=None, invoice_item=None, carrier_consignment_id=None, date_created=None, company_name=None, company_carrier_name=None, quote_expiry_date=None, booked_date=None, completed_date=None, completed_date_utc=None, despatch_date=None, despatch_date_utc=None, despatch_date_local=None, despatch_date_local_date_only=None, desired_despatch_date_utc=None, desired_despatch_date_local=None, friendly_despatch_date=None, friendly_despatch_time=None, eta=None, eta_local=None, eta_utc=None, from_company_location_id=None, from_company_location_abbreviation=None, from_company_location=None, from_contact=None, from_phone=None, from_email=None, from_address_line1=None, from_address_line2=None, from_location_id=None, to_company_location=None, to_company_location_id=None, to_contact=None, to_phone=None, to_email=None, to_address_line1=None, to_address_line2=None, to_location_id=None, special_instructions=None, public_guid=None, public_guid_base64=None, customer_reference=None, customer_reference2=None, service=None, item_count=None, company_carrier_account_id=None, company_carrier_account=None, consignment_total=None, consignment_hourly_pricing=None, total_weight=None, total_cubic=None, total_sell_cubic_weight=None, total_cubic_display=None, total_volume=None, heaviest_weight=None, sell_heaviest_weight=None, overriding_carrier_accounts=None, total_item_count=None, total_sell_price=None, total_base_sell_price=None, total_tax_sell_price=None, dangerous_goods=None, carrier_reference=None, carrier_manifest_reference=None, serialised_custom_fields=None, attachment_count=None, inserted_by=None, inserted_by_user_name=None, staff_member_name=None, important=None, valid_from_company_location=None, valid_to_company_location=None, can_override_sell_prices=None, external_invoiced=None, is_deleted=None, override_show_sell_values=None, permanent_pickup=None, custom_field_sets=None, custom_values=None, consignment_carrier_surcharges=None, consignment_carrier_lane_rates=None, consignment_items=None, consignment_reconciliation_charges=None, carrier_invoice_entries=None, questions=None, is_eta_editable=None, original_eta_utc=None, original_eta_local=None, cutoff_utc=None, cutoff_local=None, eta_affected_by_public_holidays=None, despatch_date_affected_by_public_holidays=None, consignment_batch_id=None, send_tracking_email=None, send_tracking_sms=None, distance=None, sub_service_id=None, invoice_pre_authorisation=None, receiver_account_code=None, receiver_account_id=None, is_receiver_account=None, is_hourly=None, is_dg_consignment=None, dgs_declaration=None, dgs_declaration_date_time_utc=None, dgs_declaration_user_id=None, dgs_declaration_user=None, printer_token=None, priced_by_external_system=None, is_test=None, manifesting_timestamp_utc=None, consignment_custom_status_id=None, consignment_custom_status=None, from_location_display=None, to_location_display=None):  # noqa: E501
        """Consignment - a model defined in Swagger"""  # noqa: E501
        self._company_id = None
        self._id = None
        self._consignment_number = None
        self._consignment_tracking_status_id = None
        self._manifest_id = None
        self._consignment_tracking_status = None
        self._consignment_status_type = None
        self._is_benign = None
        self._manually_track = None
        self._has_notes = None
        self._total_rows = None
        self._held_reconciliation = None
        self._held_invoicing = None
        self._can_manually_track_statuses = None
        self._can_manually_track_attachments = None
        self._automatically_tracks_statuses = None
        self._automatically_tracks_attachments = None
        self._held_reconciliation_user_id = None
        self._held_invoicing_user_id = None
        self._show_despatch_eta_times = None
        self._is_international = None
        self._carrier_received_commercial_invoice = None
        self._has_commercial_invoice = None
        self._is_commercial_invoice_machship_generated = None
        self._from_location = None
        self._from_name = None
        self._from_name_and_location = None
        self._to_location = None
        self._to_name = None
        self._to_name_and_location = None
        self._international_from_city = None
        self._international_from_postcode = None
        self._international_from_province = None
        self._from_country_id = None
        self._from_country = None
        self._international_to_city = None
        self._international_to_postcode = None
        self._international_to_province = None
        self._to_country_id = None
        self._to_country = None
        self._company = None
        self._carrier_service_id = None
        self._carrier_service = None
        self._from_carrier_zone_id = None
        self._from_carrier_zone = None
        self._to_carrier_zone_id = None
        self._to_carrier_zone = None
        self._invoice_item_id = None
        self._invoice_item = None
        self._carrier_consignment_id = None
        self._date_created = None
        self._company_name = None
        self._company_carrier_name = None
        self._quote_expiry_date = None
        self._booked_date = None
        self._completed_date = None
        self._completed_date_utc = None
        self._despatch_date = None
        self._despatch_date_utc = None
        self._despatch_date_local = None
        self._despatch_date_local_date_only = None
        self._desired_despatch_date_utc = None
        self._desired_despatch_date_local = None
        self._friendly_despatch_date = None
        self._friendly_despatch_time = None
        self._eta = None
        self._eta_local = None
        self._eta_utc = None
        self._from_company_location_id = None
        self._from_company_location_abbreviation = None
        self._from_company_location = None
        self._from_contact = None
        self._from_phone = None
        self._from_email = None
        self._from_address_line1 = None
        self._from_address_line2 = None
        self._from_location_id = None
        self._to_company_location = None
        self._to_company_location_id = None
        self._to_contact = None
        self._to_phone = None
        self._to_email = None
        self._to_address_line1 = None
        self._to_address_line2 = None
        self._to_location_id = None
        self._special_instructions = None
        self._public_guid = None
        self._public_guid_base64 = None
        self._customer_reference = None
        self._customer_reference2 = None
        self._service = None
        self._item_count = None
        self._company_carrier_account_id = None
        self._company_carrier_account = None
        self._consignment_total = None
        self._consignment_hourly_pricing = None
        self._total_weight = None
        self._total_cubic = None
        self._total_sell_cubic_weight = None
        self._total_cubic_display = None
        self._total_volume = None
        self._heaviest_weight = None
        self._sell_heaviest_weight = None
        self._overriding_carrier_accounts = None
        self._total_item_count = None
        self._total_sell_price = None
        self._total_base_sell_price = None
        self._total_tax_sell_price = None
        self._dangerous_goods = None
        self._carrier_reference = None
        self._carrier_manifest_reference = None
        self._serialised_custom_fields = None
        self._attachment_count = None
        self._inserted_by = None
        self._inserted_by_user_name = None
        self._staff_member_name = None
        self._important = None
        self._valid_from_company_location = None
        self._valid_to_company_location = None
        self._can_override_sell_prices = None
        self._external_invoiced = None
        self._is_deleted = None
        self._override_show_sell_values = None
        self._permanent_pickup = None
        self._custom_field_sets = None
        self._custom_values = None
        self._consignment_carrier_surcharges = None
        self._consignment_carrier_lane_rates = None
        self._consignment_items = None
        self._consignment_reconciliation_charges = None
        self._carrier_invoice_entries = None
        self._questions = None
        self._is_eta_editable = None
        self._original_eta_utc = None
        self._original_eta_local = None
        self._cutoff_utc = None
        self._cutoff_local = None
        self._eta_affected_by_public_holidays = None
        self._despatch_date_affected_by_public_holidays = None
        self._consignment_batch_id = None
        self._send_tracking_email = None
        self._send_tracking_sms = None
        self._distance = None
        self._sub_service_id = None
        self._invoice_pre_authorisation = None
        self._receiver_account_code = None
        self._receiver_account_id = None
        self._is_receiver_account = None
        self._is_hourly = None
        self._is_dg_consignment = None
        self._dgs_declaration = None
        self._dgs_declaration_date_time_utc = None
        self._dgs_declaration_user_id = None
        self._dgs_declaration_user = None
        self._printer_token = None
        self._priced_by_external_system = None
        self._is_test = None
        self._manifesting_timestamp_utc = None
        self._consignment_custom_status_id = None
        self._consignment_custom_status = None
        self._from_location_display = None
        self._to_location_display = None
        self.discriminator = None
        if company_id is not None:
            self.company_id = company_id
        if id is not None:
            self.id = id
        if consignment_number is not None:
            self.consignment_number = consignment_number
        if consignment_tracking_status_id is not None:
            self.consignment_tracking_status_id = consignment_tracking_status_id
        if manifest_id is not None:
            self.manifest_id = manifest_id
        if consignment_tracking_status is not None:
            self.consignment_tracking_status = consignment_tracking_status
        if consignment_status_type is not None:
            self.consignment_status_type = consignment_status_type
        if is_benign is not None:
            self.is_benign = is_benign
        if manually_track is not None:
            self.manually_track = manually_track
        if has_notes is not None:
            self.has_notes = has_notes
        if total_rows is not None:
            self.total_rows = total_rows
        if held_reconciliation is not None:
            self.held_reconciliation = held_reconciliation
        if held_invoicing is not None:
            self.held_invoicing = held_invoicing
        if can_manually_track_statuses is not None:
            self.can_manually_track_statuses = can_manually_track_statuses
        if can_manually_track_attachments is not None:
            self.can_manually_track_attachments = can_manually_track_attachments
        if automatically_tracks_statuses is not None:
            self.automatically_tracks_statuses = automatically_tracks_statuses
        if automatically_tracks_attachments is not None:
            self.automatically_tracks_attachments = automatically_tracks_attachments
        if held_reconciliation_user_id is not None:
            self.held_reconciliation_user_id = held_reconciliation_user_id
        if held_invoicing_user_id is not None:
            self.held_invoicing_user_id = held_invoicing_user_id
        if show_despatch_eta_times is not None:
            self.show_despatch_eta_times = show_despatch_eta_times
        if is_international is not None:
            self.is_international = is_international
        if carrier_received_commercial_invoice is not None:
            self.carrier_received_commercial_invoice = carrier_received_commercial_invoice
        if has_commercial_invoice is not None:
            self.has_commercial_invoice = has_commercial_invoice
        if is_commercial_invoice_machship_generated is not None:
            self.is_commercial_invoice_machship_generated = is_commercial_invoice_machship_generated
        if from_location is not None:
            self.from_location = from_location
        if from_name is not None:
            self.from_name = from_name
        if from_name_and_location is not None:
            self.from_name_and_location = from_name_and_location
        if to_location is not None:
            self.to_location = to_location
        if to_name is not None:
            self.to_name = to_name
        if to_name_and_location is not None:
            self.to_name_and_location = to_name_and_location
        if international_from_city is not None:
            self.international_from_city = international_from_city
        if international_from_postcode is not None:
            self.international_from_postcode = international_from_postcode
        if international_from_province is not None:
            self.international_from_province = international_from_province
        if from_country_id is not None:
            self.from_country_id = from_country_id
        if from_country is not None:
            self.from_country = from_country
        if international_to_city is not None:
            self.international_to_city = international_to_city
        if international_to_postcode is not None:
            self.international_to_postcode = international_to_postcode
        if international_to_province is not None:
            self.international_to_province = international_to_province
        if to_country_id is not None:
            self.to_country_id = to_country_id
        if to_country is not None:
            self.to_country = to_country
        if company is not None:
            self.company = company
        if carrier_service_id is not None:
            self.carrier_service_id = carrier_service_id
        if carrier_service is not None:
            self.carrier_service = carrier_service
        if from_carrier_zone_id is not None:
            self.from_carrier_zone_id = from_carrier_zone_id
        if from_carrier_zone is not None:
            self.from_carrier_zone = from_carrier_zone
        if to_carrier_zone_id is not None:
            self.to_carrier_zone_id = to_carrier_zone_id
        if to_carrier_zone is not None:
            self.to_carrier_zone = to_carrier_zone
        if invoice_item_id is not None:
            self.invoice_item_id = invoice_item_id
        if invoice_item is not None:
            self.invoice_item = invoice_item
        if carrier_consignment_id is not None:
            self.carrier_consignment_id = carrier_consignment_id
        if date_created is not None:
            self.date_created = date_created
        if company_name is not None:
            self.company_name = company_name
        if company_carrier_name is not None:
            self.company_carrier_name = company_carrier_name
        if quote_expiry_date is not None:
            self.quote_expiry_date = quote_expiry_date
        if booked_date is not None:
            self.booked_date = booked_date
        if completed_date is not None:
            self.completed_date = completed_date
        if completed_date_utc is not None:
            self.completed_date_utc = completed_date_utc
        if despatch_date is not None:
            self.despatch_date = despatch_date
        if despatch_date_utc is not None:
            self.despatch_date_utc = despatch_date_utc
        if despatch_date_local is not None:
            self.despatch_date_local = despatch_date_local
        if despatch_date_local_date_only is not None:
            self.despatch_date_local_date_only = despatch_date_local_date_only
        if desired_despatch_date_utc is not None:
            self.desired_despatch_date_utc = desired_despatch_date_utc
        if desired_despatch_date_local is not None:
            self.desired_despatch_date_local = desired_despatch_date_local
        if friendly_despatch_date is not None:
            self.friendly_despatch_date = friendly_despatch_date
        if friendly_despatch_time is not None:
            self.friendly_despatch_time = friendly_despatch_time
        if eta is not None:
            self.eta = eta
        if eta_local is not None:
            self.eta_local = eta_local
        if eta_utc is not None:
            self.eta_utc = eta_utc
        if from_company_location_id is not None:
            self.from_company_location_id = from_company_location_id
        if from_company_location_abbreviation is not None:
            self.from_company_location_abbreviation = from_company_location_abbreviation
        if from_company_location is not None:
            self.from_company_location = from_company_location
        if from_contact is not None:
            self.from_contact = from_contact
        if from_phone is not None:
            self.from_phone = from_phone
        if from_email is not None:
            self.from_email = from_email
        if from_address_line1 is not None:
            self.from_address_line1 = from_address_line1
        if from_address_line2 is not None:
            self.from_address_line2 = from_address_line2
        if from_location_id is not None:
            self.from_location_id = from_location_id
        if to_company_location is not None:
            self.to_company_location = to_company_location
        if to_company_location_id is not None:
            self.to_company_location_id = to_company_location_id
        if to_contact is not None:
            self.to_contact = to_contact
        if to_phone is not None:
            self.to_phone = to_phone
        if to_email is not None:
            self.to_email = to_email
        if to_address_line1 is not None:
            self.to_address_line1 = to_address_line1
        if to_address_line2 is not None:
            self.to_address_line2 = to_address_line2
        if to_location_id is not None:
            self.to_location_id = to_location_id
        if special_instructions is not None:
            self.special_instructions = special_instructions
        if public_guid is not None:
            self.public_guid = public_guid
        if public_guid_base64 is not None:
            self.public_guid_base64 = public_guid_base64
        if customer_reference is not None:
            self.customer_reference = customer_reference
        if customer_reference2 is not None:
            self.customer_reference2 = customer_reference2
        if service is not None:
            self.service = service
        if item_count is not None:
            self.item_count = item_count
        if company_carrier_account_id is not None:
            self.company_carrier_account_id = company_carrier_account_id
        if company_carrier_account is not None:
            self.company_carrier_account = company_carrier_account
        if consignment_total is not None:
            self.consignment_total = consignment_total
        if consignment_hourly_pricing is not None:
            self.consignment_hourly_pricing = consignment_hourly_pricing
        if total_weight is not None:
            self.total_weight = total_weight
        if total_cubic is not None:
            self.total_cubic = total_cubic
        if total_sell_cubic_weight is not None:
            self.total_sell_cubic_weight = total_sell_cubic_weight
        if total_cubic_display is not None:
            self.total_cubic_display = total_cubic_display
        if total_volume is not None:
            self.total_volume = total_volume
        if heaviest_weight is not None:
            self.heaviest_weight = heaviest_weight
        if sell_heaviest_weight is not None:
            self.sell_heaviest_weight = sell_heaviest_weight
        if overriding_carrier_accounts is not None:
            self.overriding_carrier_accounts = overriding_carrier_accounts
        if total_item_count is not None:
            self.total_item_count = total_item_count
        if total_sell_price is not None:
            self.total_sell_price = total_sell_price
        if total_base_sell_price is not None:
            self.total_base_sell_price = total_base_sell_price
        if total_tax_sell_price is not None:
            self.total_tax_sell_price = total_tax_sell_price
        if dangerous_goods is not None:
            self.dangerous_goods = dangerous_goods
        if carrier_reference is not None:
            self.carrier_reference = carrier_reference
        if carrier_manifest_reference is not None:
            self.carrier_manifest_reference = carrier_manifest_reference
        if serialised_custom_fields is not None:
            self.serialised_custom_fields = serialised_custom_fields
        if attachment_count is not None:
            self.attachment_count = attachment_count
        if inserted_by is not None:
            self.inserted_by = inserted_by
        if inserted_by_user_name is not None:
            self.inserted_by_user_name = inserted_by_user_name
        if staff_member_name is not None:
            self.staff_member_name = staff_member_name
        if important is not None:
            self.important = important
        if valid_from_company_location is not None:
            self.valid_from_company_location = valid_from_company_location
        if valid_to_company_location is not None:
            self.valid_to_company_location = valid_to_company_location
        if can_override_sell_prices is not None:
            self.can_override_sell_prices = can_override_sell_prices
        if external_invoiced is not None:
            self.external_invoiced = external_invoiced
        if is_deleted is not None:
            self.is_deleted = is_deleted
        if override_show_sell_values is not None:
            self.override_show_sell_values = override_show_sell_values
        if permanent_pickup is not None:
            self.permanent_pickup = permanent_pickup
        if custom_field_sets is not None:
            self.custom_field_sets = custom_field_sets
        if custom_values is not None:
            self.custom_values = custom_values
        if consignment_carrier_surcharges is not None:
            self.consignment_carrier_surcharges = consignment_carrier_surcharges
        if consignment_carrier_lane_rates is not None:
            self.consignment_carrier_lane_rates = consignment_carrier_lane_rates
        if consignment_items is not None:
            self.consignment_items = consignment_items
        if consignment_reconciliation_charges is not None:
            self.consignment_reconciliation_charges = consignment_reconciliation_charges
        if carrier_invoice_entries is not None:
            self.carrier_invoice_entries = carrier_invoice_entries
        if questions is not None:
            self.questions = questions
        if is_eta_editable is not None:
            self.is_eta_editable = is_eta_editable
        if original_eta_utc is not None:
            self.original_eta_utc = original_eta_utc
        if original_eta_local is not None:
            self.original_eta_local = original_eta_local
        if cutoff_utc is not None:
            self.cutoff_utc = cutoff_utc
        if cutoff_local is not None:
            self.cutoff_local = cutoff_local
        if eta_affected_by_public_holidays is not None:
            self.eta_affected_by_public_holidays = eta_affected_by_public_holidays
        if despatch_date_affected_by_public_holidays is not None:
            self.despatch_date_affected_by_public_holidays = despatch_date_affected_by_public_holidays
        if consignment_batch_id is not None:
            self.consignment_batch_id = consignment_batch_id
        if send_tracking_email is not None:
            self.send_tracking_email = send_tracking_email
        if send_tracking_sms is not None:
            self.send_tracking_sms = send_tracking_sms
        if distance is not None:
            self.distance = distance
        if sub_service_id is not None:
            self.sub_service_id = sub_service_id
        if invoice_pre_authorisation is not None:
            self.invoice_pre_authorisation = invoice_pre_authorisation
        if receiver_account_code is not None:
            self.receiver_account_code = receiver_account_code
        if receiver_account_id is not None:
            self.receiver_account_id = receiver_account_id
        if is_receiver_account is not None:
            self.is_receiver_account = is_receiver_account
        if is_hourly is not None:
            self.is_hourly = is_hourly
        if is_dg_consignment is not None:
            self.is_dg_consignment = is_dg_consignment
        if dgs_declaration is not None:
            self.dgs_declaration = dgs_declaration
        if dgs_declaration_date_time_utc is not None:
            self.dgs_declaration_date_time_utc = dgs_declaration_date_time_utc
        if dgs_declaration_user_id is not None:
            self.dgs_declaration_user_id = dgs_declaration_user_id
        if dgs_declaration_user is not None:
            self.dgs_declaration_user = dgs_declaration_user
        if printer_token is not None:
            self.printer_token = printer_token
        if priced_by_external_system is not None:
            self.priced_by_external_system = priced_by_external_system
        if is_test is not None:
            self.is_test = is_test
        if manifesting_timestamp_utc is not None:
            self.manifesting_timestamp_utc = manifesting_timestamp_utc
        if consignment_custom_status_id is not None:
            self.consignment_custom_status_id = consignment_custom_status_id
        if consignment_custom_status is not None:
            self.consignment_custom_status = consignment_custom_status
        if from_location_display is not None:
            self.from_location_display = from_location_display
        if to_location_display is not None:
            self.to_location_display = to_location_display

    @property
    def company_id(self):
        """Gets the company_id of this Consignment.  # noqa: E501


        :return: The company_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this Consignment.


        :param company_id: The company_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def id(self):
        """Gets the id of this Consignment.  # noqa: E501


        :return: The id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Consignment.


        :param id: The id of this Consignment.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def consignment_number(self):
        """Gets the consignment_number of this Consignment.  # noqa: E501


        :return: The consignment_number of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._consignment_number

    @consignment_number.setter
    def consignment_number(self, consignment_number):
        """Sets the consignment_number of this Consignment.


        :param consignment_number: The consignment_number of this Consignment.  # noqa: E501
        :type: str
        """

        self._consignment_number = consignment_number

    @property
    def consignment_tracking_status_id(self):
        """Gets the consignment_tracking_status_id of this Consignment.  # noqa: E501


        :return: The consignment_tracking_status_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._consignment_tracking_status_id

    @consignment_tracking_status_id.setter
    def consignment_tracking_status_id(self, consignment_tracking_status_id):
        """Sets the consignment_tracking_status_id of this Consignment.


        :param consignment_tracking_status_id: The consignment_tracking_status_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._consignment_tracking_status_id = consignment_tracking_status_id

    @property
    def manifest_id(self):
        """Gets the manifest_id of this Consignment.  # noqa: E501


        :return: The manifest_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._manifest_id

    @manifest_id.setter
    def manifest_id(self, manifest_id):
        """Sets the manifest_id of this Consignment.


        :param manifest_id: The manifest_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._manifest_id = manifest_id

    @property
    def consignment_tracking_status(self):
        """Gets the consignment_tracking_status of this Consignment.  # noqa: E501


        :return: The consignment_tracking_status of this Consignment.  # noqa: E501
        :rtype: ConsignmentTrackingStatus
        """
        return self._consignment_tracking_status

    @consignment_tracking_status.setter
    def consignment_tracking_status(self, consignment_tracking_status):
        """Sets the consignment_tracking_status of this Consignment.


        :param consignment_tracking_status: The consignment_tracking_status of this Consignment.  # noqa: E501
        :type: ConsignmentTrackingStatus
        """

        self._consignment_tracking_status = consignment_tracking_status

    @property
    def consignment_status_type(self):
        """Gets the consignment_status_type of this Consignment.  # noqa: E501


        :return: The consignment_status_type of this Consignment.  # noqa: E501
        :rtype: ConsignmentStatusType
        """
        return self._consignment_status_type

    @consignment_status_type.setter
    def consignment_status_type(self, consignment_status_type):
        """Sets the consignment_status_type of this Consignment.


        :param consignment_status_type: The consignment_status_type of this Consignment.  # noqa: E501
        :type: ConsignmentStatusType
        """

        self._consignment_status_type = consignment_status_type

    @property
    def is_benign(self):
        """Gets the is_benign of this Consignment.  # noqa: E501


        :return: The is_benign of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_benign

    @is_benign.setter
    def is_benign(self, is_benign):
        """Sets the is_benign of this Consignment.


        :param is_benign: The is_benign of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_benign = is_benign

    @property
    def manually_track(self):
        """Gets the manually_track of this Consignment.  # noqa: E501


        :return: The manually_track of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._manually_track

    @manually_track.setter
    def manually_track(self, manually_track):
        """Sets the manually_track of this Consignment.


        :param manually_track: The manually_track of this Consignment.  # noqa: E501
        :type: bool
        """

        self._manually_track = manually_track

    @property
    def has_notes(self):
        """Gets the has_notes of this Consignment.  # noqa: E501


        :return: The has_notes of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._has_notes

    @has_notes.setter
    def has_notes(self, has_notes):
        """Sets the has_notes of this Consignment.


        :param has_notes: The has_notes of this Consignment.  # noqa: E501
        :type: bool
        """

        self._has_notes = has_notes

    @property
    def total_rows(self):
        """Gets the total_rows of this Consignment.  # noqa: E501


        :return: The total_rows of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._total_rows

    @total_rows.setter
    def total_rows(self, total_rows):
        """Sets the total_rows of this Consignment.


        :param total_rows: The total_rows of this Consignment.  # noqa: E501
        :type: int
        """

        self._total_rows = total_rows

    @property
    def held_reconciliation(self):
        """Gets the held_reconciliation of this Consignment.  # noqa: E501


        :return: The held_reconciliation of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._held_reconciliation

    @held_reconciliation.setter
    def held_reconciliation(self, held_reconciliation):
        """Sets the held_reconciliation of this Consignment.


        :param held_reconciliation: The held_reconciliation of this Consignment.  # noqa: E501
        :type: bool
        """

        self._held_reconciliation = held_reconciliation

    @property
    def held_invoicing(self):
        """Gets the held_invoicing of this Consignment.  # noqa: E501


        :return: The held_invoicing of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._held_invoicing

    @held_invoicing.setter
    def held_invoicing(self, held_invoicing):
        """Sets the held_invoicing of this Consignment.


        :param held_invoicing: The held_invoicing of this Consignment.  # noqa: E501
        :type: bool
        """

        self._held_invoicing = held_invoicing

    @property
    def can_manually_track_statuses(self):
        """Gets the can_manually_track_statuses of this Consignment.  # noqa: E501


        :return: The can_manually_track_statuses of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._can_manually_track_statuses

    @can_manually_track_statuses.setter
    def can_manually_track_statuses(self, can_manually_track_statuses):
        """Sets the can_manually_track_statuses of this Consignment.


        :param can_manually_track_statuses: The can_manually_track_statuses of this Consignment.  # noqa: E501
        :type: bool
        """

        self._can_manually_track_statuses = can_manually_track_statuses

    @property
    def can_manually_track_attachments(self):
        """Gets the can_manually_track_attachments of this Consignment.  # noqa: E501


        :return: The can_manually_track_attachments of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._can_manually_track_attachments

    @can_manually_track_attachments.setter
    def can_manually_track_attachments(self, can_manually_track_attachments):
        """Sets the can_manually_track_attachments of this Consignment.


        :param can_manually_track_attachments: The can_manually_track_attachments of this Consignment.  # noqa: E501
        :type: bool
        """

        self._can_manually_track_attachments = can_manually_track_attachments

    @property
    def automatically_tracks_statuses(self):
        """Gets the automatically_tracks_statuses of this Consignment.  # noqa: E501


        :return: The automatically_tracks_statuses of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._automatically_tracks_statuses

    @automatically_tracks_statuses.setter
    def automatically_tracks_statuses(self, automatically_tracks_statuses):
        """Sets the automatically_tracks_statuses of this Consignment.


        :param automatically_tracks_statuses: The automatically_tracks_statuses of this Consignment.  # noqa: E501
        :type: bool
        """

        self._automatically_tracks_statuses = automatically_tracks_statuses

    @property
    def automatically_tracks_attachments(self):
        """Gets the automatically_tracks_attachments of this Consignment.  # noqa: E501


        :return: The automatically_tracks_attachments of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._automatically_tracks_attachments

    @automatically_tracks_attachments.setter
    def automatically_tracks_attachments(self, automatically_tracks_attachments):
        """Sets the automatically_tracks_attachments of this Consignment.


        :param automatically_tracks_attachments: The automatically_tracks_attachments of this Consignment.  # noqa: E501
        :type: bool
        """

        self._automatically_tracks_attachments = automatically_tracks_attachments

    @property
    def held_reconciliation_user_id(self):
        """Gets the held_reconciliation_user_id of this Consignment.  # noqa: E501


        :return: The held_reconciliation_user_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._held_reconciliation_user_id

    @held_reconciliation_user_id.setter
    def held_reconciliation_user_id(self, held_reconciliation_user_id):
        """Sets the held_reconciliation_user_id of this Consignment.


        :param held_reconciliation_user_id: The held_reconciliation_user_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._held_reconciliation_user_id = held_reconciliation_user_id

    @property
    def held_invoicing_user_id(self):
        """Gets the held_invoicing_user_id of this Consignment.  # noqa: E501


        :return: The held_invoicing_user_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._held_invoicing_user_id

    @held_invoicing_user_id.setter
    def held_invoicing_user_id(self, held_invoicing_user_id):
        """Sets the held_invoicing_user_id of this Consignment.


        :param held_invoicing_user_id: The held_invoicing_user_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._held_invoicing_user_id = held_invoicing_user_id

    @property
    def show_despatch_eta_times(self):
        """Gets the show_despatch_eta_times of this Consignment.  # noqa: E501


        :return: The show_despatch_eta_times of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._show_despatch_eta_times

    @show_despatch_eta_times.setter
    def show_despatch_eta_times(self, show_despatch_eta_times):
        """Sets the show_despatch_eta_times of this Consignment.


        :param show_despatch_eta_times: The show_despatch_eta_times of this Consignment.  # noqa: E501
        :type: bool
        """

        self._show_despatch_eta_times = show_despatch_eta_times

    @property
    def is_international(self):
        """Gets the is_international of this Consignment.  # noqa: E501


        :return: The is_international of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_international

    @is_international.setter
    def is_international(self, is_international):
        """Sets the is_international of this Consignment.


        :param is_international: The is_international of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_international = is_international

    @property
    def carrier_received_commercial_invoice(self):
        """Gets the carrier_received_commercial_invoice of this Consignment.  # noqa: E501


        :return: The carrier_received_commercial_invoice of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._carrier_received_commercial_invoice

    @carrier_received_commercial_invoice.setter
    def carrier_received_commercial_invoice(self, carrier_received_commercial_invoice):
        """Sets the carrier_received_commercial_invoice of this Consignment.


        :param carrier_received_commercial_invoice: The carrier_received_commercial_invoice of this Consignment.  # noqa: E501
        :type: bool
        """

        self._carrier_received_commercial_invoice = carrier_received_commercial_invoice

    @property
    def has_commercial_invoice(self):
        """Gets the has_commercial_invoice of this Consignment.  # noqa: E501


        :return: The has_commercial_invoice of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._has_commercial_invoice

    @has_commercial_invoice.setter
    def has_commercial_invoice(self, has_commercial_invoice):
        """Sets the has_commercial_invoice of this Consignment.


        :param has_commercial_invoice: The has_commercial_invoice of this Consignment.  # noqa: E501
        :type: bool
        """

        self._has_commercial_invoice = has_commercial_invoice

    @property
    def is_commercial_invoice_machship_generated(self):
        """Gets the is_commercial_invoice_machship_generated of this Consignment.  # noqa: E501


        :return: The is_commercial_invoice_machship_generated of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_commercial_invoice_machship_generated

    @is_commercial_invoice_machship_generated.setter
    def is_commercial_invoice_machship_generated(self, is_commercial_invoice_machship_generated):
        """Sets the is_commercial_invoice_machship_generated of this Consignment.


        :param is_commercial_invoice_machship_generated: The is_commercial_invoice_machship_generated of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_commercial_invoice_machship_generated = is_commercial_invoice_machship_generated

    @property
    def from_location(self):
        """Gets the from_location of this Consignment.  # noqa: E501


        :return: The from_location of this Consignment.  # noqa: E501
        :rtype: Location
        """
        return self._from_location

    @from_location.setter
    def from_location(self, from_location):
        """Sets the from_location of this Consignment.


        :param from_location: The from_location of this Consignment.  # noqa: E501
        :type: Location
        """

        self._from_location = from_location

    @property
    def from_name(self):
        """Gets the from_name of this Consignment.  # noqa: E501


        :return: The from_name of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_name

    @from_name.setter
    def from_name(self, from_name):
        """Sets the from_name of this Consignment.


        :param from_name: The from_name of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_name = from_name

    @property
    def from_name_and_location(self):
        """Gets the from_name_and_location of this Consignment.  # noqa: E501


        :return: The from_name_and_location of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_name_and_location

    @from_name_and_location.setter
    def from_name_and_location(self, from_name_and_location):
        """Sets the from_name_and_location of this Consignment.


        :param from_name_and_location: The from_name_and_location of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_name_and_location = from_name_and_location

    @property
    def to_location(self):
        """Gets the to_location of this Consignment.  # noqa: E501


        :return: The to_location of this Consignment.  # noqa: E501
        :rtype: Location
        """
        return self._to_location

    @to_location.setter
    def to_location(self, to_location):
        """Sets the to_location of this Consignment.


        :param to_location: The to_location of this Consignment.  # noqa: E501
        :type: Location
        """

        self._to_location = to_location

    @property
    def to_name(self):
        """Gets the to_name of this Consignment.  # noqa: E501


        :return: The to_name of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_name

    @to_name.setter
    def to_name(self, to_name):
        """Sets the to_name of this Consignment.


        :param to_name: The to_name of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_name = to_name

    @property
    def to_name_and_location(self):
        """Gets the to_name_and_location of this Consignment.  # noqa: E501


        :return: The to_name_and_location of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_name_and_location

    @to_name_and_location.setter
    def to_name_and_location(self, to_name_and_location):
        """Sets the to_name_and_location of this Consignment.


        :param to_name_and_location: The to_name_and_location of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_name_and_location = to_name_and_location

    @property
    def international_from_city(self):
        """Gets the international_from_city of this Consignment.  # noqa: E501


        :return: The international_from_city of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._international_from_city

    @international_from_city.setter
    def international_from_city(self, international_from_city):
        """Sets the international_from_city of this Consignment.


        :param international_from_city: The international_from_city of this Consignment.  # noqa: E501
        :type: str
        """

        self._international_from_city = international_from_city

    @property
    def international_from_postcode(self):
        """Gets the international_from_postcode of this Consignment.  # noqa: E501


        :return: The international_from_postcode of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._international_from_postcode

    @international_from_postcode.setter
    def international_from_postcode(self, international_from_postcode):
        """Sets the international_from_postcode of this Consignment.


        :param international_from_postcode: The international_from_postcode of this Consignment.  # noqa: E501
        :type: str
        """

        self._international_from_postcode = international_from_postcode

    @property
    def international_from_province(self):
        """Gets the international_from_province of this Consignment.  # noqa: E501


        :return: The international_from_province of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._international_from_province

    @international_from_province.setter
    def international_from_province(self, international_from_province):
        """Sets the international_from_province of this Consignment.


        :param international_from_province: The international_from_province of this Consignment.  # noqa: E501
        :type: str
        """

        self._international_from_province = international_from_province

    @property
    def from_country_id(self):
        """Gets the from_country_id of this Consignment.  # noqa: E501


        :return: The from_country_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._from_country_id

    @from_country_id.setter
    def from_country_id(self, from_country_id):
        """Sets the from_country_id of this Consignment.


        :param from_country_id: The from_country_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._from_country_id = from_country_id

    @property
    def from_country(self):
        """Gets the from_country of this Consignment.  # noqa: E501


        :return: The from_country of this Consignment.  # noqa: E501
        :rtype: Country
        """
        return self._from_country

    @from_country.setter
    def from_country(self, from_country):
        """Sets the from_country of this Consignment.


        :param from_country: The from_country of this Consignment.  # noqa: E501
        :type: Country
        """

        self._from_country = from_country

    @property
    def international_to_city(self):
        """Gets the international_to_city of this Consignment.  # noqa: E501


        :return: The international_to_city of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._international_to_city

    @international_to_city.setter
    def international_to_city(self, international_to_city):
        """Sets the international_to_city of this Consignment.


        :param international_to_city: The international_to_city of this Consignment.  # noqa: E501
        :type: str
        """

        self._international_to_city = international_to_city

    @property
    def international_to_postcode(self):
        """Gets the international_to_postcode of this Consignment.  # noqa: E501


        :return: The international_to_postcode of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._international_to_postcode

    @international_to_postcode.setter
    def international_to_postcode(self, international_to_postcode):
        """Sets the international_to_postcode of this Consignment.


        :param international_to_postcode: The international_to_postcode of this Consignment.  # noqa: E501
        :type: str
        """

        self._international_to_postcode = international_to_postcode

    @property
    def international_to_province(self):
        """Gets the international_to_province of this Consignment.  # noqa: E501


        :return: The international_to_province of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._international_to_province

    @international_to_province.setter
    def international_to_province(self, international_to_province):
        """Sets the international_to_province of this Consignment.


        :param international_to_province: The international_to_province of this Consignment.  # noqa: E501
        :type: str
        """

        self._international_to_province = international_to_province

    @property
    def to_country_id(self):
        """Gets the to_country_id of this Consignment.  # noqa: E501


        :return: The to_country_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._to_country_id

    @to_country_id.setter
    def to_country_id(self, to_country_id):
        """Sets the to_country_id of this Consignment.


        :param to_country_id: The to_country_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._to_country_id = to_country_id

    @property
    def to_country(self):
        """Gets the to_country of this Consignment.  # noqa: E501


        :return: The to_country of this Consignment.  # noqa: E501
        :rtype: Country
        """
        return self._to_country

    @to_country.setter
    def to_country(self, to_country):
        """Sets the to_country of this Consignment.


        :param to_country: The to_country of this Consignment.  # noqa: E501
        :type: Country
        """

        self._to_country = to_country

    @property
    def company(self):
        """Gets the company of this Consignment.  # noqa: E501


        :return: The company of this Consignment.  # noqa: E501
        :rtype: Company
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this Consignment.


        :param company: The company of this Consignment.  # noqa: E501
        :type: Company
        """

        self._company = company

    @property
    def carrier_service_id(self):
        """Gets the carrier_service_id of this Consignment.  # noqa: E501


        :return: The carrier_service_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._carrier_service_id

    @carrier_service_id.setter
    def carrier_service_id(self, carrier_service_id):
        """Sets the carrier_service_id of this Consignment.


        :param carrier_service_id: The carrier_service_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._carrier_service_id = carrier_service_id

    @property
    def carrier_service(self):
        """Gets the carrier_service of this Consignment.  # noqa: E501


        :return: The carrier_service of this Consignment.  # noqa: E501
        :rtype: CarrierServiceModel
        """
        return self._carrier_service

    @carrier_service.setter
    def carrier_service(self, carrier_service):
        """Sets the carrier_service of this Consignment.


        :param carrier_service: The carrier_service of this Consignment.  # noqa: E501
        :type: CarrierServiceModel
        """

        self._carrier_service = carrier_service

    @property
    def from_carrier_zone_id(self):
        """Gets the from_carrier_zone_id of this Consignment.  # noqa: E501


        :return: The from_carrier_zone_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._from_carrier_zone_id

    @from_carrier_zone_id.setter
    def from_carrier_zone_id(self, from_carrier_zone_id):
        """Sets the from_carrier_zone_id of this Consignment.


        :param from_carrier_zone_id: The from_carrier_zone_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._from_carrier_zone_id = from_carrier_zone_id

    @property
    def from_carrier_zone(self):
        """Gets the from_carrier_zone of this Consignment.  # noqa: E501


        :return: The from_carrier_zone of this Consignment.  # noqa: E501
        :rtype: CarrierZone
        """
        return self._from_carrier_zone

    @from_carrier_zone.setter
    def from_carrier_zone(self, from_carrier_zone):
        """Sets the from_carrier_zone of this Consignment.


        :param from_carrier_zone: The from_carrier_zone of this Consignment.  # noqa: E501
        :type: CarrierZone
        """

        self._from_carrier_zone = from_carrier_zone

    @property
    def to_carrier_zone_id(self):
        """Gets the to_carrier_zone_id of this Consignment.  # noqa: E501


        :return: The to_carrier_zone_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._to_carrier_zone_id

    @to_carrier_zone_id.setter
    def to_carrier_zone_id(self, to_carrier_zone_id):
        """Sets the to_carrier_zone_id of this Consignment.


        :param to_carrier_zone_id: The to_carrier_zone_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._to_carrier_zone_id = to_carrier_zone_id

    @property
    def to_carrier_zone(self):
        """Gets the to_carrier_zone of this Consignment.  # noqa: E501


        :return: The to_carrier_zone of this Consignment.  # noqa: E501
        :rtype: CarrierZone
        """
        return self._to_carrier_zone

    @to_carrier_zone.setter
    def to_carrier_zone(self, to_carrier_zone):
        """Sets the to_carrier_zone of this Consignment.


        :param to_carrier_zone: The to_carrier_zone of this Consignment.  # noqa: E501
        :type: CarrierZone
        """

        self._to_carrier_zone = to_carrier_zone

    @property
    def invoice_item_id(self):
        """Gets the invoice_item_id of this Consignment.  # noqa: E501


        :return: The invoice_item_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._invoice_item_id

    @invoice_item_id.setter
    def invoice_item_id(self, invoice_item_id):
        """Sets the invoice_item_id of this Consignment.


        :param invoice_item_id: The invoice_item_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._invoice_item_id = invoice_item_id

    @property
    def invoice_item(self):
        """Gets the invoice_item of this Consignment.  # noqa: E501


        :return: The invoice_item of this Consignment.  # noqa: E501
        :rtype: InvoiceItem
        """
        return self._invoice_item

    @invoice_item.setter
    def invoice_item(self, invoice_item):
        """Sets the invoice_item of this Consignment.


        :param invoice_item: The invoice_item of this Consignment.  # noqa: E501
        :type: InvoiceItem
        """

        self._invoice_item = invoice_item

    @property
    def carrier_consignment_id(self):
        """Gets the carrier_consignment_id of this Consignment.  # noqa: E501


        :return: The carrier_consignment_id of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._carrier_consignment_id

    @carrier_consignment_id.setter
    def carrier_consignment_id(self, carrier_consignment_id):
        """Sets the carrier_consignment_id of this Consignment.


        :param carrier_consignment_id: The carrier_consignment_id of this Consignment.  # noqa: E501
        :type: str
        """

        self._carrier_consignment_id = carrier_consignment_id

    @property
    def date_created(self):
        """Gets the date_created of this Consignment.  # noqa: E501


        :return: The date_created of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Consignment.


        :param date_created: The date_created of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def company_name(self):
        """Gets the company_name of this Consignment.  # noqa: E501


        :return: The company_name of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this Consignment.


        :param company_name: The company_name of this Consignment.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def company_carrier_name(self):
        """Gets the company_carrier_name of this Consignment.  # noqa: E501


        :return: The company_carrier_name of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._company_carrier_name

    @company_carrier_name.setter
    def company_carrier_name(self, company_carrier_name):
        """Sets the company_carrier_name of this Consignment.


        :param company_carrier_name: The company_carrier_name of this Consignment.  # noqa: E501
        :type: str
        """

        self._company_carrier_name = company_carrier_name

    @property
    def quote_expiry_date(self):
        """Gets the quote_expiry_date of this Consignment.  # noqa: E501


        :return: The quote_expiry_date of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._quote_expiry_date

    @quote_expiry_date.setter
    def quote_expiry_date(self, quote_expiry_date):
        """Sets the quote_expiry_date of this Consignment.


        :param quote_expiry_date: The quote_expiry_date of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._quote_expiry_date = quote_expiry_date

    @property
    def booked_date(self):
        """Gets the booked_date of this Consignment.  # noqa: E501


        :return: The booked_date of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._booked_date

    @booked_date.setter
    def booked_date(self, booked_date):
        """Sets the booked_date of this Consignment.


        :param booked_date: The booked_date of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._booked_date = booked_date

    @property
    def completed_date(self):
        """Gets the completed_date of this Consignment.  # noqa: E501


        :return: The completed_date of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_date

    @completed_date.setter
    def completed_date(self, completed_date):
        """Sets the completed_date of this Consignment.


        :param completed_date: The completed_date of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._completed_date = completed_date

    @property
    def completed_date_utc(self):
        """Gets the completed_date_utc of this Consignment.  # noqa: E501


        :return: The completed_date_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_date_utc

    @completed_date_utc.setter
    def completed_date_utc(self, completed_date_utc):
        """Sets the completed_date_utc of this Consignment.


        :param completed_date_utc: The completed_date_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._completed_date_utc = completed_date_utc

    @property
    def despatch_date(self):
        """Gets the despatch_date of this Consignment.  # noqa: E501


        :return: The despatch_date of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date

    @despatch_date.setter
    def despatch_date(self, despatch_date):
        """Sets the despatch_date of this Consignment.


        :param despatch_date: The despatch_date of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._despatch_date = despatch_date

    @property
    def despatch_date_utc(self):
        """Gets the despatch_date_utc of this Consignment.  # noqa: E501


        :return: The despatch_date_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_utc

    @despatch_date_utc.setter
    def despatch_date_utc(self, despatch_date_utc):
        """Sets the despatch_date_utc of this Consignment.


        :param despatch_date_utc: The despatch_date_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_utc = despatch_date_utc

    @property
    def despatch_date_local(self):
        """Gets the despatch_date_local of this Consignment.  # noqa: E501


        :return: The despatch_date_local of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_local

    @despatch_date_local.setter
    def despatch_date_local(self, despatch_date_local):
        """Sets the despatch_date_local of this Consignment.


        :param despatch_date_local: The despatch_date_local of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_local = despatch_date_local

    @property
    def despatch_date_local_date_only(self):
        """Gets the despatch_date_local_date_only of this Consignment.  # noqa: E501


        :return: The despatch_date_local_date_only of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date_local_date_only

    @despatch_date_local_date_only.setter
    def despatch_date_local_date_only(self, despatch_date_local_date_only):
        """Sets the despatch_date_local_date_only of this Consignment.


        :param despatch_date_local_date_only: The despatch_date_local_date_only of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._despatch_date_local_date_only = despatch_date_local_date_only

    @property
    def desired_despatch_date_utc(self):
        """Gets the desired_despatch_date_utc of this Consignment.  # noqa: E501


        :return: The desired_despatch_date_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._desired_despatch_date_utc

    @desired_despatch_date_utc.setter
    def desired_despatch_date_utc(self, desired_despatch_date_utc):
        """Sets the desired_despatch_date_utc of this Consignment.


        :param desired_despatch_date_utc: The desired_despatch_date_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._desired_despatch_date_utc = desired_despatch_date_utc

    @property
    def desired_despatch_date_local(self):
        """Gets the desired_despatch_date_local of this Consignment.  # noqa: E501


        :return: The desired_despatch_date_local of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._desired_despatch_date_local

    @desired_despatch_date_local.setter
    def desired_despatch_date_local(self, desired_despatch_date_local):
        """Sets the desired_despatch_date_local of this Consignment.


        :param desired_despatch_date_local: The desired_despatch_date_local of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._desired_despatch_date_local = desired_despatch_date_local

    @property
    def friendly_despatch_date(self):
        """Gets the friendly_despatch_date of this Consignment.  # noqa: E501


        :return: The friendly_despatch_date of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._friendly_despatch_date

    @friendly_despatch_date.setter
    def friendly_despatch_date(self, friendly_despatch_date):
        """Sets the friendly_despatch_date of this Consignment.


        :param friendly_despatch_date: The friendly_despatch_date of this Consignment.  # noqa: E501
        :type: str
        """

        self._friendly_despatch_date = friendly_despatch_date

    @property
    def friendly_despatch_time(self):
        """Gets the friendly_despatch_time of this Consignment.  # noqa: E501


        :return: The friendly_despatch_time of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._friendly_despatch_time

    @friendly_despatch_time.setter
    def friendly_despatch_time(self, friendly_despatch_time):
        """Sets the friendly_despatch_time of this Consignment.


        :param friendly_despatch_time: The friendly_despatch_time of this Consignment.  # noqa: E501
        :type: str
        """

        self._friendly_despatch_time = friendly_despatch_time

    @property
    def eta(self):
        """Gets the eta of this Consignment.  # noqa: E501


        :return: The eta of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._eta

    @eta.setter
    def eta(self, eta):
        """Sets the eta of this Consignment.


        :param eta: The eta of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._eta = eta

    @property
    def eta_local(self):
        """Gets the eta_local of this Consignment.  # noqa: E501


        :return: The eta_local of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._eta_local

    @eta_local.setter
    def eta_local(self, eta_local):
        """Sets the eta_local of this Consignment.


        :param eta_local: The eta_local of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._eta_local = eta_local

    @property
    def eta_utc(self):
        """Gets the eta_utc of this Consignment.  # noqa: E501


        :return: The eta_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._eta_utc

    @eta_utc.setter
    def eta_utc(self, eta_utc):
        """Sets the eta_utc of this Consignment.


        :param eta_utc: The eta_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._eta_utc = eta_utc

    @property
    def from_company_location_id(self):
        """Gets the from_company_location_id of this Consignment.  # noqa: E501


        :return: The from_company_location_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._from_company_location_id

    @from_company_location_id.setter
    def from_company_location_id(self, from_company_location_id):
        """Sets the from_company_location_id of this Consignment.


        :param from_company_location_id: The from_company_location_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._from_company_location_id = from_company_location_id

    @property
    def from_company_location_abbreviation(self):
        """Gets the from_company_location_abbreviation of this Consignment.  # noqa: E501


        :return: The from_company_location_abbreviation of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_company_location_abbreviation

    @from_company_location_abbreviation.setter
    def from_company_location_abbreviation(self, from_company_location_abbreviation):
        """Sets the from_company_location_abbreviation of this Consignment.


        :param from_company_location_abbreviation: The from_company_location_abbreviation of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_company_location_abbreviation = from_company_location_abbreviation

    @property
    def from_company_location(self):
        """Gets the from_company_location of this Consignment.  # noqa: E501


        :return: The from_company_location of this Consignment.  # noqa: E501
        :rtype: CompanyLocation
        """
        return self._from_company_location

    @from_company_location.setter
    def from_company_location(self, from_company_location):
        """Sets the from_company_location of this Consignment.


        :param from_company_location: The from_company_location of this Consignment.  # noqa: E501
        :type: CompanyLocation
        """

        self._from_company_location = from_company_location

    @property
    def from_contact(self):
        """Gets the from_contact of this Consignment.  # noqa: E501


        :return: The from_contact of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_contact

    @from_contact.setter
    def from_contact(self, from_contact):
        """Sets the from_contact of this Consignment.


        :param from_contact: The from_contact of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_contact = from_contact

    @property
    def from_phone(self):
        """Gets the from_phone of this Consignment.  # noqa: E501


        :return: The from_phone of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_phone

    @from_phone.setter
    def from_phone(self, from_phone):
        """Sets the from_phone of this Consignment.


        :param from_phone: The from_phone of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_phone = from_phone

    @property
    def from_email(self):
        """Gets the from_email of this Consignment.  # noqa: E501


        :return: The from_email of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_email

    @from_email.setter
    def from_email(self, from_email):
        """Sets the from_email of this Consignment.


        :param from_email: The from_email of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_email = from_email

    @property
    def from_address_line1(self):
        """Gets the from_address_line1 of this Consignment.  # noqa: E501


        :return: The from_address_line1 of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_address_line1

    @from_address_line1.setter
    def from_address_line1(self, from_address_line1):
        """Sets the from_address_line1 of this Consignment.


        :param from_address_line1: The from_address_line1 of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_address_line1 = from_address_line1

    @property
    def from_address_line2(self):
        """Gets the from_address_line2 of this Consignment.  # noqa: E501


        :return: The from_address_line2 of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_address_line2

    @from_address_line2.setter
    def from_address_line2(self, from_address_line2):
        """Sets the from_address_line2 of this Consignment.


        :param from_address_line2: The from_address_line2 of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_address_line2 = from_address_line2

    @property
    def from_location_id(self):
        """Gets the from_location_id of this Consignment.  # noqa: E501


        :return: The from_location_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._from_location_id

    @from_location_id.setter
    def from_location_id(self, from_location_id):
        """Sets the from_location_id of this Consignment.


        :param from_location_id: The from_location_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._from_location_id = from_location_id

    @property
    def to_company_location(self):
        """Gets the to_company_location of this Consignment.  # noqa: E501


        :return: The to_company_location of this Consignment.  # noqa: E501
        :rtype: CompanyLocation
        """
        return self._to_company_location

    @to_company_location.setter
    def to_company_location(self, to_company_location):
        """Sets the to_company_location of this Consignment.


        :param to_company_location: The to_company_location of this Consignment.  # noqa: E501
        :type: CompanyLocation
        """

        self._to_company_location = to_company_location

    @property
    def to_company_location_id(self):
        """Gets the to_company_location_id of this Consignment.  # noqa: E501


        :return: The to_company_location_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._to_company_location_id

    @to_company_location_id.setter
    def to_company_location_id(self, to_company_location_id):
        """Sets the to_company_location_id of this Consignment.


        :param to_company_location_id: The to_company_location_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._to_company_location_id = to_company_location_id

    @property
    def to_contact(self):
        """Gets the to_contact of this Consignment.  # noqa: E501


        :return: The to_contact of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_contact

    @to_contact.setter
    def to_contact(self, to_contact):
        """Sets the to_contact of this Consignment.


        :param to_contact: The to_contact of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_contact = to_contact

    @property
    def to_phone(self):
        """Gets the to_phone of this Consignment.  # noqa: E501


        :return: The to_phone of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_phone

    @to_phone.setter
    def to_phone(self, to_phone):
        """Sets the to_phone of this Consignment.


        :param to_phone: The to_phone of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_phone = to_phone

    @property
    def to_email(self):
        """Gets the to_email of this Consignment.  # noqa: E501


        :return: The to_email of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_email

    @to_email.setter
    def to_email(self, to_email):
        """Sets the to_email of this Consignment.


        :param to_email: The to_email of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_email = to_email

    @property
    def to_address_line1(self):
        """Gets the to_address_line1 of this Consignment.  # noqa: E501


        :return: The to_address_line1 of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_address_line1

    @to_address_line1.setter
    def to_address_line1(self, to_address_line1):
        """Sets the to_address_line1 of this Consignment.


        :param to_address_line1: The to_address_line1 of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_address_line1 = to_address_line1

    @property
    def to_address_line2(self):
        """Gets the to_address_line2 of this Consignment.  # noqa: E501


        :return: The to_address_line2 of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_address_line2

    @to_address_line2.setter
    def to_address_line2(self, to_address_line2):
        """Sets the to_address_line2 of this Consignment.


        :param to_address_line2: The to_address_line2 of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_address_line2 = to_address_line2

    @property
    def to_location_id(self):
        """Gets the to_location_id of this Consignment.  # noqa: E501


        :return: The to_location_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._to_location_id

    @to_location_id.setter
    def to_location_id(self, to_location_id):
        """Sets the to_location_id of this Consignment.


        :param to_location_id: The to_location_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._to_location_id = to_location_id

    @property
    def special_instructions(self):
        """Gets the special_instructions of this Consignment.  # noqa: E501


        :return: The special_instructions of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._special_instructions

    @special_instructions.setter
    def special_instructions(self, special_instructions):
        """Sets the special_instructions of this Consignment.


        :param special_instructions: The special_instructions of this Consignment.  # noqa: E501
        :type: str
        """

        self._special_instructions = special_instructions

    @property
    def public_guid(self):
        """Gets the public_guid of this Consignment.  # noqa: E501


        :return: The public_guid of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._public_guid

    @public_guid.setter
    def public_guid(self, public_guid):
        """Sets the public_guid of this Consignment.


        :param public_guid: The public_guid of this Consignment.  # noqa: E501
        :type: str
        """

        self._public_guid = public_guid

    @property
    def public_guid_base64(self):
        """Gets the public_guid_base64 of this Consignment.  # noqa: E501


        :return: The public_guid_base64 of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._public_guid_base64

    @public_guid_base64.setter
    def public_guid_base64(self, public_guid_base64):
        """Sets the public_guid_base64 of this Consignment.


        :param public_guid_base64: The public_guid_base64 of this Consignment.  # noqa: E501
        :type: str
        """

        self._public_guid_base64 = public_guid_base64

    @property
    def customer_reference(self):
        """Gets the customer_reference of this Consignment.  # noqa: E501


        :return: The customer_reference of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference

    @customer_reference.setter
    def customer_reference(self, customer_reference):
        """Sets the customer_reference of this Consignment.


        :param customer_reference: The customer_reference of this Consignment.  # noqa: E501
        :type: str
        """

        self._customer_reference = customer_reference

    @property
    def customer_reference2(self):
        """Gets the customer_reference2 of this Consignment.  # noqa: E501


        :return: The customer_reference2 of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference2

    @customer_reference2.setter
    def customer_reference2(self, customer_reference2):
        """Sets the customer_reference2 of this Consignment.


        :param customer_reference2: The customer_reference2 of this Consignment.  # noqa: E501
        :type: str
        """

        self._customer_reference2 = customer_reference2

    @property
    def service(self):
        """Gets the service of this Consignment.  # noqa: E501


        :return: The service of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this Consignment.


        :param service: The service of this Consignment.  # noqa: E501
        :type: str
        """

        self._service = service

    @property
    def item_count(self):
        """Gets the item_count of this Consignment.  # noqa: E501


        :return: The item_count of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this Consignment.


        :param item_count: The item_count of this Consignment.  # noqa: E501
        :type: int
        """

        self._item_count = item_count

    @property
    def company_carrier_account_id(self):
        """Gets the company_carrier_account_id of this Consignment.  # noqa: E501


        :return: The company_carrier_account_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._company_carrier_account_id

    @company_carrier_account_id.setter
    def company_carrier_account_id(self, company_carrier_account_id):
        """Sets the company_carrier_account_id of this Consignment.


        :param company_carrier_account_id: The company_carrier_account_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._company_carrier_account_id = company_carrier_account_id

    @property
    def company_carrier_account(self):
        """Gets the company_carrier_account of this Consignment.  # noqa: E501


        :return: The company_carrier_account of this Consignment.  # noqa: E501
        :rtype: CompanyCarrierAccount
        """
        return self._company_carrier_account

    @company_carrier_account.setter
    def company_carrier_account(self, company_carrier_account):
        """Sets the company_carrier_account of this Consignment.


        :param company_carrier_account: The company_carrier_account of this Consignment.  # noqa: E501
        :type: CompanyCarrierAccount
        """

        self._company_carrier_account = company_carrier_account

    @property
    def consignment_total(self):
        """Gets the consignment_total of this Consignment.  # noqa: E501


        :return: The consignment_total of this Consignment.  # noqa: E501
        :rtype: ConsignmentTotal
        """
        return self._consignment_total

    @consignment_total.setter
    def consignment_total(self, consignment_total):
        """Sets the consignment_total of this Consignment.


        :param consignment_total: The consignment_total of this Consignment.  # noqa: E501
        :type: ConsignmentTotal
        """

        self._consignment_total = consignment_total

    @property
    def consignment_hourly_pricing(self):
        """Gets the consignment_hourly_pricing of this Consignment.  # noqa: E501


        :return: The consignment_hourly_pricing of this Consignment.  # noqa: E501
        :rtype: ConsignmentHourlyPricing
        """
        return self._consignment_hourly_pricing

    @consignment_hourly_pricing.setter
    def consignment_hourly_pricing(self, consignment_hourly_pricing):
        """Sets the consignment_hourly_pricing of this Consignment.


        :param consignment_hourly_pricing: The consignment_hourly_pricing of this Consignment.  # noqa: E501
        :type: ConsignmentHourlyPricing
        """

        self._consignment_hourly_pricing = consignment_hourly_pricing

    @property
    def total_weight(self):
        """Gets the total_weight of this Consignment.  # noqa: E501


        :return: The total_weight of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_weight

    @total_weight.setter
    def total_weight(self, total_weight):
        """Sets the total_weight of this Consignment.


        :param total_weight: The total_weight of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_weight = total_weight

    @property
    def total_cubic(self):
        """Gets the total_cubic of this Consignment.  # noqa: E501


        :return: The total_cubic of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_cubic

    @total_cubic.setter
    def total_cubic(self, total_cubic):
        """Sets the total_cubic of this Consignment.


        :param total_cubic: The total_cubic of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_cubic = total_cubic

    @property
    def total_sell_cubic_weight(self):
        """Gets the total_sell_cubic_weight of this Consignment.  # noqa: E501


        :return: The total_sell_cubic_weight of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_sell_cubic_weight

    @total_sell_cubic_weight.setter
    def total_sell_cubic_weight(self, total_sell_cubic_weight):
        """Sets the total_sell_cubic_weight of this Consignment.


        :param total_sell_cubic_weight: The total_sell_cubic_weight of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_sell_cubic_weight = total_sell_cubic_weight

    @property
    def total_cubic_display(self):
        """Gets the total_cubic_display of this Consignment.  # noqa: E501


        :return: The total_cubic_display of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_cubic_display

    @total_cubic_display.setter
    def total_cubic_display(self, total_cubic_display):
        """Sets the total_cubic_display of this Consignment.


        :param total_cubic_display: The total_cubic_display of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_cubic_display = total_cubic_display

    @property
    def total_volume(self):
        """Gets the total_volume of this Consignment.  # noqa: E501


        :return: The total_volume of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_volume

    @total_volume.setter
    def total_volume(self, total_volume):
        """Sets the total_volume of this Consignment.


        :param total_volume: The total_volume of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_volume = total_volume

    @property
    def heaviest_weight(self):
        """Gets the heaviest_weight of this Consignment.  # noqa: E501


        :return: The heaviest_weight of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._heaviest_weight

    @heaviest_weight.setter
    def heaviest_weight(self, heaviest_weight):
        """Sets the heaviest_weight of this Consignment.


        :param heaviest_weight: The heaviest_weight of this Consignment.  # noqa: E501
        :type: float
        """

        self._heaviest_weight = heaviest_weight

    @property
    def sell_heaviest_weight(self):
        """Gets the sell_heaviest_weight of this Consignment.  # noqa: E501


        :return: The sell_heaviest_weight of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._sell_heaviest_weight

    @sell_heaviest_weight.setter
    def sell_heaviest_weight(self, sell_heaviest_weight):
        """Sets the sell_heaviest_weight of this Consignment.


        :param sell_heaviest_weight: The sell_heaviest_weight of this Consignment.  # noqa: E501
        :type: float
        """

        self._sell_heaviest_weight = sell_heaviest_weight

    @property
    def overriding_carrier_accounts(self):
        """Gets the overriding_carrier_accounts of this Consignment.  # noqa: E501


        :return: The overriding_carrier_accounts of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._overriding_carrier_accounts

    @overriding_carrier_accounts.setter
    def overriding_carrier_accounts(self, overriding_carrier_accounts):
        """Sets the overriding_carrier_accounts of this Consignment.


        :param overriding_carrier_accounts: The overriding_carrier_accounts of this Consignment.  # noqa: E501
        :type: bool
        """

        self._overriding_carrier_accounts = overriding_carrier_accounts

    @property
    def total_item_count(self):
        """Gets the total_item_count of this Consignment.  # noqa: E501


        :return: The total_item_count of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._total_item_count

    @total_item_count.setter
    def total_item_count(self, total_item_count):
        """Sets the total_item_count of this Consignment.


        :param total_item_count: The total_item_count of this Consignment.  # noqa: E501
        :type: int
        """

        self._total_item_count = total_item_count

    @property
    def total_sell_price(self):
        """Gets the total_sell_price of this Consignment.  # noqa: E501


        :return: The total_sell_price of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_sell_price

    @total_sell_price.setter
    def total_sell_price(self, total_sell_price):
        """Sets the total_sell_price of this Consignment.


        :param total_sell_price: The total_sell_price of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_sell_price = total_sell_price

    @property
    def total_base_sell_price(self):
        """Gets the total_base_sell_price of this Consignment.  # noqa: E501


        :return: The total_base_sell_price of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_base_sell_price

    @total_base_sell_price.setter
    def total_base_sell_price(self, total_base_sell_price):
        """Sets the total_base_sell_price of this Consignment.


        :param total_base_sell_price: The total_base_sell_price of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_base_sell_price = total_base_sell_price

    @property
    def total_tax_sell_price(self):
        """Gets the total_tax_sell_price of this Consignment.  # noqa: E501


        :return: The total_tax_sell_price of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._total_tax_sell_price

    @total_tax_sell_price.setter
    def total_tax_sell_price(self, total_tax_sell_price):
        """Sets the total_tax_sell_price of this Consignment.


        :param total_tax_sell_price: The total_tax_sell_price of this Consignment.  # noqa: E501
        :type: float
        """

        self._total_tax_sell_price = total_tax_sell_price

    @property
    def dangerous_goods(self):
        """Gets the dangerous_goods of this Consignment.  # noqa: E501


        :return: The dangerous_goods of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._dangerous_goods

    @dangerous_goods.setter
    def dangerous_goods(self, dangerous_goods):
        """Sets the dangerous_goods of this Consignment.


        :param dangerous_goods: The dangerous_goods of this Consignment.  # noqa: E501
        :type: bool
        """

        self._dangerous_goods = dangerous_goods

    @property
    def carrier_reference(self):
        """Gets the carrier_reference of this Consignment.  # noqa: E501


        :return: The carrier_reference of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._carrier_reference

    @carrier_reference.setter
    def carrier_reference(self, carrier_reference):
        """Sets the carrier_reference of this Consignment.


        :param carrier_reference: The carrier_reference of this Consignment.  # noqa: E501
        :type: str
        """

        self._carrier_reference = carrier_reference

    @property
    def carrier_manifest_reference(self):
        """Gets the carrier_manifest_reference of this Consignment.  # noqa: E501


        :return: The carrier_manifest_reference of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._carrier_manifest_reference

    @carrier_manifest_reference.setter
    def carrier_manifest_reference(self, carrier_manifest_reference):
        """Sets the carrier_manifest_reference of this Consignment.


        :param carrier_manifest_reference: The carrier_manifest_reference of this Consignment.  # noqa: E501
        :type: str
        """

        self._carrier_manifest_reference = carrier_manifest_reference

    @property
    def serialised_custom_fields(self):
        """Gets the serialised_custom_fields of this Consignment.  # noqa: E501

        Stores all carrier custom field values in a serialised string  # noqa: E501

        :return: The serialised_custom_fields of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._serialised_custom_fields

    @serialised_custom_fields.setter
    def serialised_custom_fields(self, serialised_custom_fields):
        """Sets the serialised_custom_fields of this Consignment.

        Stores all carrier custom field values in a serialised string  # noqa: E501

        :param serialised_custom_fields: The serialised_custom_fields of this Consignment.  # noqa: E501
        :type: str
        """

        self._serialised_custom_fields = serialised_custom_fields

    @property
    def attachment_count(self):
        """Gets the attachment_count of this Consignment.  # noqa: E501


        :return: The attachment_count of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._attachment_count

    @attachment_count.setter
    def attachment_count(self, attachment_count):
        """Sets the attachment_count of this Consignment.


        :param attachment_count: The attachment_count of this Consignment.  # noqa: E501
        :type: int
        """

        self._attachment_count = attachment_count

    @property
    def inserted_by(self):
        """Gets the inserted_by of this Consignment.  # noqa: E501


        :return: The inserted_by of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._inserted_by

    @inserted_by.setter
    def inserted_by(self, inserted_by):
        """Sets the inserted_by of this Consignment.


        :param inserted_by: The inserted_by of this Consignment.  # noqa: E501
        :type: int
        """

        self._inserted_by = inserted_by

    @property
    def inserted_by_user_name(self):
        """Gets the inserted_by_user_name of this Consignment.  # noqa: E501


        :return: The inserted_by_user_name of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._inserted_by_user_name

    @inserted_by_user_name.setter
    def inserted_by_user_name(self, inserted_by_user_name):
        """Sets the inserted_by_user_name of this Consignment.


        :param inserted_by_user_name: The inserted_by_user_name of this Consignment.  # noqa: E501
        :type: str
        """

        self._inserted_by_user_name = inserted_by_user_name

    @property
    def staff_member_name(self):
        """Gets the staff_member_name of this Consignment.  # noqa: E501


        :return: The staff_member_name of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._staff_member_name

    @staff_member_name.setter
    def staff_member_name(self, staff_member_name):
        """Sets the staff_member_name of this Consignment.


        :param staff_member_name: The staff_member_name of this Consignment.  # noqa: E501
        :type: str
        """

        self._staff_member_name = staff_member_name

    @property
    def important(self):
        """Gets the important of this Consignment.  # noqa: E501


        :return: The important of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._important

    @important.setter
    def important(self, important):
        """Sets the important of this Consignment.


        :param important: The important of this Consignment.  # noqa: E501
        :type: bool
        """

        self._important = important

    @property
    def valid_from_company_location(self):
        """Gets the valid_from_company_location of this Consignment.  # noqa: E501

        True when the from location is linked to a valid pickup location for the given carrier/carrier account  # noqa: E501

        :return: The valid_from_company_location of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._valid_from_company_location

    @valid_from_company_location.setter
    def valid_from_company_location(self, valid_from_company_location):
        """Sets the valid_from_company_location of this Consignment.

        True when the from location is linked to a valid pickup location for the given carrier/carrier account  # noqa: E501

        :param valid_from_company_location: The valid_from_company_location of this Consignment.  # noqa: E501
        :type: bool
        """

        self._valid_from_company_location = valid_from_company_location

    @property
    def valid_to_company_location(self):
        """Gets the valid_to_company_location of this Consignment.  # noqa: E501

        True when the to location is linked to a valid delivery location for the given carrier/carrier account  # noqa: E501

        :return: The valid_to_company_location of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._valid_to_company_location

    @valid_to_company_location.setter
    def valid_to_company_location(self, valid_to_company_location):
        """Sets the valid_to_company_location of this Consignment.

        True when the to location is linked to a valid delivery location for the given carrier/carrier account  # noqa: E501

        :param valid_to_company_location: The valid_to_company_location of this Consignment.  # noqa: E501
        :type: bool
        """

        self._valid_to_company_location = valid_to_company_location

    @property
    def can_override_sell_prices(self):
        """Gets the can_override_sell_prices of this Consignment.  # noqa: E501

        used by the view pages to determine whether cost prices should be shown  # noqa: E501

        :return: The can_override_sell_prices of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._can_override_sell_prices

    @can_override_sell_prices.setter
    def can_override_sell_prices(self, can_override_sell_prices):
        """Sets the can_override_sell_prices of this Consignment.

        used by the view pages to determine whether cost prices should be shown  # noqa: E501

        :param can_override_sell_prices: The can_override_sell_prices of this Consignment.  # noqa: E501
        :type: bool
        """

        self._can_override_sell_prices = can_override_sell_prices

    @property
    def external_invoiced(self):
        """Gets the external_invoiced of this Consignment.  # noqa: E501


        :return: The external_invoiced of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._external_invoiced

    @external_invoiced.setter
    def external_invoiced(self, external_invoiced):
        """Sets the external_invoiced of this Consignment.


        :param external_invoiced: The external_invoiced of this Consignment.  # noqa: E501
        :type: bool
        """

        self._external_invoiced = external_invoiced

    @property
    def is_deleted(self):
        """Gets the is_deleted of this Consignment.  # noqa: E501


        :return: The is_deleted of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this Consignment.


        :param is_deleted: The is_deleted of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_deleted = is_deleted

    @property
    def override_show_sell_values(self):
        """Gets the override_show_sell_values of this Consignment.  # noqa: E501


        :return: The override_show_sell_values of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._override_show_sell_values

    @override_show_sell_values.setter
    def override_show_sell_values(self, override_show_sell_values):
        """Sets the override_show_sell_values of this Consignment.


        :param override_show_sell_values: The override_show_sell_values of this Consignment.  # noqa: E501
        :type: bool
        """

        self._override_show_sell_values = override_show_sell_values

    @property
    def permanent_pickup(self):
        """Gets the permanent_pickup of this Consignment.  # noqa: E501


        :return: The permanent_pickup of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._permanent_pickup

    @permanent_pickup.setter
    def permanent_pickup(self, permanent_pickup):
        """Sets the permanent_pickup of this Consignment.


        :param permanent_pickup: The permanent_pickup of this Consignment.  # noqa: E501
        :type: bool
        """

        self._permanent_pickup = permanent_pickup

    @property
    def custom_field_sets(self):
        """Gets the custom_field_sets of this Consignment.  # noqa: E501


        :return: The custom_field_sets of this Consignment.  # noqa: E501
        :rtype: list[CustomFieldSet]
        """
        return self._custom_field_sets

    @custom_field_sets.setter
    def custom_field_sets(self, custom_field_sets):
        """Sets the custom_field_sets of this Consignment.


        :param custom_field_sets: The custom_field_sets of this Consignment.  # noqa: E501
        :type: list[CustomFieldSet]
        """

        self._custom_field_sets = custom_field_sets

    @property
    def custom_values(self):
        """Gets the custom_values of this Consignment.  # noqa: E501


        :return: The custom_values of this Consignment.  # noqa: E501
        :rtype: list[CustomValue]
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this Consignment.


        :param custom_values: The custom_values of this Consignment.  # noqa: E501
        :type: list[CustomValue]
        """

        self._custom_values = custom_values

    @property
    def consignment_carrier_surcharges(self):
        """Gets the consignment_carrier_surcharges of this Consignment.  # noqa: E501


        :return: The consignment_carrier_surcharges of this Consignment.  # noqa: E501
        :rtype: list[ConsignmentSurcharge]
        """
        return self._consignment_carrier_surcharges

    @consignment_carrier_surcharges.setter
    def consignment_carrier_surcharges(self, consignment_carrier_surcharges):
        """Sets the consignment_carrier_surcharges of this Consignment.


        :param consignment_carrier_surcharges: The consignment_carrier_surcharges of this Consignment.  # noqa: E501
        :type: list[ConsignmentSurcharge]
        """

        self._consignment_carrier_surcharges = consignment_carrier_surcharges

    @property
    def consignment_carrier_lane_rates(self):
        """Gets the consignment_carrier_lane_rates of this Consignment.  # noqa: E501


        :return: The consignment_carrier_lane_rates of this Consignment.  # noqa: E501
        :rtype: list[ConsignmentCarrierLaneRate]
        """
        return self._consignment_carrier_lane_rates

    @consignment_carrier_lane_rates.setter
    def consignment_carrier_lane_rates(self, consignment_carrier_lane_rates):
        """Sets the consignment_carrier_lane_rates of this Consignment.


        :param consignment_carrier_lane_rates: The consignment_carrier_lane_rates of this Consignment.  # noqa: E501
        :type: list[ConsignmentCarrierLaneRate]
        """

        self._consignment_carrier_lane_rates = consignment_carrier_lane_rates

    @property
    def consignment_items(self):
        """Gets the consignment_items of this Consignment.  # noqa: E501


        :return: The consignment_items of this Consignment.  # noqa: E501
        :rtype: list[ConsignmentItem]
        """
        return self._consignment_items

    @consignment_items.setter
    def consignment_items(self, consignment_items):
        """Sets the consignment_items of this Consignment.


        :param consignment_items: The consignment_items of this Consignment.  # noqa: E501
        :type: list[ConsignmentItem]
        """

        self._consignment_items = consignment_items

    @property
    def consignment_reconciliation_charges(self):
        """Gets the consignment_reconciliation_charges of this Consignment.  # noqa: E501


        :return: The consignment_reconciliation_charges of this Consignment.  # noqa: E501
        :rtype: list[ConsignmentReconciliationCharge]
        """
        return self._consignment_reconciliation_charges

    @consignment_reconciliation_charges.setter
    def consignment_reconciliation_charges(self, consignment_reconciliation_charges):
        """Sets the consignment_reconciliation_charges of this Consignment.


        :param consignment_reconciliation_charges: The consignment_reconciliation_charges of this Consignment.  # noqa: E501
        :type: list[ConsignmentReconciliationCharge]
        """

        self._consignment_reconciliation_charges = consignment_reconciliation_charges

    @property
    def carrier_invoice_entries(self):
        """Gets the carrier_invoice_entries of this Consignment.  # noqa: E501


        :return: The carrier_invoice_entries of this Consignment.  # noqa: E501
        :rtype: list[CarrierInvoiceEntry]
        """
        return self._carrier_invoice_entries

    @carrier_invoice_entries.setter
    def carrier_invoice_entries(self, carrier_invoice_entries):
        """Sets the carrier_invoice_entries of this Consignment.


        :param carrier_invoice_entries: The carrier_invoice_entries of this Consignment.  # noqa: E501
        :type: list[CarrierInvoiceEntry]
        """

        self._carrier_invoice_entries = carrier_invoice_entries

    @property
    def questions(self):
        """Gets the questions of this Consignment.  # noqa: E501


        :return: The questions of this Consignment.  # noqa: E501
        :rtype: list[QuestionLite]
        """
        return self._questions

    @questions.setter
    def questions(self, questions):
        """Sets the questions of this Consignment.


        :param questions: The questions of this Consignment.  # noqa: E501
        :type: list[QuestionLite]
        """

        self._questions = questions

    @property
    def is_eta_editable(self):
        """Gets the is_eta_editable of this Consignment.  # noqa: E501


        :return: The is_eta_editable of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_eta_editable

    @is_eta_editable.setter
    def is_eta_editable(self, is_eta_editable):
        """Sets the is_eta_editable of this Consignment.


        :param is_eta_editable: The is_eta_editable of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_eta_editable = is_eta_editable

    @property
    def original_eta_utc(self):
        """Gets the original_eta_utc of this Consignment.  # noqa: E501


        :return: The original_eta_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._original_eta_utc

    @original_eta_utc.setter
    def original_eta_utc(self, original_eta_utc):
        """Sets the original_eta_utc of this Consignment.


        :param original_eta_utc: The original_eta_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._original_eta_utc = original_eta_utc

    @property
    def original_eta_local(self):
        """Gets the original_eta_local of this Consignment.  # noqa: E501


        :return: The original_eta_local of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._original_eta_local

    @original_eta_local.setter
    def original_eta_local(self, original_eta_local):
        """Sets the original_eta_local of this Consignment.


        :param original_eta_local: The original_eta_local of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._original_eta_local = original_eta_local

    @property
    def cutoff_utc(self):
        """Gets the cutoff_utc of this Consignment.  # noqa: E501


        :return: The cutoff_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._cutoff_utc

    @cutoff_utc.setter
    def cutoff_utc(self, cutoff_utc):
        """Sets the cutoff_utc of this Consignment.


        :param cutoff_utc: The cutoff_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._cutoff_utc = cutoff_utc

    @property
    def cutoff_local(self):
        """Gets the cutoff_local of this Consignment.  # noqa: E501


        :return: The cutoff_local of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._cutoff_local

    @cutoff_local.setter
    def cutoff_local(self, cutoff_local):
        """Sets the cutoff_local of this Consignment.


        :param cutoff_local: The cutoff_local of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._cutoff_local = cutoff_local

    @property
    def eta_affected_by_public_holidays(self):
        """Gets the eta_affected_by_public_holidays of this Consignment.  # noqa: E501


        :return: The eta_affected_by_public_holidays of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._eta_affected_by_public_holidays

    @eta_affected_by_public_holidays.setter
    def eta_affected_by_public_holidays(self, eta_affected_by_public_holidays):
        """Sets the eta_affected_by_public_holidays of this Consignment.


        :param eta_affected_by_public_holidays: The eta_affected_by_public_holidays of this Consignment.  # noqa: E501
        :type: bool
        """

        self._eta_affected_by_public_holidays = eta_affected_by_public_holidays

    @property
    def despatch_date_affected_by_public_holidays(self):
        """Gets the despatch_date_affected_by_public_holidays of this Consignment.  # noqa: E501


        :return: The despatch_date_affected_by_public_holidays of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._despatch_date_affected_by_public_holidays

    @despatch_date_affected_by_public_holidays.setter
    def despatch_date_affected_by_public_holidays(self, despatch_date_affected_by_public_holidays):
        """Sets the despatch_date_affected_by_public_holidays of this Consignment.


        :param despatch_date_affected_by_public_holidays: The despatch_date_affected_by_public_holidays of this Consignment.  # noqa: E501
        :type: bool
        """

        self._despatch_date_affected_by_public_holidays = despatch_date_affected_by_public_holidays

    @property
    def consignment_batch_id(self):
        """Gets the consignment_batch_id of this Consignment.  # noqa: E501

        The ID of the batch the consignment was created in. Null if the consignment was not created as part of a batch.  # noqa: E501

        :return: The consignment_batch_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._consignment_batch_id

    @consignment_batch_id.setter
    def consignment_batch_id(self, consignment_batch_id):
        """Sets the consignment_batch_id of this Consignment.

        The ID of the batch the consignment was created in. Null if the consignment was not created as part of a batch.  # noqa: E501

        :param consignment_batch_id: The consignment_batch_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._consignment_batch_id = consignment_batch_id

    @property
    def send_tracking_email(self):
        """Gets the send_tracking_email of this Consignment.  # noqa: E501


        :return: The send_tracking_email of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._send_tracking_email

    @send_tracking_email.setter
    def send_tracking_email(self, send_tracking_email):
        """Sets the send_tracking_email of this Consignment.


        :param send_tracking_email: The send_tracking_email of this Consignment.  # noqa: E501
        :type: bool
        """

        self._send_tracking_email = send_tracking_email

    @property
    def send_tracking_sms(self):
        """Gets the send_tracking_sms of this Consignment.  # noqa: E501


        :return: The send_tracking_sms of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._send_tracking_sms

    @send_tracking_sms.setter
    def send_tracking_sms(self, send_tracking_sms):
        """Sets the send_tracking_sms of this Consignment.


        :param send_tracking_sms: The send_tracking_sms of this Consignment.  # noqa: E501
        :type: bool
        """

        self._send_tracking_sms = send_tracking_sms

    @property
    def distance(self):
        """Gets the distance of this Consignment.  # noqa: E501


        :return: The distance of this Consignment.  # noqa: E501
        :rtype: float
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this Consignment.


        :param distance: The distance of this Consignment.  # noqa: E501
        :type: float
        """

        self._distance = distance

    @property
    def sub_service_id(self):
        """Gets the sub_service_id of this Consignment.  # noqa: E501


        :return: The sub_service_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._sub_service_id

    @sub_service_id.setter
    def sub_service_id(self, sub_service_id):
        """Sets the sub_service_id of this Consignment.


        :param sub_service_id: The sub_service_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._sub_service_id = sub_service_id

    @property
    def invoice_pre_authorisation(self):
        """Gets the invoice_pre_authorisation of this Consignment.  # noqa: E501


        :return: The invoice_pre_authorisation of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._invoice_pre_authorisation

    @invoice_pre_authorisation.setter
    def invoice_pre_authorisation(self, invoice_pre_authorisation):
        """Sets the invoice_pre_authorisation of this Consignment.


        :param invoice_pre_authorisation: The invoice_pre_authorisation of this Consignment.  # noqa: E501
        :type: bool
        """

        self._invoice_pre_authorisation = invoice_pre_authorisation

    @property
    def receiver_account_code(self):
        """Gets the receiver_account_code of this Consignment.  # noqa: E501


        :return: The receiver_account_code of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._receiver_account_code

    @receiver_account_code.setter
    def receiver_account_code(self, receiver_account_code):
        """Sets the receiver_account_code of this Consignment.


        :param receiver_account_code: The receiver_account_code of this Consignment.  # noqa: E501
        :type: str
        """

        self._receiver_account_code = receiver_account_code

    @property
    def receiver_account_id(self):
        """Gets the receiver_account_id of this Consignment.  # noqa: E501


        :return: The receiver_account_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._receiver_account_id

    @receiver_account_id.setter
    def receiver_account_id(self, receiver_account_id):
        """Sets the receiver_account_id of this Consignment.


        :param receiver_account_id: The receiver_account_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._receiver_account_id = receiver_account_id

    @property
    def is_receiver_account(self):
        """Gets the is_receiver_account of this Consignment.  # noqa: E501


        :return: The is_receiver_account of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_receiver_account

    @is_receiver_account.setter
    def is_receiver_account(self, is_receiver_account):
        """Sets the is_receiver_account of this Consignment.


        :param is_receiver_account: The is_receiver_account of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_receiver_account = is_receiver_account

    @property
    def is_hourly(self):
        """Gets the is_hourly of this Consignment.  # noqa: E501


        :return: The is_hourly of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_hourly

    @is_hourly.setter
    def is_hourly(self, is_hourly):
        """Sets the is_hourly of this Consignment.


        :param is_hourly: The is_hourly of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_hourly = is_hourly

    @property
    def is_dg_consignment(self):
        """Gets the is_dg_consignment of this Consignment.  # noqa: E501


        :return: The is_dg_consignment of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_dg_consignment

    @is_dg_consignment.setter
    def is_dg_consignment(self, is_dg_consignment):
        """Sets the is_dg_consignment of this Consignment.


        :param is_dg_consignment: The is_dg_consignment of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_dg_consignment = is_dg_consignment

    @property
    def dgs_declaration(self):
        """Gets the dgs_declaration of this Consignment.  # noqa: E501


        :return: The dgs_declaration of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._dgs_declaration

    @dgs_declaration.setter
    def dgs_declaration(self, dgs_declaration):
        """Sets the dgs_declaration of this Consignment.


        :param dgs_declaration: The dgs_declaration of this Consignment.  # noqa: E501
        :type: bool
        """

        self._dgs_declaration = dgs_declaration

    @property
    def dgs_declaration_date_time_utc(self):
        """Gets the dgs_declaration_date_time_utc of this Consignment.  # noqa: E501


        :return: The dgs_declaration_date_time_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._dgs_declaration_date_time_utc

    @dgs_declaration_date_time_utc.setter
    def dgs_declaration_date_time_utc(self, dgs_declaration_date_time_utc):
        """Sets the dgs_declaration_date_time_utc of this Consignment.


        :param dgs_declaration_date_time_utc: The dgs_declaration_date_time_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._dgs_declaration_date_time_utc = dgs_declaration_date_time_utc

    @property
    def dgs_declaration_user_id(self):
        """Gets the dgs_declaration_user_id of this Consignment.  # noqa: E501


        :return: The dgs_declaration_user_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._dgs_declaration_user_id

    @dgs_declaration_user_id.setter
    def dgs_declaration_user_id(self, dgs_declaration_user_id):
        """Sets the dgs_declaration_user_id of this Consignment.


        :param dgs_declaration_user_id: The dgs_declaration_user_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._dgs_declaration_user_id = dgs_declaration_user_id

    @property
    def dgs_declaration_user(self):
        """Gets the dgs_declaration_user of this Consignment.  # noqa: E501


        :return: The dgs_declaration_user of this Consignment.  # noqa: E501
        :rtype: UserLite
        """
        return self._dgs_declaration_user

    @dgs_declaration_user.setter
    def dgs_declaration_user(self, dgs_declaration_user):
        """Sets the dgs_declaration_user of this Consignment.


        :param dgs_declaration_user: The dgs_declaration_user of this Consignment.  # noqa: E501
        :type: UserLite
        """

        self._dgs_declaration_user = dgs_declaration_user

    @property
    def printer_token(self):
        """Gets the printer_token of this Consignment.  # noqa: E501


        :return: The printer_token of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._printer_token

    @printer_token.setter
    def printer_token(self, printer_token):
        """Sets the printer_token of this Consignment.


        :param printer_token: The printer_token of this Consignment.  # noqa: E501
        :type: str
        """

        self._printer_token = printer_token

    @property
    def priced_by_external_system(self):
        """Gets the priced_by_external_system of this Consignment.  # noqa: E501


        :return: The priced_by_external_system of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._priced_by_external_system

    @priced_by_external_system.setter
    def priced_by_external_system(self, priced_by_external_system):
        """Sets the priced_by_external_system of this Consignment.


        :param priced_by_external_system: The priced_by_external_system of this Consignment.  # noqa: E501
        :type: bool
        """

        self._priced_by_external_system = priced_by_external_system

    @property
    def is_test(self):
        """Gets the is_test of this Consignment.  # noqa: E501


        :return: The is_test of this Consignment.  # noqa: E501
        :rtype: bool
        """
        return self._is_test

    @is_test.setter
    def is_test(self, is_test):
        """Sets the is_test of this Consignment.


        :param is_test: The is_test of this Consignment.  # noqa: E501
        :type: bool
        """

        self._is_test = is_test

    @property
    def manifesting_timestamp_utc(self):
        """Gets the manifesting_timestamp_utc of this Consignment.  # noqa: E501


        :return: The manifesting_timestamp_utc of this Consignment.  # noqa: E501
        :rtype: datetime
        """
        return self._manifesting_timestamp_utc

    @manifesting_timestamp_utc.setter
    def manifesting_timestamp_utc(self, manifesting_timestamp_utc):
        """Sets the manifesting_timestamp_utc of this Consignment.


        :param manifesting_timestamp_utc: The manifesting_timestamp_utc of this Consignment.  # noqa: E501
        :type: datetime
        """

        self._manifesting_timestamp_utc = manifesting_timestamp_utc

    @property
    def consignment_custom_status_id(self):
        """Gets the consignment_custom_status_id of this Consignment.  # noqa: E501


        :return: The consignment_custom_status_id of this Consignment.  # noqa: E501
        :rtype: int
        """
        return self._consignment_custom_status_id

    @consignment_custom_status_id.setter
    def consignment_custom_status_id(self, consignment_custom_status_id):
        """Sets the consignment_custom_status_id of this Consignment.


        :param consignment_custom_status_id: The consignment_custom_status_id of this Consignment.  # noqa: E501
        :type: int
        """

        self._consignment_custom_status_id = consignment_custom_status_id

    @property
    def consignment_custom_status(self):
        """Gets the consignment_custom_status of this Consignment.  # noqa: E501


        :return: The consignment_custom_status of this Consignment.  # noqa: E501
        :rtype: ConsignmentCustomStatus
        """
        return self._consignment_custom_status

    @consignment_custom_status.setter
    def consignment_custom_status(self, consignment_custom_status):
        """Sets the consignment_custom_status of this Consignment.


        :param consignment_custom_status: The consignment_custom_status of this Consignment.  # noqa: E501
        :type: ConsignmentCustomStatus
        """

        self._consignment_custom_status = consignment_custom_status

    @property
    def from_location_display(self):
        """Gets the from_location_display of this Consignment.  # noqa: E501


        :return: The from_location_display of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._from_location_display

    @from_location_display.setter
    def from_location_display(self, from_location_display):
        """Sets the from_location_display of this Consignment.


        :param from_location_display: The from_location_display of this Consignment.  # noqa: E501
        :type: str
        """

        self._from_location_display = from_location_display

    @property
    def to_location_display(self):
        """Gets the to_location_display of this Consignment.  # noqa: E501


        :return: The to_location_display of this Consignment.  # noqa: E501
        :rtype: str
        """
        return self._to_location_display

    @to_location_display.setter
    def to_location_display(self, to_location_display):
        """Sets the to_location_display of this Consignment.


        :param to_location_display: The to_location_display of this Consignment.  # noqa: E501
        :type: str
        """

        self._to_location_display = to_location_display

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Consignment, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Consignment):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
