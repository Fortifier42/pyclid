# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Company(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'location_id': 'int',
        'location': 'Location',
        'parent_company_id': 'int',
        'parent_company': 'CompanyLite',
        'billing_parent_company_id': 'int',
        'billing_parent_company': 'CompanyLite',
        'notification_forwarding_company_id': 'int',
        'notification_forwarding_company': 'CompanyLite',
        'id': 'int',
        'company_type': 'CompanyType',
        'enterprise_tier': 'EnterpriseTier',
        'name': 'str',
        'account_code': 'str',
        'description': 'str',
        'children': 'list[CompanyLiteWithChildren]',
        'phone': 'str',
        'fax': 'str',
        'email': 'str',
        'display_email': 'str',
        'address_line1': 'str',
        'address_line2': 'str',
        'abn': 'str',
        'invoice_terms': 'int',
        'invoice_due_date_type': 'InvoiceDueDateType',
        'invoice_default_surcharge': 'float',
        'display_name': 'str',
        'base64_logo_string': 'str',
        'invoice_logo': 'str',
        'invoice_logo_mime_type': 'str',
        'invoice_logo_file_name': 'str',
        'payment_instructions': 'str',
        'invoice_number_prefix': 'str',
        'invoice_number_next_number': 'int',
        'invoice_number_total_length': 'int',
        'invoice_email_address': 'str',
        'inheritable_items': 'bool',
        'inheritable_locations': 'bool',
        'inheritable_receiver_accounts': 'bool',
        'date_created': 'datetime',
        'sales_portfolio': 'str',
        'account_management_portfolio': 'str',
        'referral_portfolio': 'str',
        'tier': 'str',
        'company_tier_id': 'int',
        'company_tier': 'CompanyTier',
        'broker_show_carrier_reference_on_invoice': 'bool',
        'broker_hide_ms_number_on_invoice': 'bool',
        'address_lines_friendly': 'str',
        'address_friendly': 'str',
        'default_sort_order': 'str',
        'default_item_type': 'ItemType',
        'broker_invoice_notes': 'str',
        'broker_invoice_email_subject': 'str',
        'company_carrier_settings': 'list[CompanyCarrierSetting]',
        'tracking_email_type': 'TrackingType',
        'tracking_sms_type': 'TrackingType',
        'support_company_name': 'str',
        'support_phone': 'str',
        'support_email': 'str',
        'support_web_address': 'str',
        'public_company_display_name': 'str',
        'default_despatch_time': 'TimeSpan',
        'impersonation_message': 'str',
        'support_logo_file_information_id': 'int',
        'tracking_show_carrier_reference': 'bool',
        'tracking_show_customer_reference1': 'bool',
        'tracking_show_customer_reference2': 'bool',
        'tracking_show_consignment_number': 'bool',
        'tracking_show_website': 'bool',
        'tracking_show_phone': 'bool',
        'tracking_show_email': 'bool',
        'tracking_show_items': 'bool',
        'invoice_logo_file_information_id': 'int',
        'navigation_logo_file_information_id': 'int',
        'consignment_creation_type': 'ConsignmentCreationType',
        'default_consignment_carrier_selection': 'ConsignmentCarrierSelectionType',
        'default_carrier': 'int',
        'default_service': 'int',
        'consignment_created_or_updated_class_id': 'int',
        'consignment_created_or_updated_serialised_settings': 'str',
        'consignment_manifested_class_id': 'int',
        'consignment_manifested_serialised_settings': 'str',
        'dg_enabled': 'bool',
        'emergency_contact_number': 'str',
        'inheritable_item_types': 'bool',
        'should_hold_for_invoicing': 'bool',
        'should_hold_for_reconciliation': 'bool',
        'invoice_integration_type': 'InvoiceIntegrationType',
        'external_finance_package_tracking_name': 'str',
        'allow_auto_consignment_consolidation': 'bool',
        'auto_consignment_consolidation_settings': 'str',
        'invoice_sending_type': 'InvoiceSendingType',
        'trading_start_date': 'datetime',
        'organisation_id': 'int',
        'organisation': 'Organisation',
        'quote_total_display_type': 'QuoteTotalDisplayType',
        'quote_total_display_type_inheritable': 'bool',
        'add_manifest_summary_to_manifest_paperwork': 'ShowManifestSummaryType',
        'show_manifest_summary_inheritable': 'bool',
        'gst_number': 'str',
        'enable_email_notifications': 'bool',
        'notification_email_address': 'str',
        'default_invoice_wrapping_type': 'InvoiceWrappingType',
        'is_disabled': 'bool',
        'recurring_billing_charge_description': 'str',
        'recurring_billing_charge_amount': 'float',
        'tracking_url': 'str',
        'question_ids': 'list[int]',
        'tracking_page_type': 'TrackingPageType',
        'tracking_hex_colour': 'str',
        'tracking_page_extra_information_template': 'str',
        'tracking_show_hex_colour': 'bool',
        'tracking_show_template': 'bool',
        'international_enabled': 'InternationalEnabledType',
        'hide_carrier_item_type_on_invoice': 'HideCarrierItemTypeOnInvoiceType'
    }

    attribute_map = {
        'location_id': 'locationId',
        'location': 'location',
        'parent_company_id': 'parentCompanyId',
        'parent_company': 'parentCompany',
        'billing_parent_company_id': 'billingParentCompanyId',
        'billing_parent_company': 'billingParentCompany',
        'notification_forwarding_company_id': 'notificationForwardingCompanyId',
        'notification_forwarding_company': 'notificationForwardingCompany',
        'id': 'id',
        'company_type': 'companyType',
        'enterprise_tier': 'enterpriseTier',
        'name': 'name',
        'account_code': 'accountCode',
        'description': 'description',
        'children': 'children',
        'phone': 'phone',
        'fax': 'fax',
        'email': 'email',
        'display_email': 'displayEmail',
        'address_line1': 'addressLine1',
        'address_line2': 'addressLine2',
        'abn': 'abn',
        'invoice_terms': 'invoiceTerms',
        'invoice_due_date_type': 'invoiceDueDateType',
        'invoice_default_surcharge': 'invoiceDefaultSurcharge',
        'display_name': 'displayName',
        'base64_logo_string': 'base64LogoString',
        'invoice_logo': 'invoiceLogo',
        'invoice_logo_mime_type': 'invoiceLogoMimeType',
        'invoice_logo_file_name': 'invoiceLogoFileName',
        'payment_instructions': 'paymentInstructions',
        'invoice_number_prefix': 'invoiceNumberPrefix',
        'invoice_number_next_number': 'invoiceNumberNextNumber',
        'invoice_number_total_length': 'invoiceNumberTotalLength',
        'invoice_email_address': 'invoiceEmailAddress',
        'inheritable_items': 'inheritableItems',
        'inheritable_locations': 'inheritableLocations',
        'inheritable_receiver_accounts': 'inheritableReceiverAccounts',
        'date_created': 'dateCreated',
        'sales_portfolio': 'salesPortfolio',
        'account_management_portfolio': 'accountManagementPortfolio',
        'referral_portfolio': 'referralPortfolio',
        'tier': 'tier',
        'company_tier_id': 'companyTierId',
        'company_tier': 'companyTier',
        'broker_show_carrier_reference_on_invoice': 'brokerShowCarrierReferenceOnInvoice',
        'broker_hide_ms_number_on_invoice': 'brokerHideMsNumberOnInvoice',
        'address_lines_friendly': 'addressLinesFriendly',
        'address_friendly': 'addressFriendly',
        'default_sort_order': 'defaultSortOrder',
        'default_item_type': 'defaultItemType',
        'broker_invoice_notes': 'brokerInvoiceNotes',
        'broker_invoice_email_subject': 'brokerInvoiceEmailSubject',
        'company_carrier_settings': 'companyCarrierSettings',
        'tracking_email_type': 'trackingEmailType',
        'tracking_sms_type': 'trackingSmsType',
        'support_company_name': 'supportCompanyName',
        'support_phone': 'supportPhone',
        'support_email': 'supportEmail',
        'support_web_address': 'supportWebAddress',
        'public_company_display_name': 'publicCompanyDisplayName',
        'default_despatch_time': 'defaultDespatchTime',
        'impersonation_message': 'impersonationMessage',
        'support_logo_file_information_id': 'supportLogoFileInformationId',
        'tracking_show_carrier_reference': 'trackingShowCarrierReference',
        'tracking_show_customer_reference1': 'trackingShowCustomerReference1',
        'tracking_show_customer_reference2': 'trackingShowCustomerReference2',
        'tracking_show_consignment_number': 'trackingShowConsignmentNumber',
        'tracking_show_website': 'trackingShowWebsite',
        'tracking_show_phone': 'trackingShowPhone',
        'tracking_show_email': 'trackingShowEmail',
        'tracking_show_items': 'trackingShowItems',
        'invoice_logo_file_information_id': 'invoiceLogoFileInformationId',
        'navigation_logo_file_information_id': 'navigationLogoFileInformationId',
        'consignment_creation_type': 'consignmentCreationType',
        'default_consignment_carrier_selection': 'defaultConsignmentCarrierSelection',
        'default_carrier': 'defaultCarrier',
        'default_service': 'defaultService',
        'consignment_created_or_updated_class_id': 'consignmentCreatedOrUpdatedClassId',
        'consignment_created_or_updated_serialised_settings': 'consignmentCreatedOrUpdatedSerialisedSettings',
        'consignment_manifested_class_id': 'consignmentManifestedClassId',
        'consignment_manifested_serialised_settings': 'consignmentManifestedSerialisedSettings',
        'dg_enabled': 'dgEnabled',
        'emergency_contact_number': 'emergencyContactNumber',
        'inheritable_item_types': 'inheritableItemTypes',
        'should_hold_for_invoicing': 'shouldHoldForInvoicing',
        'should_hold_for_reconciliation': 'shouldHoldForReconciliation',
        'invoice_integration_type': 'invoiceIntegrationType',
        'external_finance_package_tracking_name': 'externalFinancePackageTrackingName',
        'allow_auto_consignment_consolidation': 'allowAutoConsignmentConsolidation',
        'auto_consignment_consolidation_settings': 'autoConsignmentConsolidationSettings',
        'invoice_sending_type': 'invoiceSendingType',
        'trading_start_date': 'tradingStartDate',
        'organisation_id': 'organisationId',
        'organisation': 'organisation',
        'quote_total_display_type': 'quoteTotalDisplayType',
        'quote_total_display_type_inheritable': 'quoteTotalDisplayTypeInheritable',
        'add_manifest_summary_to_manifest_paperwork': 'addManifestSummaryToManifestPaperwork',
        'show_manifest_summary_inheritable': 'showManifestSummaryInheritable',
        'gst_number': 'gstNumber',
        'enable_email_notifications': 'enableEmailNotifications',
        'notification_email_address': 'notificationEmailAddress',
        'default_invoice_wrapping_type': 'defaultInvoiceWrappingType',
        'is_disabled': 'isDisabled',
        'recurring_billing_charge_description': 'recurringBillingChargeDescription',
        'recurring_billing_charge_amount': 'recurringBillingChargeAmount',
        'tracking_url': 'trackingUrl',
        'question_ids': 'questionIds',
        'tracking_page_type': 'trackingPageType',
        'tracking_hex_colour': 'trackingHexColour',
        'tracking_page_extra_information_template': 'trackingPageExtraInformationTemplate',
        'tracking_show_hex_colour': 'trackingShowHexColour',
        'tracking_show_template': 'trackingShowTemplate',
        'international_enabled': 'internationalEnabled',
        'hide_carrier_item_type_on_invoice': 'hideCarrierItemTypeOnInvoice'
    }

    def __init__(self, location_id=None, location=None, parent_company_id=None, parent_company=None, billing_parent_company_id=None, billing_parent_company=None, notification_forwarding_company_id=None, notification_forwarding_company=None, id=None, company_type=None, enterprise_tier=None, name=None, account_code=None, description=None, children=None, phone=None, fax=None, email=None, display_email=None, address_line1=None, address_line2=None, abn=None, invoice_terms=None, invoice_due_date_type=None, invoice_default_surcharge=None, display_name=None, base64_logo_string=None, invoice_logo=None, invoice_logo_mime_type=None, invoice_logo_file_name=None, payment_instructions=None, invoice_number_prefix=None, invoice_number_next_number=None, invoice_number_total_length=None, invoice_email_address=None, inheritable_items=None, inheritable_locations=None, inheritable_receiver_accounts=None, date_created=None, sales_portfolio=None, account_management_portfolio=None, referral_portfolio=None, tier=None, company_tier_id=None, company_tier=None, broker_show_carrier_reference_on_invoice=None, broker_hide_ms_number_on_invoice=None, address_lines_friendly=None, address_friendly=None, default_sort_order=None, default_item_type=None, broker_invoice_notes=None, broker_invoice_email_subject=None, company_carrier_settings=None, tracking_email_type=None, tracking_sms_type=None, support_company_name=None, support_phone=None, support_email=None, support_web_address=None, public_company_display_name=None, default_despatch_time=None, impersonation_message=None, support_logo_file_information_id=None, tracking_show_carrier_reference=None, tracking_show_customer_reference1=None, tracking_show_customer_reference2=None, tracking_show_consignment_number=None, tracking_show_website=None, tracking_show_phone=None, tracking_show_email=None, tracking_show_items=None, invoice_logo_file_information_id=None, navigation_logo_file_information_id=None, consignment_creation_type=None, default_consignment_carrier_selection=None, default_carrier=None, default_service=None, consignment_created_or_updated_class_id=None, consignment_created_or_updated_serialised_settings=None, consignment_manifested_class_id=None, consignment_manifested_serialised_settings=None, dg_enabled=None, emergency_contact_number=None, inheritable_item_types=None, should_hold_for_invoicing=None, should_hold_for_reconciliation=None, invoice_integration_type=None, external_finance_package_tracking_name=None, allow_auto_consignment_consolidation=None, auto_consignment_consolidation_settings=None, invoice_sending_type=None, trading_start_date=None, organisation_id=None, organisation=None, quote_total_display_type=None, quote_total_display_type_inheritable=None, add_manifest_summary_to_manifest_paperwork=None, show_manifest_summary_inheritable=None, gst_number=None, enable_email_notifications=None, notification_email_address=None, default_invoice_wrapping_type=None, is_disabled=None, recurring_billing_charge_description=None, recurring_billing_charge_amount=None, tracking_url=None, question_ids=None, tracking_page_type=None, tracking_hex_colour=None, tracking_page_extra_information_template=None, tracking_show_hex_colour=None, tracking_show_template=None, international_enabled=None, hide_carrier_item_type_on_invoice=None):  # noqa: E501
        """Company - a model defined in Swagger"""  # noqa: E501
        self._location_id = None
        self._location = None
        self._parent_company_id = None
        self._parent_company = None
        self._billing_parent_company_id = None
        self._billing_parent_company = None
        self._notification_forwarding_company_id = None
        self._notification_forwarding_company = None
        self._id = None
        self._company_type = None
        self._enterprise_tier = None
        self._name = None
        self._account_code = None
        self._description = None
        self._children = None
        self._phone = None
        self._fax = None
        self._email = None
        self._display_email = None
        self._address_line1 = None
        self._address_line2 = None
        self._abn = None
        self._invoice_terms = None
        self._invoice_due_date_type = None
        self._invoice_default_surcharge = None
        self._display_name = None
        self._base64_logo_string = None
        self._invoice_logo = None
        self._invoice_logo_mime_type = None
        self._invoice_logo_file_name = None
        self._payment_instructions = None
        self._invoice_number_prefix = None
        self._invoice_number_next_number = None
        self._invoice_number_total_length = None
        self._invoice_email_address = None
        self._inheritable_items = None
        self._inheritable_locations = None
        self._inheritable_receiver_accounts = None
        self._date_created = None
        self._sales_portfolio = None
        self._account_management_portfolio = None
        self._referral_portfolio = None
        self._tier = None
        self._company_tier_id = None
        self._company_tier = None
        self._broker_show_carrier_reference_on_invoice = None
        self._broker_hide_ms_number_on_invoice = None
        self._address_lines_friendly = None
        self._address_friendly = None
        self._default_sort_order = None
        self._default_item_type = None
        self._broker_invoice_notes = None
        self._broker_invoice_email_subject = None
        self._company_carrier_settings = None
        self._tracking_email_type = None
        self._tracking_sms_type = None
        self._support_company_name = None
        self._support_phone = None
        self._support_email = None
        self._support_web_address = None
        self._public_company_display_name = None
        self._default_despatch_time = None
        self._impersonation_message = None
        self._support_logo_file_information_id = None
        self._tracking_show_carrier_reference = None
        self._tracking_show_customer_reference1 = None
        self._tracking_show_customer_reference2 = None
        self._tracking_show_consignment_number = None
        self._tracking_show_website = None
        self._tracking_show_phone = None
        self._tracking_show_email = None
        self._tracking_show_items = None
        self._invoice_logo_file_information_id = None
        self._navigation_logo_file_information_id = None
        self._consignment_creation_type = None
        self._default_consignment_carrier_selection = None
        self._default_carrier = None
        self._default_service = None
        self._consignment_created_or_updated_class_id = None
        self._consignment_created_or_updated_serialised_settings = None
        self._consignment_manifested_class_id = None
        self._consignment_manifested_serialised_settings = None
        self._dg_enabled = None
        self._emergency_contact_number = None
        self._inheritable_item_types = None
        self._should_hold_for_invoicing = None
        self._should_hold_for_reconciliation = None
        self._invoice_integration_type = None
        self._external_finance_package_tracking_name = None
        self._allow_auto_consignment_consolidation = None
        self._auto_consignment_consolidation_settings = None
        self._invoice_sending_type = None
        self._trading_start_date = None
        self._organisation_id = None
        self._organisation = None
        self._quote_total_display_type = None
        self._quote_total_display_type_inheritable = None
        self._add_manifest_summary_to_manifest_paperwork = None
        self._show_manifest_summary_inheritable = None
        self._gst_number = None
        self._enable_email_notifications = None
        self._notification_email_address = None
        self._default_invoice_wrapping_type = None
        self._is_disabled = None
        self._recurring_billing_charge_description = None
        self._recurring_billing_charge_amount = None
        self._tracking_url = None
        self._question_ids = None
        self._tracking_page_type = None
        self._tracking_hex_colour = None
        self._tracking_page_extra_information_template = None
        self._tracking_show_hex_colour = None
        self._tracking_show_template = None
        self._international_enabled = None
        self._hide_carrier_item_type_on_invoice = None
        self.discriminator = None
        if location_id is not None:
            self.location_id = location_id
        if location is not None:
            self.location = location
        if parent_company_id is not None:
            self.parent_company_id = parent_company_id
        if parent_company is not None:
            self.parent_company = parent_company
        if billing_parent_company_id is not None:
            self.billing_parent_company_id = billing_parent_company_id
        if billing_parent_company is not None:
            self.billing_parent_company = billing_parent_company
        if notification_forwarding_company_id is not None:
            self.notification_forwarding_company_id = notification_forwarding_company_id
        if notification_forwarding_company is not None:
            self.notification_forwarding_company = notification_forwarding_company
        if id is not None:
            self.id = id
        if company_type is not None:
            self.company_type = company_type
        if enterprise_tier is not None:
            self.enterprise_tier = enterprise_tier
        self.name = name
        self.account_code = account_code
        if description is not None:
            self.description = description
        if children is not None:
            self.children = children
        if phone is not None:
            self.phone = phone
        if fax is not None:
            self.fax = fax
        self.email = email
        self.display_email = display_email
        if address_line1 is not None:
            self.address_line1 = address_line1
        if address_line2 is not None:
            self.address_line2 = address_line2
        if abn is not None:
            self.abn = abn
        if invoice_terms is not None:
            self.invoice_terms = invoice_terms
        if invoice_due_date_type is not None:
            self.invoice_due_date_type = invoice_due_date_type
        if invoice_default_surcharge is not None:
            self.invoice_default_surcharge = invoice_default_surcharge
        if display_name is not None:
            self.display_name = display_name
        if base64_logo_string is not None:
            self.base64_logo_string = base64_logo_string
        if invoice_logo is not None:
            self.invoice_logo = invoice_logo
        if invoice_logo_mime_type is not None:
            self.invoice_logo_mime_type = invoice_logo_mime_type
        if invoice_logo_file_name is not None:
            self.invoice_logo_file_name = invoice_logo_file_name
        if payment_instructions is not None:
            self.payment_instructions = payment_instructions
        if invoice_number_prefix is not None:
            self.invoice_number_prefix = invoice_number_prefix
        if invoice_number_next_number is not None:
            self.invoice_number_next_number = invoice_number_next_number
        if invoice_number_total_length is not None:
            self.invoice_number_total_length = invoice_number_total_length
        if invoice_email_address is not None:
            self.invoice_email_address = invoice_email_address
        if inheritable_items is not None:
            self.inheritable_items = inheritable_items
        if inheritable_locations is not None:
            self.inheritable_locations = inheritable_locations
        if inheritable_receiver_accounts is not None:
            self.inheritable_receiver_accounts = inheritable_receiver_accounts
        if date_created is not None:
            self.date_created = date_created
        if sales_portfolio is not None:
            self.sales_portfolio = sales_portfolio
        if account_management_portfolio is not None:
            self.account_management_portfolio = account_management_portfolio
        if referral_portfolio is not None:
            self.referral_portfolio = referral_portfolio
        if tier is not None:
            self.tier = tier
        if company_tier_id is not None:
            self.company_tier_id = company_tier_id
        if company_tier is not None:
            self.company_tier = company_tier
        if broker_show_carrier_reference_on_invoice is not None:
            self.broker_show_carrier_reference_on_invoice = broker_show_carrier_reference_on_invoice
        if broker_hide_ms_number_on_invoice is not None:
            self.broker_hide_ms_number_on_invoice = broker_hide_ms_number_on_invoice
        if address_lines_friendly is not None:
            self.address_lines_friendly = address_lines_friendly
        if address_friendly is not None:
            self.address_friendly = address_friendly
        if default_sort_order is not None:
            self.default_sort_order = default_sort_order
        if default_item_type is not None:
            self.default_item_type = default_item_type
        if broker_invoice_notes is not None:
            self.broker_invoice_notes = broker_invoice_notes
        if broker_invoice_email_subject is not None:
            self.broker_invoice_email_subject = broker_invoice_email_subject
        if company_carrier_settings is not None:
            self.company_carrier_settings = company_carrier_settings
        if tracking_email_type is not None:
            self.tracking_email_type = tracking_email_type
        if tracking_sms_type is not None:
            self.tracking_sms_type = tracking_sms_type
        if support_company_name is not None:
            self.support_company_name = support_company_name
        if support_phone is not None:
            self.support_phone = support_phone
        if support_email is not None:
            self.support_email = support_email
        if support_web_address is not None:
            self.support_web_address = support_web_address
        if public_company_display_name is not None:
            self.public_company_display_name = public_company_display_name
        if default_despatch_time is not None:
            self.default_despatch_time = default_despatch_time
        if impersonation_message is not None:
            self.impersonation_message = impersonation_message
        if support_logo_file_information_id is not None:
            self.support_logo_file_information_id = support_logo_file_information_id
        if tracking_show_carrier_reference is not None:
            self.tracking_show_carrier_reference = tracking_show_carrier_reference
        if tracking_show_customer_reference1 is not None:
            self.tracking_show_customer_reference1 = tracking_show_customer_reference1
        if tracking_show_customer_reference2 is not None:
            self.tracking_show_customer_reference2 = tracking_show_customer_reference2
        if tracking_show_consignment_number is not None:
            self.tracking_show_consignment_number = tracking_show_consignment_number
        if tracking_show_website is not None:
            self.tracking_show_website = tracking_show_website
        if tracking_show_phone is not None:
            self.tracking_show_phone = tracking_show_phone
        if tracking_show_email is not None:
            self.tracking_show_email = tracking_show_email
        if tracking_show_items is not None:
            self.tracking_show_items = tracking_show_items
        if invoice_logo_file_information_id is not None:
            self.invoice_logo_file_information_id = invoice_logo_file_information_id
        if navigation_logo_file_information_id is not None:
            self.navigation_logo_file_information_id = navigation_logo_file_information_id
        if consignment_creation_type is not None:
            self.consignment_creation_type = consignment_creation_type
        if default_consignment_carrier_selection is not None:
            self.default_consignment_carrier_selection = default_consignment_carrier_selection
        if default_carrier is not None:
            self.default_carrier = default_carrier
        if default_service is not None:
            self.default_service = default_service
        if consignment_created_or_updated_class_id is not None:
            self.consignment_created_or_updated_class_id = consignment_created_or_updated_class_id
        if consignment_created_or_updated_serialised_settings is not None:
            self.consignment_created_or_updated_serialised_settings = consignment_created_or_updated_serialised_settings
        if consignment_manifested_class_id is not None:
            self.consignment_manifested_class_id = consignment_manifested_class_id
        if consignment_manifested_serialised_settings is not None:
            self.consignment_manifested_serialised_settings = consignment_manifested_serialised_settings
        if dg_enabled is not None:
            self.dg_enabled = dg_enabled
        if emergency_contact_number is not None:
            self.emergency_contact_number = emergency_contact_number
        if inheritable_item_types is not None:
            self.inheritable_item_types = inheritable_item_types
        if should_hold_for_invoicing is not None:
            self.should_hold_for_invoicing = should_hold_for_invoicing
        if should_hold_for_reconciliation is not None:
            self.should_hold_for_reconciliation = should_hold_for_reconciliation
        if invoice_integration_type is not None:
            self.invoice_integration_type = invoice_integration_type
        if external_finance_package_tracking_name is not None:
            self.external_finance_package_tracking_name = external_finance_package_tracking_name
        if allow_auto_consignment_consolidation is not None:
            self.allow_auto_consignment_consolidation = allow_auto_consignment_consolidation
        if auto_consignment_consolidation_settings is not None:
            self.auto_consignment_consolidation_settings = auto_consignment_consolidation_settings
        if invoice_sending_type is not None:
            self.invoice_sending_type = invoice_sending_type
        if trading_start_date is not None:
            self.trading_start_date = trading_start_date
        if organisation_id is not None:
            self.organisation_id = organisation_id
        if organisation is not None:
            self.organisation = organisation
        if quote_total_display_type is not None:
            self.quote_total_display_type = quote_total_display_type
        if quote_total_display_type_inheritable is not None:
            self.quote_total_display_type_inheritable = quote_total_display_type_inheritable
        if add_manifest_summary_to_manifest_paperwork is not None:
            self.add_manifest_summary_to_manifest_paperwork = add_manifest_summary_to_manifest_paperwork
        if show_manifest_summary_inheritable is not None:
            self.show_manifest_summary_inheritable = show_manifest_summary_inheritable
        if gst_number is not None:
            self.gst_number = gst_number
        if enable_email_notifications is not None:
            self.enable_email_notifications = enable_email_notifications
        if notification_email_address is not None:
            self.notification_email_address = notification_email_address
        if default_invoice_wrapping_type is not None:
            self.default_invoice_wrapping_type = default_invoice_wrapping_type
        if is_disabled is not None:
            self.is_disabled = is_disabled
        if recurring_billing_charge_description is not None:
            self.recurring_billing_charge_description = recurring_billing_charge_description
        if recurring_billing_charge_amount is not None:
            self.recurring_billing_charge_amount = recurring_billing_charge_amount
        if tracking_url is not None:
            self.tracking_url = tracking_url
        if question_ids is not None:
            self.question_ids = question_ids
        if tracking_page_type is not None:
            self.tracking_page_type = tracking_page_type
        if tracking_hex_colour is not None:
            self.tracking_hex_colour = tracking_hex_colour
        if tracking_page_extra_information_template is not None:
            self.tracking_page_extra_information_template = tracking_page_extra_information_template
        if tracking_show_hex_colour is not None:
            self.tracking_show_hex_colour = tracking_show_hex_colour
        if tracking_show_template is not None:
            self.tracking_show_template = tracking_show_template
        if international_enabled is not None:
            self.international_enabled = international_enabled
        if hide_carrier_item_type_on_invoice is not None:
            self.hide_carrier_item_type_on_invoice = hide_carrier_item_type_on_invoice

    @property
    def location_id(self):
        """Gets the location_id of this Company.  # noqa: E501


        :return: The location_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this Company.


        :param location_id: The location_id of this Company.  # noqa: E501
        :type: int
        """

        self._location_id = location_id

    @property
    def location(self):
        """Gets the location of this Company.  # noqa: E501


        :return: The location of this Company.  # noqa: E501
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Company.


        :param location: The location of this Company.  # noqa: E501
        :type: Location
        """

        self._location = location

    @property
    def parent_company_id(self):
        """Gets the parent_company_id of this Company.  # noqa: E501


        :return: The parent_company_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._parent_company_id

    @parent_company_id.setter
    def parent_company_id(self, parent_company_id):
        """Sets the parent_company_id of this Company.


        :param parent_company_id: The parent_company_id of this Company.  # noqa: E501
        :type: int
        """

        self._parent_company_id = parent_company_id

    @property
    def parent_company(self):
        """Gets the parent_company of this Company.  # noqa: E501


        :return: The parent_company of this Company.  # noqa: E501
        :rtype: CompanyLite
        """
        return self._parent_company

    @parent_company.setter
    def parent_company(self, parent_company):
        """Sets the parent_company of this Company.


        :param parent_company: The parent_company of this Company.  # noqa: E501
        :type: CompanyLite
        """

        self._parent_company = parent_company

    @property
    def billing_parent_company_id(self):
        """Gets the billing_parent_company_id of this Company.  # noqa: E501


        :return: The billing_parent_company_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._billing_parent_company_id

    @billing_parent_company_id.setter
    def billing_parent_company_id(self, billing_parent_company_id):
        """Sets the billing_parent_company_id of this Company.


        :param billing_parent_company_id: The billing_parent_company_id of this Company.  # noqa: E501
        :type: int
        """

        self._billing_parent_company_id = billing_parent_company_id

    @property
    def billing_parent_company(self):
        """Gets the billing_parent_company of this Company.  # noqa: E501


        :return: The billing_parent_company of this Company.  # noqa: E501
        :rtype: CompanyLite
        """
        return self._billing_parent_company

    @billing_parent_company.setter
    def billing_parent_company(self, billing_parent_company):
        """Sets the billing_parent_company of this Company.


        :param billing_parent_company: The billing_parent_company of this Company.  # noqa: E501
        :type: CompanyLite
        """

        self._billing_parent_company = billing_parent_company

    @property
    def notification_forwarding_company_id(self):
        """Gets the notification_forwarding_company_id of this Company.  # noqa: E501


        :return: The notification_forwarding_company_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._notification_forwarding_company_id

    @notification_forwarding_company_id.setter
    def notification_forwarding_company_id(self, notification_forwarding_company_id):
        """Sets the notification_forwarding_company_id of this Company.


        :param notification_forwarding_company_id: The notification_forwarding_company_id of this Company.  # noqa: E501
        :type: int
        """

        self._notification_forwarding_company_id = notification_forwarding_company_id

    @property
    def notification_forwarding_company(self):
        """Gets the notification_forwarding_company of this Company.  # noqa: E501


        :return: The notification_forwarding_company of this Company.  # noqa: E501
        :rtype: CompanyLite
        """
        return self._notification_forwarding_company

    @notification_forwarding_company.setter
    def notification_forwarding_company(self, notification_forwarding_company):
        """Sets the notification_forwarding_company of this Company.


        :param notification_forwarding_company: The notification_forwarding_company of this Company.  # noqa: E501
        :type: CompanyLite
        """

        self._notification_forwarding_company = notification_forwarding_company

    @property
    def id(self):
        """Gets the id of this Company.  # noqa: E501


        :return: The id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Company.


        :param id: The id of this Company.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def company_type(self):
        """Gets the company_type of this Company.  # noqa: E501


        :return: The company_type of this Company.  # noqa: E501
        :rtype: CompanyType
        """
        return self._company_type

    @company_type.setter
    def company_type(self, company_type):
        """Sets the company_type of this Company.


        :param company_type: The company_type of this Company.  # noqa: E501
        :type: CompanyType
        """

        self._company_type = company_type

    @property
    def enterprise_tier(self):
        """Gets the enterprise_tier of this Company.  # noqa: E501


        :return: The enterprise_tier of this Company.  # noqa: E501
        :rtype: EnterpriseTier
        """
        return self._enterprise_tier

    @enterprise_tier.setter
    def enterprise_tier(self, enterprise_tier):
        """Sets the enterprise_tier of this Company.


        :param enterprise_tier: The enterprise_tier of this Company.  # noqa: E501
        :type: EnterpriseTier
        """

        self._enterprise_tier = enterprise_tier

    @property
    def name(self):
        """Gets the name of this Company.  # noqa: E501


        :return: The name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Company.


        :param name: The name of this Company.  # noqa: E501
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def account_code(self):
        """Gets the account_code of this Company.  # noqa: E501


        :return: The account_code of this Company.  # noqa: E501
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this Company.


        :param account_code: The account_code of this Company.  # noqa: E501
        :type: str
        """
        if account_code is None:
            raise ValueError("Invalid value for `account_code`, must not be `None`")  # noqa: E501

        self._account_code = account_code

    @property
    def description(self):
        """Gets the description of this Company.  # noqa: E501


        :return: The description of this Company.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Company.


        :param description: The description of this Company.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def children(self):
        """Gets the children of this Company.  # noqa: E501


        :return: The children of this Company.  # noqa: E501
        :rtype: list[CompanyLiteWithChildren]
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this Company.


        :param children: The children of this Company.  # noqa: E501
        :type: list[CompanyLiteWithChildren]
        """

        self._children = children

    @property
    def phone(self):
        """Gets the phone of this Company.  # noqa: E501


        :return: The phone of this Company.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Company.


        :param phone: The phone of this Company.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def fax(self):
        """Gets the fax of this Company.  # noqa: E501


        :return: The fax of this Company.  # noqa: E501
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this Company.


        :param fax: The fax of this Company.  # noqa: E501
        :type: str
        """

        self._fax = fax

    @property
    def email(self):
        """Gets the email of this Company.  # noqa: E501


        :return: The email of this Company.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Company.


        :param email: The email of this Company.  # noqa: E501
        :type: str
        """
        if email is None:
            raise ValueError("Invalid value for `email`, must not be `None`")  # noqa: E501

        self._email = email

    @property
    def display_email(self):
        """Gets the display_email of this Company.  # noqa: E501


        :return: The display_email of this Company.  # noqa: E501
        :rtype: str
        """
        return self._display_email

    @display_email.setter
    def display_email(self, display_email):
        """Sets the display_email of this Company.


        :param display_email: The display_email of this Company.  # noqa: E501
        :type: str
        """
        if display_email is None:
            raise ValueError("Invalid value for `display_email`, must not be `None`")  # noqa: E501

        self._display_email = display_email

    @property
    def address_line1(self):
        """Gets the address_line1 of this Company.  # noqa: E501


        :return: The address_line1 of this Company.  # noqa: E501
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this Company.


        :param address_line1: The address_line1 of this Company.  # noqa: E501
        :type: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this Company.  # noqa: E501


        :return: The address_line2 of this Company.  # noqa: E501
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this Company.


        :param address_line2: The address_line2 of this Company.  # noqa: E501
        :type: str
        """

        self._address_line2 = address_line2

    @property
    def abn(self):
        """Gets the abn of this Company.  # noqa: E501


        :return: The abn of this Company.  # noqa: E501
        :rtype: str
        """
        return self._abn

    @abn.setter
    def abn(self, abn):
        """Sets the abn of this Company.


        :param abn: The abn of this Company.  # noqa: E501
        :type: str
        """

        self._abn = abn

    @property
    def invoice_terms(self):
        """Gets the invoice_terms of this Company.  # noqa: E501


        :return: The invoice_terms of this Company.  # noqa: E501
        :rtype: int
        """
        return self._invoice_terms

    @invoice_terms.setter
    def invoice_terms(self, invoice_terms):
        """Sets the invoice_terms of this Company.


        :param invoice_terms: The invoice_terms of this Company.  # noqa: E501
        :type: int
        """

        self._invoice_terms = invoice_terms

    @property
    def invoice_due_date_type(self):
        """Gets the invoice_due_date_type of this Company.  # noqa: E501


        :return: The invoice_due_date_type of this Company.  # noqa: E501
        :rtype: InvoiceDueDateType
        """
        return self._invoice_due_date_type

    @invoice_due_date_type.setter
    def invoice_due_date_type(self, invoice_due_date_type):
        """Sets the invoice_due_date_type of this Company.


        :param invoice_due_date_type: The invoice_due_date_type of this Company.  # noqa: E501
        :type: InvoiceDueDateType
        """

        self._invoice_due_date_type = invoice_due_date_type

    @property
    def invoice_default_surcharge(self):
        """Gets the invoice_default_surcharge of this Company.  # noqa: E501


        :return: The invoice_default_surcharge of this Company.  # noqa: E501
        :rtype: float
        """
        return self._invoice_default_surcharge

    @invoice_default_surcharge.setter
    def invoice_default_surcharge(self, invoice_default_surcharge):
        """Sets the invoice_default_surcharge of this Company.


        :param invoice_default_surcharge: The invoice_default_surcharge of this Company.  # noqa: E501
        :type: float
        """

        self._invoice_default_surcharge = invoice_default_surcharge

    @property
    def display_name(self):
        """Gets the display_name of this Company.  # noqa: E501


        :return: The display_name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Company.


        :param display_name: The display_name of this Company.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def base64_logo_string(self):
        """Gets the base64_logo_string of this Company.  # noqa: E501


        :return: The base64_logo_string of this Company.  # noqa: E501
        :rtype: str
        """
        return self._base64_logo_string

    @base64_logo_string.setter
    def base64_logo_string(self, base64_logo_string):
        """Sets the base64_logo_string of this Company.


        :param base64_logo_string: The base64_logo_string of this Company.  # noqa: E501
        :type: str
        """

        self._base64_logo_string = base64_logo_string

    @property
    def invoice_logo(self):
        """Gets the invoice_logo of this Company.  # noqa: E501


        :return: The invoice_logo of this Company.  # noqa: E501
        :rtype: str
        """
        return self._invoice_logo

    @invoice_logo.setter
    def invoice_logo(self, invoice_logo):
        """Sets the invoice_logo of this Company.


        :param invoice_logo: The invoice_logo of this Company.  # noqa: E501
        :type: str
        """

        self._invoice_logo = invoice_logo

    @property
    def invoice_logo_mime_type(self):
        """Gets the invoice_logo_mime_type of this Company.  # noqa: E501


        :return: The invoice_logo_mime_type of this Company.  # noqa: E501
        :rtype: str
        """
        return self._invoice_logo_mime_type

    @invoice_logo_mime_type.setter
    def invoice_logo_mime_type(self, invoice_logo_mime_type):
        """Sets the invoice_logo_mime_type of this Company.


        :param invoice_logo_mime_type: The invoice_logo_mime_type of this Company.  # noqa: E501
        :type: str
        """

        self._invoice_logo_mime_type = invoice_logo_mime_type

    @property
    def invoice_logo_file_name(self):
        """Gets the invoice_logo_file_name of this Company.  # noqa: E501


        :return: The invoice_logo_file_name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._invoice_logo_file_name

    @invoice_logo_file_name.setter
    def invoice_logo_file_name(self, invoice_logo_file_name):
        """Sets the invoice_logo_file_name of this Company.


        :param invoice_logo_file_name: The invoice_logo_file_name of this Company.  # noqa: E501
        :type: str
        """

        self._invoice_logo_file_name = invoice_logo_file_name

    @property
    def payment_instructions(self):
        """Gets the payment_instructions of this Company.  # noqa: E501


        :return: The payment_instructions of this Company.  # noqa: E501
        :rtype: str
        """
        return self._payment_instructions

    @payment_instructions.setter
    def payment_instructions(self, payment_instructions):
        """Sets the payment_instructions of this Company.


        :param payment_instructions: The payment_instructions of this Company.  # noqa: E501
        :type: str
        """

        self._payment_instructions = payment_instructions

    @property
    def invoice_number_prefix(self):
        """Gets the invoice_number_prefix of this Company.  # noqa: E501


        :return: The invoice_number_prefix of this Company.  # noqa: E501
        :rtype: str
        """
        return self._invoice_number_prefix

    @invoice_number_prefix.setter
    def invoice_number_prefix(self, invoice_number_prefix):
        """Sets the invoice_number_prefix of this Company.


        :param invoice_number_prefix: The invoice_number_prefix of this Company.  # noqa: E501
        :type: str
        """

        self._invoice_number_prefix = invoice_number_prefix

    @property
    def invoice_number_next_number(self):
        """Gets the invoice_number_next_number of this Company.  # noqa: E501


        :return: The invoice_number_next_number of this Company.  # noqa: E501
        :rtype: int
        """
        return self._invoice_number_next_number

    @invoice_number_next_number.setter
    def invoice_number_next_number(self, invoice_number_next_number):
        """Sets the invoice_number_next_number of this Company.


        :param invoice_number_next_number: The invoice_number_next_number of this Company.  # noqa: E501
        :type: int
        """

        self._invoice_number_next_number = invoice_number_next_number

    @property
    def invoice_number_total_length(self):
        """Gets the invoice_number_total_length of this Company.  # noqa: E501


        :return: The invoice_number_total_length of this Company.  # noqa: E501
        :rtype: int
        """
        return self._invoice_number_total_length

    @invoice_number_total_length.setter
    def invoice_number_total_length(self, invoice_number_total_length):
        """Sets the invoice_number_total_length of this Company.


        :param invoice_number_total_length: The invoice_number_total_length of this Company.  # noqa: E501
        :type: int
        """

        self._invoice_number_total_length = invoice_number_total_length

    @property
    def invoice_email_address(self):
        """Gets the invoice_email_address of this Company.  # noqa: E501


        :return: The invoice_email_address of this Company.  # noqa: E501
        :rtype: str
        """
        return self._invoice_email_address

    @invoice_email_address.setter
    def invoice_email_address(self, invoice_email_address):
        """Sets the invoice_email_address of this Company.


        :param invoice_email_address: The invoice_email_address of this Company.  # noqa: E501
        :type: str
        """

        self._invoice_email_address = invoice_email_address

    @property
    def inheritable_items(self):
        """Gets the inheritable_items of this Company.  # noqa: E501


        :return: The inheritable_items of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._inheritable_items

    @inheritable_items.setter
    def inheritable_items(self, inheritable_items):
        """Sets the inheritable_items of this Company.


        :param inheritable_items: The inheritable_items of this Company.  # noqa: E501
        :type: bool
        """

        self._inheritable_items = inheritable_items

    @property
    def inheritable_locations(self):
        """Gets the inheritable_locations of this Company.  # noqa: E501


        :return: The inheritable_locations of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._inheritable_locations

    @inheritable_locations.setter
    def inheritable_locations(self, inheritable_locations):
        """Sets the inheritable_locations of this Company.


        :param inheritable_locations: The inheritable_locations of this Company.  # noqa: E501
        :type: bool
        """

        self._inheritable_locations = inheritable_locations

    @property
    def inheritable_receiver_accounts(self):
        """Gets the inheritable_receiver_accounts of this Company.  # noqa: E501


        :return: The inheritable_receiver_accounts of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._inheritable_receiver_accounts

    @inheritable_receiver_accounts.setter
    def inheritable_receiver_accounts(self, inheritable_receiver_accounts):
        """Sets the inheritable_receiver_accounts of this Company.


        :param inheritable_receiver_accounts: The inheritable_receiver_accounts of this Company.  # noqa: E501
        :type: bool
        """

        self._inheritable_receiver_accounts = inheritable_receiver_accounts

    @property
    def date_created(self):
        """Gets the date_created of this Company.  # noqa: E501


        :return: The date_created of this Company.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Company.


        :param date_created: The date_created of this Company.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def sales_portfolio(self):
        """Gets the sales_portfolio of this Company.  # noqa: E501


        :return: The sales_portfolio of this Company.  # noqa: E501
        :rtype: str
        """
        return self._sales_portfolio

    @sales_portfolio.setter
    def sales_portfolio(self, sales_portfolio):
        """Sets the sales_portfolio of this Company.


        :param sales_portfolio: The sales_portfolio of this Company.  # noqa: E501
        :type: str
        """

        self._sales_portfolio = sales_portfolio

    @property
    def account_management_portfolio(self):
        """Gets the account_management_portfolio of this Company.  # noqa: E501


        :return: The account_management_portfolio of this Company.  # noqa: E501
        :rtype: str
        """
        return self._account_management_portfolio

    @account_management_portfolio.setter
    def account_management_portfolio(self, account_management_portfolio):
        """Sets the account_management_portfolio of this Company.


        :param account_management_portfolio: The account_management_portfolio of this Company.  # noqa: E501
        :type: str
        """

        self._account_management_portfolio = account_management_portfolio

    @property
    def referral_portfolio(self):
        """Gets the referral_portfolio of this Company.  # noqa: E501


        :return: The referral_portfolio of this Company.  # noqa: E501
        :rtype: str
        """
        return self._referral_portfolio

    @referral_portfolio.setter
    def referral_portfolio(self, referral_portfolio):
        """Sets the referral_portfolio of this Company.


        :param referral_portfolio: The referral_portfolio of this Company.  # noqa: E501
        :type: str
        """

        self._referral_portfolio = referral_portfolio

    @property
    def tier(self):
        """Gets the tier of this Company.  # noqa: E501


        :return: The tier of this Company.  # noqa: E501
        :rtype: str
        """
        return self._tier

    @tier.setter
    def tier(self, tier):
        """Sets the tier of this Company.


        :param tier: The tier of this Company.  # noqa: E501
        :type: str
        """

        self._tier = tier

    @property
    def company_tier_id(self):
        """Gets the company_tier_id of this Company.  # noqa: E501


        :return: The company_tier_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._company_tier_id

    @company_tier_id.setter
    def company_tier_id(self, company_tier_id):
        """Sets the company_tier_id of this Company.


        :param company_tier_id: The company_tier_id of this Company.  # noqa: E501
        :type: int
        """

        self._company_tier_id = company_tier_id

    @property
    def company_tier(self):
        """Gets the company_tier of this Company.  # noqa: E501


        :return: The company_tier of this Company.  # noqa: E501
        :rtype: CompanyTier
        """
        return self._company_tier

    @company_tier.setter
    def company_tier(self, company_tier):
        """Sets the company_tier of this Company.


        :param company_tier: The company_tier of this Company.  # noqa: E501
        :type: CompanyTier
        """

        self._company_tier = company_tier

    @property
    def broker_show_carrier_reference_on_invoice(self):
        """Gets the broker_show_carrier_reference_on_invoice of this Company.  # noqa: E501


        :return: The broker_show_carrier_reference_on_invoice of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._broker_show_carrier_reference_on_invoice

    @broker_show_carrier_reference_on_invoice.setter
    def broker_show_carrier_reference_on_invoice(self, broker_show_carrier_reference_on_invoice):
        """Sets the broker_show_carrier_reference_on_invoice of this Company.


        :param broker_show_carrier_reference_on_invoice: The broker_show_carrier_reference_on_invoice of this Company.  # noqa: E501
        :type: bool
        """

        self._broker_show_carrier_reference_on_invoice = broker_show_carrier_reference_on_invoice

    @property
    def broker_hide_ms_number_on_invoice(self):
        """Gets the broker_hide_ms_number_on_invoice of this Company.  # noqa: E501


        :return: The broker_hide_ms_number_on_invoice of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._broker_hide_ms_number_on_invoice

    @broker_hide_ms_number_on_invoice.setter
    def broker_hide_ms_number_on_invoice(self, broker_hide_ms_number_on_invoice):
        """Sets the broker_hide_ms_number_on_invoice of this Company.


        :param broker_hide_ms_number_on_invoice: The broker_hide_ms_number_on_invoice of this Company.  # noqa: E501
        :type: bool
        """

        self._broker_hide_ms_number_on_invoice = broker_hide_ms_number_on_invoice

    @property
    def address_lines_friendly(self):
        """Gets the address_lines_friendly of this Company.  # noqa: E501


        :return: The address_lines_friendly of this Company.  # noqa: E501
        :rtype: str
        """
        return self._address_lines_friendly

    @address_lines_friendly.setter
    def address_lines_friendly(self, address_lines_friendly):
        """Sets the address_lines_friendly of this Company.


        :param address_lines_friendly: The address_lines_friendly of this Company.  # noqa: E501
        :type: str
        """

        self._address_lines_friendly = address_lines_friendly

    @property
    def address_friendly(self):
        """Gets the address_friendly of this Company.  # noqa: E501


        :return: The address_friendly of this Company.  # noqa: E501
        :rtype: str
        """
        return self._address_friendly

    @address_friendly.setter
    def address_friendly(self, address_friendly):
        """Sets the address_friendly of this Company.


        :param address_friendly: The address_friendly of this Company.  # noqa: E501
        :type: str
        """

        self._address_friendly = address_friendly

    @property
    def default_sort_order(self):
        """Gets the default_sort_order of this Company.  # noqa: E501


        :return: The default_sort_order of this Company.  # noqa: E501
        :rtype: str
        """
        return self._default_sort_order

    @default_sort_order.setter
    def default_sort_order(self, default_sort_order):
        """Sets the default_sort_order of this Company.


        :param default_sort_order: The default_sort_order of this Company.  # noqa: E501
        :type: str
        """

        self._default_sort_order = default_sort_order

    @property
    def default_item_type(self):
        """Gets the default_item_type of this Company.  # noqa: E501


        :return: The default_item_type of this Company.  # noqa: E501
        :rtype: ItemType
        """
        return self._default_item_type

    @default_item_type.setter
    def default_item_type(self, default_item_type):
        """Sets the default_item_type of this Company.


        :param default_item_type: The default_item_type of this Company.  # noqa: E501
        :type: ItemType
        """

        self._default_item_type = default_item_type

    @property
    def broker_invoice_notes(self):
        """Gets the broker_invoice_notes of this Company.  # noqa: E501


        :return: The broker_invoice_notes of this Company.  # noqa: E501
        :rtype: str
        """
        return self._broker_invoice_notes

    @broker_invoice_notes.setter
    def broker_invoice_notes(self, broker_invoice_notes):
        """Sets the broker_invoice_notes of this Company.


        :param broker_invoice_notes: The broker_invoice_notes of this Company.  # noqa: E501
        :type: str
        """

        self._broker_invoice_notes = broker_invoice_notes

    @property
    def broker_invoice_email_subject(self):
        """Gets the broker_invoice_email_subject of this Company.  # noqa: E501


        :return: The broker_invoice_email_subject of this Company.  # noqa: E501
        :rtype: str
        """
        return self._broker_invoice_email_subject

    @broker_invoice_email_subject.setter
    def broker_invoice_email_subject(self, broker_invoice_email_subject):
        """Sets the broker_invoice_email_subject of this Company.


        :param broker_invoice_email_subject: The broker_invoice_email_subject of this Company.  # noqa: E501
        :type: str
        """

        self._broker_invoice_email_subject = broker_invoice_email_subject

    @property
    def company_carrier_settings(self):
        """Gets the company_carrier_settings of this Company.  # noqa: E501


        :return: The company_carrier_settings of this Company.  # noqa: E501
        :rtype: list[CompanyCarrierSetting]
        """
        return self._company_carrier_settings

    @company_carrier_settings.setter
    def company_carrier_settings(self, company_carrier_settings):
        """Sets the company_carrier_settings of this Company.


        :param company_carrier_settings: The company_carrier_settings of this Company.  # noqa: E501
        :type: list[CompanyCarrierSetting]
        """

        self._company_carrier_settings = company_carrier_settings

    @property
    def tracking_email_type(self):
        """Gets the tracking_email_type of this Company.  # noqa: E501


        :return: The tracking_email_type of this Company.  # noqa: E501
        :rtype: TrackingType
        """
        return self._tracking_email_type

    @tracking_email_type.setter
    def tracking_email_type(self, tracking_email_type):
        """Sets the tracking_email_type of this Company.


        :param tracking_email_type: The tracking_email_type of this Company.  # noqa: E501
        :type: TrackingType
        """

        self._tracking_email_type = tracking_email_type

    @property
    def tracking_sms_type(self):
        """Gets the tracking_sms_type of this Company.  # noqa: E501


        :return: The tracking_sms_type of this Company.  # noqa: E501
        :rtype: TrackingType
        """
        return self._tracking_sms_type

    @tracking_sms_type.setter
    def tracking_sms_type(self, tracking_sms_type):
        """Sets the tracking_sms_type of this Company.


        :param tracking_sms_type: The tracking_sms_type of this Company.  # noqa: E501
        :type: TrackingType
        """

        self._tracking_sms_type = tracking_sms_type

    @property
    def support_company_name(self):
        """Gets the support_company_name of this Company.  # noqa: E501


        :return: The support_company_name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._support_company_name

    @support_company_name.setter
    def support_company_name(self, support_company_name):
        """Sets the support_company_name of this Company.


        :param support_company_name: The support_company_name of this Company.  # noqa: E501
        :type: str
        """

        self._support_company_name = support_company_name

    @property
    def support_phone(self):
        """Gets the support_phone of this Company.  # noqa: E501


        :return: The support_phone of this Company.  # noqa: E501
        :rtype: str
        """
        return self._support_phone

    @support_phone.setter
    def support_phone(self, support_phone):
        """Sets the support_phone of this Company.


        :param support_phone: The support_phone of this Company.  # noqa: E501
        :type: str
        """

        self._support_phone = support_phone

    @property
    def support_email(self):
        """Gets the support_email of this Company.  # noqa: E501


        :return: The support_email of this Company.  # noqa: E501
        :rtype: str
        """
        return self._support_email

    @support_email.setter
    def support_email(self, support_email):
        """Sets the support_email of this Company.


        :param support_email: The support_email of this Company.  # noqa: E501
        :type: str
        """

        self._support_email = support_email

    @property
    def support_web_address(self):
        """Gets the support_web_address of this Company.  # noqa: E501


        :return: The support_web_address of this Company.  # noqa: E501
        :rtype: str
        """
        return self._support_web_address

    @support_web_address.setter
    def support_web_address(self, support_web_address):
        """Sets the support_web_address of this Company.


        :param support_web_address: The support_web_address of this Company.  # noqa: E501
        :type: str
        """

        self._support_web_address = support_web_address

    @property
    def public_company_display_name(self):
        """Gets the public_company_display_name of this Company.  # noqa: E501


        :return: The public_company_display_name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._public_company_display_name

    @public_company_display_name.setter
    def public_company_display_name(self, public_company_display_name):
        """Sets the public_company_display_name of this Company.


        :param public_company_display_name: The public_company_display_name of this Company.  # noqa: E501
        :type: str
        """

        self._public_company_display_name = public_company_display_name

    @property
    def default_despatch_time(self):
        """Gets the default_despatch_time of this Company.  # noqa: E501


        :return: The default_despatch_time of this Company.  # noqa: E501
        :rtype: TimeSpan
        """
        return self._default_despatch_time

    @default_despatch_time.setter
    def default_despatch_time(self, default_despatch_time):
        """Sets the default_despatch_time of this Company.


        :param default_despatch_time: The default_despatch_time of this Company.  # noqa: E501
        :type: TimeSpan
        """

        self._default_despatch_time = default_despatch_time

    @property
    def impersonation_message(self):
        """Gets the impersonation_message of this Company.  # noqa: E501


        :return: The impersonation_message of this Company.  # noqa: E501
        :rtype: str
        """
        return self._impersonation_message

    @impersonation_message.setter
    def impersonation_message(self, impersonation_message):
        """Sets the impersonation_message of this Company.


        :param impersonation_message: The impersonation_message of this Company.  # noqa: E501
        :type: str
        """

        self._impersonation_message = impersonation_message

    @property
    def support_logo_file_information_id(self):
        """Gets the support_logo_file_information_id of this Company.  # noqa: E501


        :return: The support_logo_file_information_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._support_logo_file_information_id

    @support_logo_file_information_id.setter
    def support_logo_file_information_id(self, support_logo_file_information_id):
        """Sets the support_logo_file_information_id of this Company.


        :param support_logo_file_information_id: The support_logo_file_information_id of this Company.  # noqa: E501
        :type: int
        """

        self._support_logo_file_information_id = support_logo_file_information_id

    @property
    def tracking_show_carrier_reference(self):
        """Gets the tracking_show_carrier_reference of this Company.  # noqa: E501


        :return: The tracking_show_carrier_reference of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_carrier_reference

    @tracking_show_carrier_reference.setter
    def tracking_show_carrier_reference(self, tracking_show_carrier_reference):
        """Sets the tracking_show_carrier_reference of this Company.


        :param tracking_show_carrier_reference: The tracking_show_carrier_reference of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_carrier_reference = tracking_show_carrier_reference

    @property
    def tracking_show_customer_reference1(self):
        """Gets the tracking_show_customer_reference1 of this Company.  # noqa: E501


        :return: The tracking_show_customer_reference1 of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_customer_reference1

    @tracking_show_customer_reference1.setter
    def tracking_show_customer_reference1(self, tracking_show_customer_reference1):
        """Sets the tracking_show_customer_reference1 of this Company.


        :param tracking_show_customer_reference1: The tracking_show_customer_reference1 of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_customer_reference1 = tracking_show_customer_reference1

    @property
    def tracking_show_customer_reference2(self):
        """Gets the tracking_show_customer_reference2 of this Company.  # noqa: E501


        :return: The tracking_show_customer_reference2 of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_customer_reference2

    @tracking_show_customer_reference2.setter
    def tracking_show_customer_reference2(self, tracking_show_customer_reference2):
        """Sets the tracking_show_customer_reference2 of this Company.


        :param tracking_show_customer_reference2: The tracking_show_customer_reference2 of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_customer_reference2 = tracking_show_customer_reference2

    @property
    def tracking_show_consignment_number(self):
        """Gets the tracking_show_consignment_number of this Company.  # noqa: E501


        :return: The tracking_show_consignment_number of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_consignment_number

    @tracking_show_consignment_number.setter
    def tracking_show_consignment_number(self, tracking_show_consignment_number):
        """Sets the tracking_show_consignment_number of this Company.


        :param tracking_show_consignment_number: The tracking_show_consignment_number of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_consignment_number = tracking_show_consignment_number

    @property
    def tracking_show_website(self):
        """Gets the tracking_show_website of this Company.  # noqa: E501


        :return: The tracking_show_website of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_website

    @tracking_show_website.setter
    def tracking_show_website(self, tracking_show_website):
        """Sets the tracking_show_website of this Company.


        :param tracking_show_website: The tracking_show_website of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_website = tracking_show_website

    @property
    def tracking_show_phone(self):
        """Gets the tracking_show_phone of this Company.  # noqa: E501


        :return: The tracking_show_phone of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_phone

    @tracking_show_phone.setter
    def tracking_show_phone(self, tracking_show_phone):
        """Sets the tracking_show_phone of this Company.


        :param tracking_show_phone: The tracking_show_phone of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_phone = tracking_show_phone

    @property
    def tracking_show_email(self):
        """Gets the tracking_show_email of this Company.  # noqa: E501


        :return: The tracking_show_email of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_email

    @tracking_show_email.setter
    def tracking_show_email(self, tracking_show_email):
        """Sets the tracking_show_email of this Company.


        :param tracking_show_email: The tracking_show_email of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_email = tracking_show_email

    @property
    def tracking_show_items(self):
        """Gets the tracking_show_items of this Company.  # noqa: E501


        :return: The tracking_show_items of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_items

    @tracking_show_items.setter
    def tracking_show_items(self, tracking_show_items):
        """Sets the tracking_show_items of this Company.


        :param tracking_show_items: The tracking_show_items of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_items = tracking_show_items

    @property
    def invoice_logo_file_information_id(self):
        """Gets the invoice_logo_file_information_id of this Company.  # noqa: E501


        :return: The invoice_logo_file_information_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._invoice_logo_file_information_id

    @invoice_logo_file_information_id.setter
    def invoice_logo_file_information_id(self, invoice_logo_file_information_id):
        """Sets the invoice_logo_file_information_id of this Company.


        :param invoice_logo_file_information_id: The invoice_logo_file_information_id of this Company.  # noqa: E501
        :type: int
        """

        self._invoice_logo_file_information_id = invoice_logo_file_information_id

    @property
    def navigation_logo_file_information_id(self):
        """Gets the navigation_logo_file_information_id of this Company.  # noqa: E501


        :return: The navigation_logo_file_information_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._navigation_logo_file_information_id

    @navigation_logo_file_information_id.setter
    def navigation_logo_file_information_id(self, navigation_logo_file_information_id):
        """Sets the navigation_logo_file_information_id of this Company.


        :param navigation_logo_file_information_id: The navigation_logo_file_information_id of this Company.  # noqa: E501
        :type: int
        """

        self._navigation_logo_file_information_id = navigation_logo_file_information_id

    @property
    def consignment_creation_type(self):
        """Gets the consignment_creation_type of this Company.  # noqa: E501


        :return: The consignment_creation_type of this Company.  # noqa: E501
        :rtype: ConsignmentCreationType
        """
        return self._consignment_creation_type

    @consignment_creation_type.setter
    def consignment_creation_type(self, consignment_creation_type):
        """Sets the consignment_creation_type of this Company.


        :param consignment_creation_type: The consignment_creation_type of this Company.  # noqa: E501
        :type: ConsignmentCreationType
        """

        self._consignment_creation_type = consignment_creation_type

    @property
    def default_consignment_carrier_selection(self):
        """Gets the default_consignment_carrier_selection of this Company.  # noqa: E501


        :return: The default_consignment_carrier_selection of this Company.  # noqa: E501
        :rtype: ConsignmentCarrierSelectionType
        """
        return self._default_consignment_carrier_selection

    @default_consignment_carrier_selection.setter
    def default_consignment_carrier_selection(self, default_consignment_carrier_selection):
        """Sets the default_consignment_carrier_selection of this Company.


        :param default_consignment_carrier_selection: The default_consignment_carrier_selection of this Company.  # noqa: E501
        :type: ConsignmentCarrierSelectionType
        """

        self._default_consignment_carrier_selection = default_consignment_carrier_selection

    @property
    def default_carrier(self):
        """Gets the default_carrier of this Company.  # noqa: E501


        :return: The default_carrier of this Company.  # noqa: E501
        :rtype: int
        """
        return self._default_carrier

    @default_carrier.setter
    def default_carrier(self, default_carrier):
        """Sets the default_carrier of this Company.


        :param default_carrier: The default_carrier of this Company.  # noqa: E501
        :type: int
        """

        self._default_carrier = default_carrier

    @property
    def default_service(self):
        """Gets the default_service of this Company.  # noqa: E501


        :return: The default_service of this Company.  # noqa: E501
        :rtype: int
        """
        return self._default_service

    @default_service.setter
    def default_service(self, default_service):
        """Sets the default_service of this Company.


        :param default_service: The default_service of this Company.  # noqa: E501
        :type: int
        """

        self._default_service = default_service

    @property
    def consignment_created_or_updated_class_id(self):
        """Gets the consignment_created_or_updated_class_id of this Company.  # noqa: E501


        :return: The consignment_created_or_updated_class_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._consignment_created_or_updated_class_id

    @consignment_created_or_updated_class_id.setter
    def consignment_created_or_updated_class_id(self, consignment_created_or_updated_class_id):
        """Sets the consignment_created_or_updated_class_id of this Company.


        :param consignment_created_or_updated_class_id: The consignment_created_or_updated_class_id of this Company.  # noqa: E501
        :type: int
        """

        self._consignment_created_or_updated_class_id = consignment_created_or_updated_class_id

    @property
    def consignment_created_or_updated_serialised_settings(self):
        """Gets the consignment_created_or_updated_serialised_settings of this Company.  # noqa: E501


        :return: The consignment_created_or_updated_serialised_settings of this Company.  # noqa: E501
        :rtype: str
        """
        return self._consignment_created_or_updated_serialised_settings

    @consignment_created_or_updated_serialised_settings.setter
    def consignment_created_or_updated_serialised_settings(self, consignment_created_or_updated_serialised_settings):
        """Sets the consignment_created_or_updated_serialised_settings of this Company.


        :param consignment_created_or_updated_serialised_settings: The consignment_created_or_updated_serialised_settings of this Company.  # noqa: E501
        :type: str
        """

        self._consignment_created_or_updated_serialised_settings = consignment_created_or_updated_serialised_settings

    @property
    def consignment_manifested_class_id(self):
        """Gets the consignment_manifested_class_id of this Company.  # noqa: E501


        :return: The consignment_manifested_class_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._consignment_manifested_class_id

    @consignment_manifested_class_id.setter
    def consignment_manifested_class_id(self, consignment_manifested_class_id):
        """Sets the consignment_manifested_class_id of this Company.


        :param consignment_manifested_class_id: The consignment_manifested_class_id of this Company.  # noqa: E501
        :type: int
        """

        self._consignment_manifested_class_id = consignment_manifested_class_id

    @property
    def consignment_manifested_serialised_settings(self):
        """Gets the consignment_manifested_serialised_settings of this Company.  # noqa: E501


        :return: The consignment_manifested_serialised_settings of this Company.  # noqa: E501
        :rtype: str
        """
        return self._consignment_manifested_serialised_settings

    @consignment_manifested_serialised_settings.setter
    def consignment_manifested_serialised_settings(self, consignment_manifested_serialised_settings):
        """Sets the consignment_manifested_serialised_settings of this Company.


        :param consignment_manifested_serialised_settings: The consignment_manifested_serialised_settings of this Company.  # noqa: E501
        :type: str
        """

        self._consignment_manifested_serialised_settings = consignment_manifested_serialised_settings

    @property
    def dg_enabled(self):
        """Gets the dg_enabled of this Company.  # noqa: E501


        :return: The dg_enabled of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._dg_enabled

    @dg_enabled.setter
    def dg_enabled(self, dg_enabled):
        """Sets the dg_enabled of this Company.


        :param dg_enabled: The dg_enabled of this Company.  # noqa: E501
        :type: bool
        """

        self._dg_enabled = dg_enabled

    @property
    def emergency_contact_number(self):
        """Gets the emergency_contact_number of this Company.  # noqa: E501


        :return: The emergency_contact_number of this Company.  # noqa: E501
        :rtype: str
        """
        return self._emergency_contact_number

    @emergency_contact_number.setter
    def emergency_contact_number(self, emergency_contact_number):
        """Sets the emergency_contact_number of this Company.


        :param emergency_contact_number: The emergency_contact_number of this Company.  # noqa: E501
        :type: str
        """

        self._emergency_contact_number = emergency_contact_number

    @property
    def inheritable_item_types(self):
        """Gets the inheritable_item_types of this Company.  # noqa: E501


        :return: The inheritable_item_types of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._inheritable_item_types

    @inheritable_item_types.setter
    def inheritable_item_types(self, inheritable_item_types):
        """Sets the inheritable_item_types of this Company.


        :param inheritable_item_types: The inheritable_item_types of this Company.  # noqa: E501
        :type: bool
        """

        self._inheritable_item_types = inheritable_item_types

    @property
    def should_hold_for_invoicing(self):
        """Gets the should_hold_for_invoicing of this Company.  # noqa: E501


        :return: The should_hold_for_invoicing of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._should_hold_for_invoicing

    @should_hold_for_invoicing.setter
    def should_hold_for_invoicing(self, should_hold_for_invoicing):
        """Sets the should_hold_for_invoicing of this Company.


        :param should_hold_for_invoicing: The should_hold_for_invoicing of this Company.  # noqa: E501
        :type: bool
        """

        self._should_hold_for_invoicing = should_hold_for_invoicing

    @property
    def should_hold_for_reconciliation(self):
        """Gets the should_hold_for_reconciliation of this Company.  # noqa: E501


        :return: The should_hold_for_reconciliation of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._should_hold_for_reconciliation

    @should_hold_for_reconciliation.setter
    def should_hold_for_reconciliation(self, should_hold_for_reconciliation):
        """Sets the should_hold_for_reconciliation of this Company.


        :param should_hold_for_reconciliation: The should_hold_for_reconciliation of this Company.  # noqa: E501
        :type: bool
        """

        self._should_hold_for_reconciliation = should_hold_for_reconciliation

    @property
    def invoice_integration_type(self):
        """Gets the invoice_integration_type of this Company.  # noqa: E501


        :return: The invoice_integration_type of this Company.  # noqa: E501
        :rtype: InvoiceIntegrationType
        """
        return self._invoice_integration_type

    @invoice_integration_type.setter
    def invoice_integration_type(self, invoice_integration_type):
        """Sets the invoice_integration_type of this Company.


        :param invoice_integration_type: The invoice_integration_type of this Company.  # noqa: E501
        :type: InvoiceIntegrationType
        """

        self._invoice_integration_type = invoice_integration_type

    @property
    def external_finance_package_tracking_name(self):
        """Gets the external_finance_package_tracking_name of this Company.  # noqa: E501


        :return: The external_finance_package_tracking_name of this Company.  # noqa: E501
        :rtype: str
        """
        return self._external_finance_package_tracking_name

    @external_finance_package_tracking_name.setter
    def external_finance_package_tracking_name(self, external_finance_package_tracking_name):
        """Sets the external_finance_package_tracking_name of this Company.


        :param external_finance_package_tracking_name: The external_finance_package_tracking_name of this Company.  # noqa: E501
        :type: str
        """

        self._external_finance_package_tracking_name = external_finance_package_tracking_name

    @property
    def allow_auto_consignment_consolidation(self):
        """Gets the allow_auto_consignment_consolidation of this Company.  # noqa: E501


        :return: The allow_auto_consignment_consolidation of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._allow_auto_consignment_consolidation

    @allow_auto_consignment_consolidation.setter
    def allow_auto_consignment_consolidation(self, allow_auto_consignment_consolidation):
        """Sets the allow_auto_consignment_consolidation of this Company.


        :param allow_auto_consignment_consolidation: The allow_auto_consignment_consolidation of this Company.  # noqa: E501
        :type: bool
        """

        self._allow_auto_consignment_consolidation = allow_auto_consignment_consolidation

    @property
    def auto_consignment_consolidation_settings(self):
        """Gets the auto_consignment_consolidation_settings of this Company.  # noqa: E501


        :return: The auto_consignment_consolidation_settings of this Company.  # noqa: E501
        :rtype: str
        """
        return self._auto_consignment_consolidation_settings

    @auto_consignment_consolidation_settings.setter
    def auto_consignment_consolidation_settings(self, auto_consignment_consolidation_settings):
        """Sets the auto_consignment_consolidation_settings of this Company.


        :param auto_consignment_consolidation_settings: The auto_consignment_consolidation_settings of this Company.  # noqa: E501
        :type: str
        """

        self._auto_consignment_consolidation_settings = auto_consignment_consolidation_settings

    @property
    def invoice_sending_type(self):
        """Gets the invoice_sending_type of this Company.  # noqa: E501


        :return: The invoice_sending_type of this Company.  # noqa: E501
        :rtype: InvoiceSendingType
        """
        return self._invoice_sending_type

    @invoice_sending_type.setter
    def invoice_sending_type(self, invoice_sending_type):
        """Sets the invoice_sending_type of this Company.


        :param invoice_sending_type: The invoice_sending_type of this Company.  # noqa: E501
        :type: InvoiceSendingType
        """

        self._invoice_sending_type = invoice_sending_type

    @property
    def trading_start_date(self):
        """Gets the trading_start_date of this Company.  # noqa: E501


        :return: The trading_start_date of this Company.  # noqa: E501
        :rtype: datetime
        """
        return self._trading_start_date

    @trading_start_date.setter
    def trading_start_date(self, trading_start_date):
        """Sets the trading_start_date of this Company.


        :param trading_start_date: The trading_start_date of this Company.  # noqa: E501
        :type: datetime
        """

        self._trading_start_date = trading_start_date

    @property
    def organisation_id(self):
        """Gets the organisation_id of this Company.  # noqa: E501


        :return: The organisation_id of this Company.  # noqa: E501
        :rtype: int
        """
        return self._organisation_id

    @organisation_id.setter
    def organisation_id(self, organisation_id):
        """Sets the organisation_id of this Company.


        :param organisation_id: The organisation_id of this Company.  # noqa: E501
        :type: int
        """

        self._organisation_id = organisation_id

    @property
    def organisation(self):
        """Gets the organisation of this Company.  # noqa: E501


        :return: The organisation of this Company.  # noqa: E501
        :rtype: Organisation
        """
        return self._organisation

    @organisation.setter
    def organisation(self, organisation):
        """Sets the organisation of this Company.


        :param organisation: The organisation of this Company.  # noqa: E501
        :type: Organisation
        """

        self._organisation = organisation

    @property
    def quote_total_display_type(self):
        """Gets the quote_total_display_type of this Company.  # noqa: E501


        :return: The quote_total_display_type of this Company.  # noqa: E501
        :rtype: QuoteTotalDisplayType
        """
        return self._quote_total_display_type

    @quote_total_display_type.setter
    def quote_total_display_type(self, quote_total_display_type):
        """Sets the quote_total_display_type of this Company.


        :param quote_total_display_type: The quote_total_display_type of this Company.  # noqa: E501
        :type: QuoteTotalDisplayType
        """

        self._quote_total_display_type = quote_total_display_type

    @property
    def quote_total_display_type_inheritable(self):
        """Gets the quote_total_display_type_inheritable of this Company.  # noqa: E501


        :return: The quote_total_display_type_inheritable of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._quote_total_display_type_inheritable

    @quote_total_display_type_inheritable.setter
    def quote_total_display_type_inheritable(self, quote_total_display_type_inheritable):
        """Sets the quote_total_display_type_inheritable of this Company.


        :param quote_total_display_type_inheritable: The quote_total_display_type_inheritable of this Company.  # noqa: E501
        :type: bool
        """

        self._quote_total_display_type_inheritable = quote_total_display_type_inheritable

    @property
    def add_manifest_summary_to_manifest_paperwork(self):
        """Gets the add_manifest_summary_to_manifest_paperwork of this Company.  # noqa: E501


        :return: The add_manifest_summary_to_manifest_paperwork of this Company.  # noqa: E501
        :rtype: ShowManifestSummaryType
        """
        return self._add_manifest_summary_to_manifest_paperwork

    @add_manifest_summary_to_manifest_paperwork.setter
    def add_manifest_summary_to_manifest_paperwork(self, add_manifest_summary_to_manifest_paperwork):
        """Sets the add_manifest_summary_to_manifest_paperwork of this Company.


        :param add_manifest_summary_to_manifest_paperwork: The add_manifest_summary_to_manifest_paperwork of this Company.  # noqa: E501
        :type: ShowManifestSummaryType
        """

        self._add_manifest_summary_to_manifest_paperwork = add_manifest_summary_to_manifest_paperwork

    @property
    def show_manifest_summary_inheritable(self):
        """Gets the show_manifest_summary_inheritable of this Company.  # noqa: E501


        :return: The show_manifest_summary_inheritable of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._show_manifest_summary_inheritable

    @show_manifest_summary_inheritable.setter
    def show_manifest_summary_inheritable(self, show_manifest_summary_inheritable):
        """Sets the show_manifest_summary_inheritable of this Company.


        :param show_manifest_summary_inheritable: The show_manifest_summary_inheritable of this Company.  # noqa: E501
        :type: bool
        """

        self._show_manifest_summary_inheritable = show_manifest_summary_inheritable

    @property
    def gst_number(self):
        """Gets the gst_number of this Company.  # noqa: E501


        :return: The gst_number of this Company.  # noqa: E501
        :rtype: str
        """
        return self._gst_number

    @gst_number.setter
    def gst_number(self, gst_number):
        """Sets the gst_number of this Company.


        :param gst_number: The gst_number of this Company.  # noqa: E501
        :type: str
        """

        self._gst_number = gst_number

    @property
    def enable_email_notifications(self):
        """Gets the enable_email_notifications of this Company.  # noqa: E501


        :return: The enable_email_notifications of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._enable_email_notifications

    @enable_email_notifications.setter
    def enable_email_notifications(self, enable_email_notifications):
        """Sets the enable_email_notifications of this Company.


        :param enable_email_notifications: The enable_email_notifications of this Company.  # noqa: E501
        :type: bool
        """

        self._enable_email_notifications = enable_email_notifications

    @property
    def notification_email_address(self):
        """Gets the notification_email_address of this Company.  # noqa: E501


        :return: The notification_email_address of this Company.  # noqa: E501
        :rtype: str
        """
        return self._notification_email_address

    @notification_email_address.setter
    def notification_email_address(self, notification_email_address):
        """Sets the notification_email_address of this Company.


        :param notification_email_address: The notification_email_address of this Company.  # noqa: E501
        :type: str
        """

        self._notification_email_address = notification_email_address

    @property
    def default_invoice_wrapping_type(self):
        """Gets the default_invoice_wrapping_type of this Company.  # noqa: E501


        :return: The default_invoice_wrapping_type of this Company.  # noqa: E501
        :rtype: InvoiceWrappingType
        """
        return self._default_invoice_wrapping_type

    @default_invoice_wrapping_type.setter
    def default_invoice_wrapping_type(self, default_invoice_wrapping_type):
        """Sets the default_invoice_wrapping_type of this Company.


        :param default_invoice_wrapping_type: The default_invoice_wrapping_type of this Company.  # noqa: E501
        :type: InvoiceWrappingType
        """

        self._default_invoice_wrapping_type = default_invoice_wrapping_type

    @property
    def is_disabled(self):
        """Gets the is_disabled of this Company.  # noqa: E501


        :return: The is_disabled of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._is_disabled

    @is_disabled.setter
    def is_disabled(self, is_disabled):
        """Sets the is_disabled of this Company.


        :param is_disabled: The is_disabled of this Company.  # noqa: E501
        :type: bool
        """

        self._is_disabled = is_disabled

    @property
    def recurring_billing_charge_description(self):
        """Gets the recurring_billing_charge_description of this Company.  # noqa: E501


        :return: The recurring_billing_charge_description of this Company.  # noqa: E501
        :rtype: str
        """
        return self._recurring_billing_charge_description

    @recurring_billing_charge_description.setter
    def recurring_billing_charge_description(self, recurring_billing_charge_description):
        """Sets the recurring_billing_charge_description of this Company.


        :param recurring_billing_charge_description: The recurring_billing_charge_description of this Company.  # noqa: E501
        :type: str
        """

        self._recurring_billing_charge_description = recurring_billing_charge_description

    @property
    def recurring_billing_charge_amount(self):
        """Gets the recurring_billing_charge_amount of this Company.  # noqa: E501


        :return: The recurring_billing_charge_amount of this Company.  # noqa: E501
        :rtype: float
        """
        return self._recurring_billing_charge_amount

    @recurring_billing_charge_amount.setter
    def recurring_billing_charge_amount(self, recurring_billing_charge_amount):
        """Sets the recurring_billing_charge_amount of this Company.


        :param recurring_billing_charge_amount: The recurring_billing_charge_amount of this Company.  # noqa: E501
        :type: float
        """

        self._recurring_billing_charge_amount = recurring_billing_charge_amount

    @property
    def tracking_url(self):
        """Gets the tracking_url of this Company.  # noqa: E501


        :return: The tracking_url of this Company.  # noqa: E501
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this Company.


        :param tracking_url: The tracking_url of this Company.  # noqa: E501
        :type: str
        """

        self._tracking_url = tracking_url

    @property
    def question_ids(self):
        """Gets the question_ids of this Company.  # noqa: E501


        :return: The question_ids of this Company.  # noqa: E501
        :rtype: list[int]
        """
        return self._question_ids

    @question_ids.setter
    def question_ids(self, question_ids):
        """Sets the question_ids of this Company.


        :param question_ids: The question_ids of this Company.  # noqa: E501
        :type: list[int]
        """

        self._question_ids = question_ids

    @property
    def tracking_page_type(self):
        """Gets the tracking_page_type of this Company.  # noqa: E501


        :return: The tracking_page_type of this Company.  # noqa: E501
        :rtype: TrackingPageType
        """
        return self._tracking_page_type

    @tracking_page_type.setter
    def tracking_page_type(self, tracking_page_type):
        """Sets the tracking_page_type of this Company.


        :param tracking_page_type: The tracking_page_type of this Company.  # noqa: E501
        :type: TrackingPageType
        """

        self._tracking_page_type = tracking_page_type

    @property
    def tracking_hex_colour(self):
        """Gets the tracking_hex_colour of this Company.  # noqa: E501


        :return: The tracking_hex_colour of this Company.  # noqa: E501
        :rtype: str
        """
        return self._tracking_hex_colour

    @tracking_hex_colour.setter
    def tracking_hex_colour(self, tracking_hex_colour):
        """Sets the tracking_hex_colour of this Company.


        :param tracking_hex_colour: The tracking_hex_colour of this Company.  # noqa: E501
        :type: str
        """

        self._tracking_hex_colour = tracking_hex_colour

    @property
    def tracking_page_extra_information_template(self):
        """Gets the tracking_page_extra_information_template of this Company.  # noqa: E501


        :return: The tracking_page_extra_information_template of this Company.  # noqa: E501
        :rtype: str
        """
        return self._tracking_page_extra_information_template

    @tracking_page_extra_information_template.setter
    def tracking_page_extra_information_template(self, tracking_page_extra_information_template):
        """Sets the tracking_page_extra_information_template of this Company.


        :param tracking_page_extra_information_template: The tracking_page_extra_information_template of this Company.  # noqa: E501
        :type: str
        """

        self._tracking_page_extra_information_template = tracking_page_extra_information_template

    @property
    def tracking_show_hex_colour(self):
        """Gets the tracking_show_hex_colour of this Company.  # noqa: E501


        :return: The tracking_show_hex_colour of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_hex_colour

    @tracking_show_hex_colour.setter
    def tracking_show_hex_colour(self, tracking_show_hex_colour):
        """Sets the tracking_show_hex_colour of this Company.


        :param tracking_show_hex_colour: The tracking_show_hex_colour of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_hex_colour = tracking_show_hex_colour

    @property
    def tracking_show_template(self):
        """Gets the tracking_show_template of this Company.  # noqa: E501


        :return: The tracking_show_template of this Company.  # noqa: E501
        :rtype: bool
        """
        return self._tracking_show_template

    @tracking_show_template.setter
    def tracking_show_template(self, tracking_show_template):
        """Sets the tracking_show_template of this Company.


        :param tracking_show_template: The tracking_show_template of this Company.  # noqa: E501
        :type: bool
        """

        self._tracking_show_template = tracking_show_template

    @property
    def international_enabled(self):
        """Gets the international_enabled of this Company.  # noqa: E501


        :return: The international_enabled of this Company.  # noqa: E501
        :rtype: InternationalEnabledType
        """
        return self._international_enabled

    @international_enabled.setter
    def international_enabled(self, international_enabled):
        """Sets the international_enabled of this Company.


        :param international_enabled: The international_enabled of this Company.  # noqa: E501
        :type: InternationalEnabledType
        """

        self._international_enabled = international_enabled

    @property
    def hide_carrier_item_type_on_invoice(self):
        """Gets the hide_carrier_item_type_on_invoice of this Company.  # noqa: E501


        :return: The hide_carrier_item_type_on_invoice of this Company.  # noqa: E501
        :rtype: HideCarrierItemTypeOnInvoiceType
        """
        return self._hide_carrier_item_type_on_invoice

    @hide_carrier_item_type_on_invoice.setter
    def hide_carrier_item_type_on_invoice(self, hide_carrier_item_type_on_invoice):
        """Sets the hide_carrier_item_type_on_invoice of this Company.


        :param hide_carrier_item_type_on_invoice: The hide_carrier_item_type_on_invoice of this Company.  # noqa: E501
        :type: HideCarrierItemTypeOnInvoiceType
        """

        self._hide_carrier_item_type_on_invoice = hide_carrier_item_type_on_invoice

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Company, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Company):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
