# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PendingConsignmentV2ForList(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'company_abbreviation': 'str',
        'company_id': 'int',
        'company': 'CompanyV2',
        'carrier_id': 'int',
        'carrier': 'CarrierLite',
        'carrier_account_id': 'int',
        'carrier_account': 'CarrierAccountLite',
        'carrier_service_id': 'int',
        'carrier_service': 'CarrierServiceLite',
        'company_carrier_account_id': 'int',
        'company_carrier_account': 'CompanyCarrierAccountLite',
        'carrier_consignment_id': 'str',
        'carrier_reference': 'str',
        'date_created': 'datetime',
        'despatch_date': 'datetime',
        'from_company_location_id': 'int',
        'from_name': 'str',
        'from_contact': 'str',
        'from_phone': 'str',
        'from_email': 'str',
        'from_address_line1': 'str',
        'from_address_line2': 'str',
        'from_location': 'LocationV2',
        'from_location_id': 'int',
        'from_company_location': 'CompanyLocationV2',
        'to_location': 'LocationV2',
        'to_location_id': 'int',
        'to_company_location_id': 'int',
        'to_company_location': 'CompanyLocationV2',
        'to_name': 'str',
        'to_contact': 'str',
        'to_phone': 'str',
        'to_email': 'str',
        'to_address_line1': 'str',
        'to_address_line2': 'str',
        'special_instructions': 'str',
        'customer_reference': 'str',
        'customer_reference2': 'str',
        'printer_token': 'str',
        'send_tracking_email': 'bool',
        'items': 'list[PendingConsignmentItemV2]',
        'pending_details': 'RawPendingConsignmentDetailsV2',
        'is_test': 'bool',
        'is_international': 'bool',
        'international_from_city': 'str',
        'international_from_postcode': 'str',
        'international_from_province': 'str',
        'from_country_id': 'int',
        'from_country': 'Country',
        'international_to_city': 'str',
        'international_to_postcode': 'str',
        'international_to_province': 'str',
        'to_country_id': 'int',
        'to_country': 'Country',
        'is_active': 'bool',
        'is_dg_consignment': 'bool',
        'consignment_number': 'str',
        'item_count': 'int',
        'total_rows': 'int',
        'consignment_id': 'int',
        'consolidated_into_pending_consignment_id': 'int'
    }

    attribute_map = {
        'id': 'id',
        'company_abbreviation': 'companyAbbreviation',
        'company_id': 'companyId',
        'company': 'company',
        'carrier_id': 'carrierId',
        'carrier': 'carrier',
        'carrier_account_id': 'carrierAccountId',
        'carrier_account': 'carrierAccount',
        'carrier_service_id': 'carrierServiceId',
        'carrier_service': 'carrierService',
        'company_carrier_account_id': 'companyCarrierAccountId',
        'company_carrier_account': 'companyCarrierAccount',
        'carrier_consignment_id': 'carrierConsignmentId',
        'carrier_reference': 'carrierReference',
        'date_created': 'dateCreated',
        'despatch_date': 'despatchDate',
        'from_company_location_id': 'fromCompanyLocationId',
        'from_name': 'fromName',
        'from_contact': 'fromContact',
        'from_phone': 'fromPhone',
        'from_email': 'fromEmail',
        'from_address_line1': 'fromAddressLine1',
        'from_address_line2': 'fromAddressLine2',
        'from_location': 'fromLocation',
        'from_location_id': 'fromLocationId',
        'from_company_location': 'fromCompanyLocation',
        'to_location': 'toLocation',
        'to_location_id': 'toLocationId',
        'to_company_location_id': 'toCompanyLocationId',
        'to_company_location': 'toCompanyLocation',
        'to_name': 'toName',
        'to_contact': 'toContact',
        'to_phone': 'toPhone',
        'to_email': 'toEmail',
        'to_address_line1': 'toAddressLine1',
        'to_address_line2': 'toAddressLine2',
        'special_instructions': 'specialInstructions',
        'customer_reference': 'customerReference',
        'customer_reference2': 'customerReference2',
        'printer_token': 'printerToken',
        'send_tracking_email': 'sendTrackingEmail',
        'items': 'items',
        'pending_details': 'pendingDetails',
        'is_test': 'isTest',
        'is_international': 'isInternational',
        'international_from_city': 'internationalFromCity',
        'international_from_postcode': 'internationalFromPostcode',
        'international_from_province': 'internationalFromProvince',
        'from_country_id': 'fromCountryId',
        'from_country': 'fromCountry',
        'international_to_city': 'internationalToCity',
        'international_to_postcode': 'internationalToPostcode',
        'international_to_province': 'internationalToProvince',
        'to_country_id': 'toCountryId',
        'to_country': 'toCountry',
        'is_active': 'isActive',
        'is_dg_consignment': 'isDgConsignment',
        'consignment_number': 'consignmentNumber',
        'item_count': 'itemCount',
        'total_rows': 'totalRows',
        'consignment_id': 'consignmentId',
        'consolidated_into_pending_consignment_id': 'consolidatedIntoPendingConsignmentId'
    }

    def __init__(self, id=None, company_abbreviation=None, company_id=None, company=None, carrier_id=None, carrier=None, carrier_account_id=None, carrier_account=None, carrier_service_id=None, carrier_service=None, company_carrier_account_id=None, company_carrier_account=None, carrier_consignment_id=None, carrier_reference=None, date_created=None, despatch_date=None, from_company_location_id=None, from_name=None, from_contact=None, from_phone=None, from_email=None, from_address_line1=None, from_address_line2=None, from_location=None, from_location_id=None, from_company_location=None, to_location=None, to_location_id=None, to_company_location_id=None, to_company_location=None, to_name=None, to_contact=None, to_phone=None, to_email=None, to_address_line1=None, to_address_line2=None, special_instructions=None, customer_reference=None, customer_reference2=None, printer_token=None, send_tracking_email=None, items=None, pending_details=None, is_test=None, is_international=None, international_from_city=None, international_from_postcode=None, international_from_province=None, from_country_id=None, from_country=None, international_to_city=None, international_to_postcode=None, international_to_province=None, to_country_id=None, to_country=None, is_active=None, is_dg_consignment=None, consignment_number=None, item_count=None, total_rows=None, consignment_id=None, consolidated_into_pending_consignment_id=None):  # noqa: E501
        """PendingConsignmentV2ForList - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._company_abbreviation = None
        self._company_id = None
        self._company = None
        self._carrier_id = None
        self._carrier = None
        self._carrier_account_id = None
        self._carrier_account = None
        self._carrier_service_id = None
        self._carrier_service = None
        self._company_carrier_account_id = None
        self._company_carrier_account = None
        self._carrier_consignment_id = None
        self._carrier_reference = None
        self._date_created = None
        self._despatch_date = None
        self._from_company_location_id = None
        self._from_name = None
        self._from_contact = None
        self._from_phone = None
        self._from_email = None
        self._from_address_line1 = None
        self._from_address_line2 = None
        self._from_location = None
        self._from_location_id = None
        self._from_company_location = None
        self._to_location = None
        self._to_location_id = None
        self._to_company_location_id = None
        self._to_company_location = None
        self._to_name = None
        self._to_contact = None
        self._to_phone = None
        self._to_email = None
        self._to_address_line1 = None
        self._to_address_line2 = None
        self._special_instructions = None
        self._customer_reference = None
        self._customer_reference2 = None
        self._printer_token = None
        self._send_tracking_email = None
        self._items = None
        self._pending_details = None
        self._is_test = None
        self._is_international = None
        self._international_from_city = None
        self._international_from_postcode = None
        self._international_from_province = None
        self._from_country_id = None
        self._from_country = None
        self._international_to_city = None
        self._international_to_postcode = None
        self._international_to_province = None
        self._to_country_id = None
        self._to_country = None
        self._is_active = None
        self._is_dg_consignment = None
        self._consignment_number = None
        self._item_count = None
        self._total_rows = None
        self._consignment_id = None
        self._consolidated_into_pending_consignment_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if company_abbreviation is not None:
            self.company_abbreviation = company_abbreviation
        if company_id is not None:
            self.company_id = company_id
        if company is not None:
            self.company = company
        if carrier_id is not None:
            self.carrier_id = carrier_id
        if carrier is not None:
            self.carrier = carrier
        if carrier_account_id is not None:
            self.carrier_account_id = carrier_account_id
        if carrier_account is not None:
            self.carrier_account = carrier_account
        if carrier_service_id is not None:
            self.carrier_service_id = carrier_service_id
        if carrier_service is not None:
            self.carrier_service = carrier_service
        if company_carrier_account_id is not None:
            self.company_carrier_account_id = company_carrier_account_id
        if company_carrier_account is not None:
            self.company_carrier_account = company_carrier_account
        if carrier_consignment_id is not None:
            self.carrier_consignment_id = carrier_consignment_id
        if carrier_reference is not None:
            self.carrier_reference = carrier_reference
        if date_created is not None:
            self.date_created = date_created
        if despatch_date is not None:
            self.despatch_date = despatch_date
        if from_company_location_id is not None:
            self.from_company_location_id = from_company_location_id
        if from_name is not None:
            self.from_name = from_name
        if from_contact is not None:
            self.from_contact = from_contact
        if from_phone is not None:
            self.from_phone = from_phone
        if from_email is not None:
            self.from_email = from_email
        if from_address_line1 is not None:
            self.from_address_line1 = from_address_line1
        if from_address_line2 is not None:
            self.from_address_line2 = from_address_line2
        if from_location is not None:
            self.from_location = from_location
        if from_location_id is not None:
            self.from_location_id = from_location_id
        if from_company_location is not None:
            self.from_company_location = from_company_location
        if to_location is not None:
            self.to_location = to_location
        if to_location_id is not None:
            self.to_location_id = to_location_id
        if to_company_location_id is not None:
            self.to_company_location_id = to_company_location_id
        if to_company_location is not None:
            self.to_company_location = to_company_location
        if to_name is not None:
            self.to_name = to_name
        if to_contact is not None:
            self.to_contact = to_contact
        if to_phone is not None:
            self.to_phone = to_phone
        if to_email is not None:
            self.to_email = to_email
        if to_address_line1 is not None:
            self.to_address_line1 = to_address_line1
        if to_address_line2 is not None:
            self.to_address_line2 = to_address_line2
        if special_instructions is not None:
            self.special_instructions = special_instructions
        if customer_reference is not None:
            self.customer_reference = customer_reference
        if customer_reference2 is not None:
            self.customer_reference2 = customer_reference2
        if printer_token is not None:
            self.printer_token = printer_token
        if send_tracking_email is not None:
            self.send_tracking_email = send_tracking_email
        if items is not None:
            self.items = items
        if pending_details is not None:
            self.pending_details = pending_details
        if is_test is not None:
            self.is_test = is_test
        if is_international is not None:
            self.is_international = is_international
        if international_from_city is not None:
            self.international_from_city = international_from_city
        if international_from_postcode is not None:
            self.international_from_postcode = international_from_postcode
        if international_from_province is not None:
            self.international_from_province = international_from_province
        if from_country_id is not None:
            self.from_country_id = from_country_id
        if from_country is not None:
            self.from_country = from_country
        if international_to_city is not None:
            self.international_to_city = international_to_city
        if international_to_postcode is not None:
            self.international_to_postcode = international_to_postcode
        if international_to_province is not None:
            self.international_to_province = international_to_province
        if to_country_id is not None:
            self.to_country_id = to_country_id
        if to_country is not None:
            self.to_country = to_country
        if is_active is not None:
            self.is_active = is_active
        if is_dg_consignment is not None:
            self.is_dg_consignment = is_dg_consignment
        if consignment_number is not None:
            self.consignment_number = consignment_number
        if item_count is not None:
            self.item_count = item_count
        if total_rows is not None:
            self.total_rows = total_rows
        if consignment_id is not None:
            self.consignment_id = consignment_id
        if consolidated_into_pending_consignment_id is not None:
            self.consolidated_into_pending_consignment_id = consolidated_into_pending_consignment_id

    @property
    def id(self):
        """Gets the id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PendingConsignmentV2ForList.


        :param id: The id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def company_abbreviation(self):
        """Gets the company_abbreviation of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The company_abbreviation of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._company_abbreviation

    @company_abbreviation.setter
    def company_abbreviation(self, company_abbreviation):
        """Sets the company_abbreviation of this PendingConsignmentV2ForList.


        :param company_abbreviation: The company_abbreviation of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._company_abbreviation = company_abbreviation

    @property
    def company_id(self):
        """Gets the company_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The company_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this PendingConsignmentV2ForList.


        :param company_id: The company_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def company(self):
        """Gets the company of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The company of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CompanyV2
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this PendingConsignmentV2ForList.


        :param company: The company of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CompanyV2
        """

        self._company = company

    @property
    def carrier_id(self):
        """Gets the carrier_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this PendingConsignmentV2ForList.


        :param carrier_id: The carrier_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._carrier_id = carrier_id

    @property
    def carrier(self):
        """Gets the carrier of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CarrierLite
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this PendingConsignmentV2ForList.


        :param carrier: The carrier of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CarrierLite
        """

        self._carrier = carrier

    @property
    def carrier_account_id(self):
        """Gets the carrier_account_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_account_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._carrier_account_id

    @carrier_account_id.setter
    def carrier_account_id(self, carrier_account_id):
        """Sets the carrier_account_id of this PendingConsignmentV2ForList.


        :param carrier_account_id: The carrier_account_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._carrier_account_id = carrier_account_id

    @property
    def carrier_account(self):
        """Gets the carrier_account of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_account of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CarrierAccountLite
        """
        return self._carrier_account

    @carrier_account.setter
    def carrier_account(self, carrier_account):
        """Sets the carrier_account of this PendingConsignmentV2ForList.


        :param carrier_account: The carrier_account of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CarrierAccountLite
        """

        self._carrier_account = carrier_account

    @property
    def carrier_service_id(self):
        """Gets the carrier_service_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_service_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._carrier_service_id

    @carrier_service_id.setter
    def carrier_service_id(self, carrier_service_id):
        """Sets the carrier_service_id of this PendingConsignmentV2ForList.


        :param carrier_service_id: The carrier_service_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._carrier_service_id = carrier_service_id

    @property
    def carrier_service(self):
        """Gets the carrier_service of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_service of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CarrierServiceLite
        """
        return self._carrier_service

    @carrier_service.setter
    def carrier_service(self, carrier_service):
        """Sets the carrier_service of this PendingConsignmentV2ForList.


        :param carrier_service: The carrier_service of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CarrierServiceLite
        """

        self._carrier_service = carrier_service

    @property
    def company_carrier_account_id(self):
        """Gets the company_carrier_account_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The company_carrier_account_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._company_carrier_account_id

    @company_carrier_account_id.setter
    def company_carrier_account_id(self, company_carrier_account_id):
        """Sets the company_carrier_account_id of this PendingConsignmentV2ForList.


        :param company_carrier_account_id: The company_carrier_account_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._company_carrier_account_id = company_carrier_account_id

    @property
    def company_carrier_account(self):
        """Gets the company_carrier_account of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The company_carrier_account of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CompanyCarrierAccountLite
        """
        return self._company_carrier_account

    @company_carrier_account.setter
    def company_carrier_account(self, company_carrier_account):
        """Sets the company_carrier_account of this PendingConsignmentV2ForList.


        :param company_carrier_account: The company_carrier_account of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CompanyCarrierAccountLite
        """

        self._company_carrier_account = company_carrier_account

    @property
    def carrier_consignment_id(self):
        """Gets the carrier_consignment_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_consignment_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._carrier_consignment_id

    @carrier_consignment_id.setter
    def carrier_consignment_id(self, carrier_consignment_id):
        """Sets the carrier_consignment_id of this PendingConsignmentV2ForList.


        :param carrier_consignment_id: The carrier_consignment_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._carrier_consignment_id = carrier_consignment_id

    @property
    def carrier_reference(self):
        """Gets the carrier_reference of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The carrier_reference of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._carrier_reference

    @carrier_reference.setter
    def carrier_reference(self, carrier_reference):
        """Sets the carrier_reference of this PendingConsignmentV2ForList.


        :param carrier_reference: The carrier_reference of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._carrier_reference = carrier_reference

    @property
    def date_created(self):
        """Gets the date_created of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The date_created of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this PendingConsignmentV2ForList.


        :param date_created: The date_created of this PendingConsignmentV2ForList.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def despatch_date(self):
        """Gets the despatch_date of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The despatch_date of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: datetime
        """
        return self._despatch_date

    @despatch_date.setter
    def despatch_date(self, despatch_date):
        """Sets the despatch_date of this PendingConsignmentV2ForList.


        :param despatch_date: The despatch_date of this PendingConsignmentV2ForList.  # noqa: E501
        :type: datetime
        """

        self._despatch_date = despatch_date

    @property
    def from_company_location_id(self):
        """Gets the from_company_location_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_company_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._from_company_location_id

    @from_company_location_id.setter
    def from_company_location_id(self, from_company_location_id):
        """Sets the from_company_location_id of this PendingConsignmentV2ForList.


        :param from_company_location_id: The from_company_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._from_company_location_id = from_company_location_id

    @property
    def from_name(self):
        """Gets the from_name of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_name of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._from_name

    @from_name.setter
    def from_name(self, from_name):
        """Sets the from_name of this PendingConsignmentV2ForList.


        :param from_name: The from_name of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._from_name = from_name

    @property
    def from_contact(self):
        """Gets the from_contact of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_contact of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._from_contact

    @from_contact.setter
    def from_contact(self, from_contact):
        """Sets the from_contact of this PendingConsignmentV2ForList.


        :param from_contact: The from_contact of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._from_contact = from_contact

    @property
    def from_phone(self):
        """Gets the from_phone of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_phone of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._from_phone

    @from_phone.setter
    def from_phone(self, from_phone):
        """Sets the from_phone of this PendingConsignmentV2ForList.


        :param from_phone: The from_phone of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._from_phone = from_phone

    @property
    def from_email(self):
        """Gets the from_email of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_email of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._from_email

    @from_email.setter
    def from_email(self, from_email):
        """Sets the from_email of this PendingConsignmentV2ForList.


        :param from_email: The from_email of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._from_email = from_email

    @property
    def from_address_line1(self):
        """Gets the from_address_line1 of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_address_line1 of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._from_address_line1

    @from_address_line1.setter
    def from_address_line1(self, from_address_line1):
        """Sets the from_address_line1 of this PendingConsignmentV2ForList.


        :param from_address_line1: The from_address_line1 of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._from_address_line1 = from_address_line1

    @property
    def from_address_line2(self):
        """Gets the from_address_line2 of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_address_line2 of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._from_address_line2

    @from_address_line2.setter
    def from_address_line2(self, from_address_line2):
        """Sets the from_address_line2 of this PendingConsignmentV2ForList.


        :param from_address_line2: The from_address_line2 of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._from_address_line2 = from_address_line2

    @property
    def from_location(self):
        """Gets the from_location of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_location of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: LocationV2
        """
        return self._from_location

    @from_location.setter
    def from_location(self, from_location):
        """Sets the from_location of this PendingConsignmentV2ForList.


        :param from_location: The from_location of this PendingConsignmentV2ForList.  # noqa: E501
        :type: LocationV2
        """

        self._from_location = from_location

    @property
    def from_location_id(self):
        """Gets the from_location_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._from_location_id

    @from_location_id.setter
    def from_location_id(self, from_location_id):
        """Sets the from_location_id of this PendingConsignmentV2ForList.


        :param from_location_id: The from_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._from_location_id = from_location_id

    @property
    def from_company_location(self):
        """Gets the from_company_location of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_company_location of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CompanyLocationV2
        """
        return self._from_company_location

    @from_company_location.setter
    def from_company_location(self, from_company_location):
        """Sets the from_company_location of this PendingConsignmentV2ForList.


        :param from_company_location: The from_company_location of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CompanyLocationV2
        """

        self._from_company_location = from_company_location

    @property
    def to_location(self):
        """Gets the to_location of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_location of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: LocationV2
        """
        return self._to_location

    @to_location.setter
    def to_location(self, to_location):
        """Sets the to_location of this PendingConsignmentV2ForList.


        :param to_location: The to_location of this PendingConsignmentV2ForList.  # noqa: E501
        :type: LocationV2
        """

        self._to_location = to_location

    @property
    def to_location_id(self):
        """Gets the to_location_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._to_location_id

    @to_location_id.setter
    def to_location_id(self, to_location_id):
        """Sets the to_location_id of this PendingConsignmentV2ForList.


        :param to_location_id: The to_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._to_location_id = to_location_id

    @property
    def to_company_location_id(self):
        """Gets the to_company_location_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_company_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._to_company_location_id

    @to_company_location_id.setter
    def to_company_location_id(self, to_company_location_id):
        """Sets the to_company_location_id of this PendingConsignmentV2ForList.


        :param to_company_location_id: The to_company_location_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._to_company_location_id = to_company_location_id

    @property
    def to_company_location(self):
        """Gets the to_company_location of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_company_location of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: CompanyLocationV2
        """
        return self._to_company_location

    @to_company_location.setter
    def to_company_location(self, to_company_location):
        """Sets the to_company_location of this PendingConsignmentV2ForList.


        :param to_company_location: The to_company_location of this PendingConsignmentV2ForList.  # noqa: E501
        :type: CompanyLocationV2
        """

        self._to_company_location = to_company_location

    @property
    def to_name(self):
        """Gets the to_name of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_name of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._to_name

    @to_name.setter
    def to_name(self, to_name):
        """Sets the to_name of this PendingConsignmentV2ForList.


        :param to_name: The to_name of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._to_name = to_name

    @property
    def to_contact(self):
        """Gets the to_contact of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_contact of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._to_contact

    @to_contact.setter
    def to_contact(self, to_contact):
        """Sets the to_contact of this PendingConsignmentV2ForList.


        :param to_contact: The to_contact of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._to_contact = to_contact

    @property
    def to_phone(self):
        """Gets the to_phone of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_phone of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._to_phone

    @to_phone.setter
    def to_phone(self, to_phone):
        """Sets the to_phone of this PendingConsignmentV2ForList.


        :param to_phone: The to_phone of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._to_phone = to_phone

    @property
    def to_email(self):
        """Gets the to_email of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_email of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._to_email

    @to_email.setter
    def to_email(self, to_email):
        """Sets the to_email of this PendingConsignmentV2ForList.


        :param to_email: The to_email of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._to_email = to_email

    @property
    def to_address_line1(self):
        """Gets the to_address_line1 of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_address_line1 of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._to_address_line1

    @to_address_line1.setter
    def to_address_line1(self, to_address_line1):
        """Sets the to_address_line1 of this PendingConsignmentV2ForList.


        :param to_address_line1: The to_address_line1 of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._to_address_line1 = to_address_line1

    @property
    def to_address_line2(self):
        """Gets the to_address_line2 of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_address_line2 of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._to_address_line2

    @to_address_line2.setter
    def to_address_line2(self, to_address_line2):
        """Sets the to_address_line2 of this PendingConsignmentV2ForList.


        :param to_address_line2: The to_address_line2 of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._to_address_line2 = to_address_line2

    @property
    def special_instructions(self):
        """Gets the special_instructions of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The special_instructions of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._special_instructions

    @special_instructions.setter
    def special_instructions(self, special_instructions):
        """Sets the special_instructions of this PendingConsignmentV2ForList.


        :param special_instructions: The special_instructions of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._special_instructions = special_instructions

    @property
    def customer_reference(self):
        """Gets the customer_reference of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The customer_reference of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference

    @customer_reference.setter
    def customer_reference(self, customer_reference):
        """Sets the customer_reference of this PendingConsignmentV2ForList.


        :param customer_reference: The customer_reference of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._customer_reference = customer_reference

    @property
    def customer_reference2(self):
        """Gets the customer_reference2 of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The customer_reference2 of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._customer_reference2

    @customer_reference2.setter
    def customer_reference2(self, customer_reference2):
        """Sets the customer_reference2 of this PendingConsignmentV2ForList.


        :param customer_reference2: The customer_reference2 of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._customer_reference2 = customer_reference2

    @property
    def printer_token(self):
        """Gets the printer_token of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The printer_token of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._printer_token

    @printer_token.setter
    def printer_token(self, printer_token):
        """Sets the printer_token of this PendingConsignmentV2ForList.


        :param printer_token: The printer_token of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._printer_token = printer_token

    @property
    def send_tracking_email(self):
        """Gets the send_tracking_email of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The send_tracking_email of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: bool
        """
        return self._send_tracking_email

    @send_tracking_email.setter
    def send_tracking_email(self, send_tracking_email):
        """Sets the send_tracking_email of this PendingConsignmentV2ForList.


        :param send_tracking_email: The send_tracking_email of this PendingConsignmentV2ForList.  # noqa: E501
        :type: bool
        """

        self._send_tracking_email = send_tracking_email

    @property
    def items(self):
        """Gets the items of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The items of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: list[PendingConsignmentItemV2]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this PendingConsignmentV2ForList.


        :param items: The items of this PendingConsignmentV2ForList.  # noqa: E501
        :type: list[PendingConsignmentItemV2]
        """

        self._items = items

    @property
    def pending_details(self):
        """Gets the pending_details of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The pending_details of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: RawPendingConsignmentDetailsV2
        """
        return self._pending_details

    @pending_details.setter
    def pending_details(self, pending_details):
        """Sets the pending_details of this PendingConsignmentV2ForList.


        :param pending_details: The pending_details of this PendingConsignmentV2ForList.  # noqa: E501
        :type: RawPendingConsignmentDetailsV2
        """

        self._pending_details = pending_details

    @property
    def is_test(self):
        """Gets the is_test of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The is_test of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: bool
        """
        return self._is_test

    @is_test.setter
    def is_test(self, is_test):
        """Sets the is_test of this PendingConsignmentV2ForList.


        :param is_test: The is_test of this PendingConsignmentV2ForList.  # noqa: E501
        :type: bool
        """

        self._is_test = is_test

    @property
    def is_international(self):
        """Gets the is_international of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The is_international of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: bool
        """
        return self._is_international

    @is_international.setter
    def is_international(self, is_international):
        """Sets the is_international of this PendingConsignmentV2ForList.


        :param is_international: The is_international of this PendingConsignmentV2ForList.  # noqa: E501
        :type: bool
        """

        self._is_international = is_international

    @property
    def international_from_city(self):
        """Gets the international_from_city of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The international_from_city of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._international_from_city

    @international_from_city.setter
    def international_from_city(self, international_from_city):
        """Sets the international_from_city of this PendingConsignmentV2ForList.


        :param international_from_city: The international_from_city of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._international_from_city = international_from_city

    @property
    def international_from_postcode(self):
        """Gets the international_from_postcode of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The international_from_postcode of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._international_from_postcode

    @international_from_postcode.setter
    def international_from_postcode(self, international_from_postcode):
        """Sets the international_from_postcode of this PendingConsignmentV2ForList.


        :param international_from_postcode: The international_from_postcode of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._international_from_postcode = international_from_postcode

    @property
    def international_from_province(self):
        """Gets the international_from_province of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The international_from_province of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._international_from_province

    @international_from_province.setter
    def international_from_province(self, international_from_province):
        """Sets the international_from_province of this PendingConsignmentV2ForList.


        :param international_from_province: The international_from_province of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._international_from_province = international_from_province

    @property
    def from_country_id(self):
        """Gets the from_country_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_country_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._from_country_id

    @from_country_id.setter
    def from_country_id(self, from_country_id):
        """Sets the from_country_id of this PendingConsignmentV2ForList.


        :param from_country_id: The from_country_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._from_country_id = from_country_id

    @property
    def from_country(self):
        """Gets the from_country of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The from_country of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: Country
        """
        return self._from_country

    @from_country.setter
    def from_country(self, from_country):
        """Sets the from_country of this PendingConsignmentV2ForList.


        :param from_country: The from_country of this PendingConsignmentV2ForList.  # noqa: E501
        :type: Country
        """

        self._from_country = from_country

    @property
    def international_to_city(self):
        """Gets the international_to_city of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The international_to_city of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._international_to_city

    @international_to_city.setter
    def international_to_city(self, international_to_city):
        """Sets the international_to_city of this PendingConsignmentV2ForList.


        :param international_to_city: The international_to_city of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._international_to_city = international_to_city

    @property
    def international_to_postcode(self):
        """Gets the international_to_postcode of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The international_to_postcode of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._international_to_postcode

    @international_to_postcode.setter
    def international_to_postcode(self, international_to_postcode):
        """Sets the international_to_postcode of this PendingConsignmentV2ForList.


        :param international_to_postcode: The international_to_postcode of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._international_to_postcode = international_to_postcode

    @property
    def international_to_province(self):
        """Gets the international_to_province of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The international_to_province of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._international_to_province

    @international_to_province.setter
    def international_to_province(self, international_to_province):
        """Sets the international_to_province of this PendingConsignmentV2ForList.


        :param international_to_province: The international_to_province of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._international_to_province = international_to_province

    @property
    def to_country_id(self):
        """Gets the to_country_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_country_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._to_country_id

    @to_country_id.setter
    def to_country_id(self, to_country_id):
        """Sets the to_country_id of this PendingConsignmentV2ForList.


        :param to_country_id: The to_country_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._to_country_id = to_country_id

    @property
    def to_country(self):
        """Gets the to_country of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The to_country of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: Country
        """
        return self._to_country

    @to_country.setter
    def to_country(self, to_country):
        """Sets the to_country of this PendingConsignmentV2ForList.


        :param to_country: The to_country of this PendingConsignmentV2ForList.  # noqa: E501
        :type: Country
        """

        self._to_country = to_country

    @property
    def is_active(self):
        """Gets the is_active of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The is_active of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this PendingConsignmentV2ForList.


        :param is_active: The is_active of this PendingConsignmentV2ForList.  # noqa: E501
        :type: bool
        """

        self._is_active = is_active

    @property
    def is_dg_consignment(self):
        """Gets the is_dg_consignment of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The is_dg_consignment of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: bool
        """
        return self._is_dg_consignment

    @is_dg_consignment.setter
    def is_dg_consignment(self, is_dg_consignment):
        """Sets the is_dg_consignment of this PendingConsignmentV2ForList.


        :param is_dg_consignment: The is_dg_consignment of this PendingConsignmentV2ForList.  # noqa: E501
        :type: bool
        """

        self._is_dg_consignment = is_dg_consignment

    @property
    def consignment_number(self):
        """Gets the consignment_number of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The consignment_number of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: str
        """
        return self._consignment_number

    @consignment_number.setter
    def consignment_number(self, consignment_number):
        """Sets the consignment_number of this PendingConsignmentV2ForList.


        :param consignment_number: The consignment_number of this PendingConsignmentV2ForList.  # noqa: E501
        :type: str
        """

        self._consignment_number = consignment_number

    @property
    def item_count(self):
        """Gets the item_count of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The item_count of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this PendingConsignmentV2ForList.


        :param item_count: The item_count of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._item_count = item_count

    @property
    def total_rows(self):
        """Gets the total_rows of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The total_rows of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._total_rows

    @total_rows.setter
    def total_rows(self, total_rows):
        """Sets the total_rows of this PendingConsignmentV2ForList.


        :param total_rows: The total_rows of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._total_rows = total_rows

    @property
    def consignment_id(self):
        """Gets the consignment_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The consignment_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._consignment_id

    @consignment_id.setter
    def consignment_id(self, consignment_id):
        """Sets the consignment_id of this PendingConsignmentV2ForList.


        :param consignment_id: The consignment_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._consignment_id = consignment_id

    @property
    def consolidated_into_pending_consignment_id(self):
        """Gets the consolidated_into_pending_consignment_id of this PendingConsignmentV2ForList.  # noqa: E501


        :return: The consolidated_into_pending_consignment_id of this PendingConsignmentV2ForList.  # noqa: E501
        :rtype: int
        """
        return self._consolidated_into_pending_consignment_id

    @consolidated_into_pending_consignment_id.setter
    def consolidated_into_pending_consignment_id(self, consolidated_into_pending_consignment_id):
        """Sets the consolidated_into_pending_consignment_id of this PendingConsignmentV2ForList.


        :param consolidated_into_pending_consignment_id: The consolidated_into_pending_consignment_id of this PendingConsignmentV2ForList.  # noqa: E501
        :type: int
        """

        self._consolidated_into_pending_consignment_id = consolidated_into_pending_consignment_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PendingConsignmentV2ForList, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PendingConsignmentV2ForList):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
