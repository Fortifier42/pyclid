# coding: utf-8

"""
    Machship API V2

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: V2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CompanyCarrierCustomFieldSetList(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'company_id': 'int',
        'carrier_id': 'int',
        'custom_field_name': 'str',
        'list_of_values': 'str'
    }

    attribute_map = {
        'id': 'id',
        'company_id': 'companyId',
        'carrier_id': 'carrierId',
        'custom_field_name': 'customFieldName',
        'list_of_values': 'listOfValues'
    }

    def __init__(self, id=None, company_id=None, carrier_id=None, custom_field_name=None, list_of_values=None):  # noqa: E501
        """CompanyCarrierCustomFieldSetList - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._company_id = None
        self._carrier_id = None
        self._custom_field_name = None
        self._list_of_values = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if company_id is not None:
            self.company_id = company_id
        if carrier_id is not None:
            self.carrier_id = carrier_id
        if custom_field_name is not None:
            self.custom_field_name = custom_field_name
        if list_of_values is not None:
            self.list_of_values = list_of_values

    @property
    def id(self):
        """Gets the id of this CompanyCarrierCustomFieldSetList.  # noqa: E501


        :return: The id of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CompanyCarrierCustomFieldSetList.


        :param id: The id of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def company_id(self):
        """Gets the company_id of this CompanyCarrierCustomFieldSetList.  # noqa: E501


        :return: The company_id of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CompanyCarrierCustomFieldSetList.


        :param company_id: The company_id of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def carrier_id(self):
        """Gets the carrier_id of this CompanyCarrierCustomFieldSetList.  # noqa: E501


        :return: The carrier_id of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this CompanyCarrierCustomFieldSetList.


        :param carrier_id: The carrier_id of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :type: int
        """

        self._carrier_id = carrier_id

    @property
    def custom_field_name(self):
        """Gets the custom_field_name of this CompanyCarrierCustomFieldSetList.  # noqa: E501


        :return: The custom_field_name of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :rtype: str
        """
        return self._custom_field_name

    @custom_field_name.setter
    def custom_field_name(self, custom_field_name):
        """Sets the custom_field_name of this CompanyCarrierCustomFieldSetList.


        :param custom_field_name: The custom_field_name of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :type: str
        """

        self._custom_field_name = custom_field_name

    @property
    def list_of_values(self):
        """Gets the list_of_values of this CompanyCarrierCustomFieldSetList.  # noqa: E501


        :return: The list_of_values of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :rtype: str
        """
        return self._list_of_values

    @list_of_values.setter
    def list_of_values(self, list_of_values):
        """Sets the list_of_values of this CompanyCarrierCustomFieldSetList.


        :param list_of_values: The list_of_values of this CompanyCarrierCustomFieldSetList.  # noqa: E501
        :type: str
        """

        self._list_of_values = list_of_values

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CompanyCarrierCustomFieldSetList, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CompanyCarrierCustomFieldSetList):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
